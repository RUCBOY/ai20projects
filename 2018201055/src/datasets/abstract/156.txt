Synthetic biology applications often require engineered computing structures, which can be programmed to process the information in a given way. However, programming of these structures usually requires significant amount of trial-and-error genetic engineering. This process is to some degree analogous to the design of application-specific integrated circuits (ASIC) in the domain of digital electronic circuits, which often require complex and time-consuming workflows to obtain a desired response.
We describe a design of programmable biological circuits that can be configured without additional genetic engineering. Their configuration can be changed in vivo, i.e. during the execution of their biological program, simply with an introduction of programming inputs. These, e.g., increase the degradation rates of selected proteins that store the current configuration of the circuit. Programming can be thus performed in the field as in the case of field-programmable gate array (FPGA) circuits, which present an attractive alternative of ASICs in digital electronics.
We describe a basic programmable unit, which we denote configurable (bio)logical block (CBLB) inspired by the architecture of configurable logic blocks (CLBs), basic functional units within the FPGA circuits. The design of a CBLB is based on distributed cellular computing modules, which makes its biological implementation easier to achieve. We establish a computational model of a CBLB and analyse its response with a given set of biologically feasible parameter values. Furthermore, we show that the proposed CBLB design exhibits correct behaviour for a vast range of kinetic parameter values, different population ratios, and as well preserves this response in stochastic simulations.
