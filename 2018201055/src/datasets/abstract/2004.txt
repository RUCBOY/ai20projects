With every passing day, software becomes more and more important to the success of the artifacts that we make, sell, buy, use, and evolve. Software increasingly provides a competitive differentiator for products, ways of tailoring them for various uses and users, and ways of fixing or evolving them without expensive product recalls.
Unfortunately, as software becomes more and more ubiquitous and complex, an increasing number of new computer science (CS) courses in web services, big-data analytics, computing security, and machine learning fill up CS studentsâ€™ schedules, leaving little room for non-CS courses providing skills outside of CS. This paper summarizes our experiences in developing and evolving an MS-level software engineering (MSCS-SE) curriculum that takes I-shaped CS BA graduates and enables them to become sufficiently T-shaped to be able to immediately contribute to overall system definition and development on being hired, and to improve their T-shaped skills along their careers.
Section 2 summarizes the primary origins and problems with an I-shaped software workforce. Section 3 describes the origins, development, and evolution of the USC MSCS-Software Engineering program and its foundation-stone, real-client, 2-semester project course. Section 4 elaborates on the team-project course and its mechanisms for strengthening the transition from I-shaped to T-shaped systems thinking. Section 5 provides conclusions.
