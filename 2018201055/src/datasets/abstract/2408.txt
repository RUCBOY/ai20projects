The implementation of coded mathematical process models is regarded as a cumbersome and challenging task, reasons being that the modeller needs to have expertise both in modelling and computer science. Our ProcessModellerSuite implements a staged approach to modelling starting with the formulation of a context-dependent ontology defining a structure against which the mathematical representation of the principal model components is defined. Process models are then generated by interactively constructing a graph of communicating principle components, which enables the generation of arbitrary complex process models and intermediate storage of customised unit models. This storage of unit models forms the equivalent of the traditional unit-operations libraries, by allowing for insertion of the unit models into other graphs. A task builder combines the information from the graph with the used model components to automatically generate executable program code of the process model, which will be the topic of this paper.
