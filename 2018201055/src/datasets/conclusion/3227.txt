Biological neurons have a binary behavior depending on a threshold. If the threshold is reached, the neuron is triggered and it sends a spike to the next neurons. If it is not reached, nothing is sent. This binary behavior can be exploited in order to design connectionist systems which are able to deal with two-valued logic-based reasoning systems. The current efforts for bridging both methods try to one approach to the other one by the adaptation of some of the features. In this sense, SN P system is a bio-inspired model whose features seem to fit to the target of mixing both approaches.
In this paper, we have proved that SN P systems are able to deal with the semantics of deductive databases even when such systems use negation. Namely, we have proved that the immediate consequence operator can be iteratively computed with such devices by using an appropriate representation. In the case of deductive databases without negation, it is suffices to characterize the fix point semantics, since the immediate consequence operator is monotonic and the least Herbrand model can be computed by a SN P system in a finite number of steps.
In the case of databases which involve negation, the semantics is much more complex. In this paper we have shown that the immediate consequence operator can be computed with SN P systems, but it is not enough for dealing with a complex semantics that involves, e.g., supported, stable and perfect models (see [27]).
Considering the semantics of deductive databases in this bio-inspired model open a new door to further research possibilities. In particular, it should be explored if all the new SN P system variants can offer improvements to the study of database semantics. From a more general point of view, the possibility of using other P system models (not only SN P systems) can be explored. Finally, the development of new efficient membrane computing simulators, based on GPU architectures [29] can be also considered. In such case, the theoretical point of view shown in this paper, where the semantics of databases is explore, would have a practical counterpart.
