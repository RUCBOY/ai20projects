
Theorem 2.10 concludes the features of the degree sequence of a tree with minimal ABC index. This allows us identify n-vertex tree(s) with minimal ABC index up to n = 1100 in 7 days on a single PC. However, as pointed out in Section 3, our algorithm is not yet polynomial time one, and still too powerless for larger n (e.g., n = 5000), even a large workstation group is involved. Hence Theorem 2.10 should be further refined. From Observations 4.2 and 4.3, the following are some possible directions in further investigation of the problem of characterizing n-vertex tree(s) with minimal ABC index.

(1)	Investigating the behavior of d=∑i=1tdi/t with n increases, so as to get better bounds of d for large n. Better bounds of dcan help us refine Theorem 2.10. From Observation 4.2, a much better lower bound of d is expectable for large n.(2)	Trying to obtain a non-trivial lower bound of Δ depending on n and/or t.(3)	Refining the upper bounds of b1, b2, and b4. The bounds in Lemma 2.2 seem too loose. From Observation 4.3 (1) and (2), the tight bounds may be b1, b2 ≤ 2 and b4 ≤ 3.(4)	Proving b4 = n5. Observation 4.3 (4) reveals that b4 = n5 ≤ 3 for 300 ≤ n ≤ 1010. If this is true for all n ≥ 300, then in the n-vertex greedy tree with minimal ABC index, all the t − n6 +  vertices in {v1,v2,⋅⋅⋅, vt} of degree less than 6 are exactly the centers of branches, expect one being the parent of B1(*)-branches if b1 > 0.
