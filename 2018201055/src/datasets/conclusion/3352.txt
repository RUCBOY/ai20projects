Based on the previous results and discussions, some conclusions can be stated:

•There are large individual differences in computational ability (i.e., in CT aptitude) among middle school students, even before they start to learn coding.•The CTt has predictive validity with respect to the grade-point average (GPA) in Informatics, Mathematics and Language. This empirical evidence supports the statement that CT is a ‘new’ cognitive correlate of academic performance.•The CTt has predictive validity with respect to the number of completed levels in Code.org. This empirical evidence supports the statement that CT is a ‘new’ cognitive correlate of programming achievement, at least in ‘block-based’ environments.•The CTt has predictive validity to early distinguish between ‘computational top thinkers’ (i.e., ‘computationally talented’ students) and ‘computational regular thinkers’, when the criterion followed for stating these categories is to accelerate or not from ‘block-based’ to ‘text-based’ programming languages within a ‘self-paced’ learning methodology in the classroom.•The prior criterion is potentially gender biased as middle school girls may not feel like accelerating even if they have the potential ability for it.•‘Computationally talented’ students might need specific tests to be detected, such as the CTt, given that usual problem-solving tests seem to be insensitive to them.•Different individuals cataloged as ‘computationally talented’ can have different styles when they learn ‘text-based’ programming languages through on-line platforms, such as Khan Academy.•‘Computationally talented’ students detected in middle school might have the ability to accelerate around 1 or 2 years in terms of curricular standards.
Then, we consider several implications that derivate from the conclusions above. Firstly, given the predictive validity of the CTt regarding academic performance and programming achievement, it is possible and valuable to administer the test at the beginning of middle school level to early detect students that might probably: (a) be at risk of school failure; (b) have further ‘learning to code’ difficulties. Then, it would be possible to design preventive educational actions for them. Secondly, given the predictive validity of the CTt regarding the detection of ‘computationally talented’ students, it is also valuable to administer the test when starting middle school to early detect students with high-computational ability, who probably will learn faster and could be beneficiated of being accelerated through the computing–coding curriculum. Thus, their extraordinary potential would be reached, and their talent would not be lost.
However, given the gender bias of the criterion followed for stating computational talent, additional approaches should be included to recognize and promote the top female computational thinkers, and to consequently encourage their interest in advancing to ‘text-based’ programming languages. These female approaches should go beyond the mere acceleration in ‘self-paced’ on-line learning contexts, and some of them have been already suggested in the literature specifically for middle school girls, such as the use of: ‘pair programming’ methodology [[82], [83]]; tangible interfaces for learning programming [84]; embodied pedagogical strategies [85]; story-telling contexts for developing CT [64]; or conversational chat-bots [[86], [87]].
Moreover, this paper contributes to the validation process of the CTt, already started in [[17], [21], [22], [23]] and, ultimately, to reinforce the solidity of CT as a psychological construct. In summary, this work provides a validated assessment tool such as the CTt, which will permit to measure, make visible, and attend the natural individual differences in computational ability. Consequently, each and every of the students will be in better conditions to reach as far as their aptitude and motivation allow them. Further investigations should lead the CT research community to deepen in the definition, detection and intervention not only of high-computational abilities (i.e., the right tail), but also of low-computational abilities. All of them must be considered in order to ensure an inclusive CS education.
