The main contribution of this review is an overview of definitions, structural results and fundamental bijections from lattice theory, as well as the description of the main algorithms allowing to generate and to manipulate the related objects: a context – or the binary table of a lattice; an implicational system – or the two canonical bases, direct and non-direct; and more generally a closure system (i.e. a set equipped with a closure operator) from which any lattice can be generated as a closed set lattice or as a concept lattice.
These generation algorithms have been implemented in our Galactic Java library that provides classes to manipulate a context; an implicational system; a lattice and a closure system. The forthcoming version will include a protocol to easily add new data storage format without any code modification. In particular, data could be stored in memory or in a relational database. Pattern structures will also be included to enhance genericity, with a protocol to add new data types without any code modification.
It appears that closure systems play a major role in lattice theory because of the bijective link between lattices and closure systems (via the closed set lattice) and allow to extend the application framework of lattices to those very rich of closure systems, i.e. systems equipped with a closure operator. Indeed, there are closure operators in many areas, be it in logic, databases, combinatorics, or data analysis.
