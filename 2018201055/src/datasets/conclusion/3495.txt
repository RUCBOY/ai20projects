In this paper, we discussed two fast randomized algorithms for the shortest negative cost cycle problem (SNCC) in a directed, weighted graph. As mentioned previously, SNCC is an important problem that finds applications in a number of different domains. The first algorithm is a straightforward randomized algorithm running in time O(m⋅n⋅logn) with probability of success (1−1e). The second algorithm focuses on reducing the number of randomized bits. The algorithms presented in this paper are both faster than the fastest deterministic algorithm [27] for SNCC, in case of sparse networks. It is worth noting that the algorithms proposed in the paper can be implemented in linear space, whereas the deterministic algorithms require quadratic space.
Although the two algorithms appear to be different, they share the following themes:
 
1.Given a vertex on a shortest NCC, it takes O(m⋅|C∗|) time to determine the number of arcs of a shortest NCC.2.If the number of arcs in a shortest NCC is small (e.g., O(logn) on a network with n vertices), then one can perform “parallel” Bellman-Ford searches from each vertex to detect a shortest NCC.3.If the number of arcs in a shortest NCC is large (e.g., Ω(n) on a network with n vertices), then choosing a vertex uniformly and at random results in a vertex from C∗ being picked with high probability.
