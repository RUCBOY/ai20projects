In this paper, we have introduced the Constraint Common Cluster based model (C3 model), to detect the community structure in the temporal and multiplex networks. The key assumption in the proposed model is that there are common cluster structures in the networks. We have also derived an iterative algorithm to optimize the proposed model, which is converge to a stable local optimal solution. We have tested the model on a variety of generated and real world networks, and compared it with some widely used methods, showing its competitive performances in community detection.
In detailed, as our intuitive perception, the common cluster is a useful constraint for community detection in temporal or multiplex networks. Compared with the widely used methods, such as static nonnegative matrix factorization, Multislice, FaceNet, DYNMOGA and so on, either the ComNMF or the C3 model not only shows the competitive performances in the computer generated datas and real world networks, but also has a principled, generated and theoretical comprehension. Based on the assumption, the proposed methods could identify the importance of each node in the networks, as represented in the DBLP example. Also of note, we can analyze the evolution of the temporal communities with the help of other methods as in experiments.
In fact, our proposed method is just designed to detect communities at each snapshot of temporal networks or each slice of multiplex networks based on common cluster structure, which ignore the temporal order of snapshots of temporal networks and the difference of slices of multiplex networks. However, we analyze the evolution of the temporal communities in other methods and validate the multiplex communities based on different ground-truth. We hope to solve this problem better in future.
In addition, there are a number of directions the proposed model could be extended. Firstly, we assume that there is a fixed number of nodes in each slice or snapshot of the network, which is always unrealistic in the real networks, how to extend it, especially in the temporal networks? Secondly, the balance parameters on each slice or snapshot are the same, which is easily to set, and how to automatic setting these parameters based on the observed networks is an interested idea in future. Lastly and most importantly, how to set the number of communities, and how to extend the model to deal the networks with different number of communities in different snapshots or slices? A lot of methods determining the number of communities in static networks have been proposed and extending these methods to the multiplex and temporal networks reasonably will be our next work.
