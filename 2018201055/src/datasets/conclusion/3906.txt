Recognizing how important it is to create tools that help students develop computational thinking, we have tackled the design of a new educational platform based on the LOGO project from MIT. We have named this effort as Phogo. Phogo consists on a robot (referred to as the “Tortoise”) and a high level Python library that simplifies its use. It is possible to assemble the Tortoise at a low cost (around 80 USD per robot) bringing back the original concept of LOGO as a programming language accompanied by a physical robot that can draw.
The advances in computer languages have made LOGO an archaic language, but its principles are still relevant and worth considering. We see Python as a good candidate for the base language used by the students, and the library and the robot software have been designed adopting the principle of “low beginning threshold and no ceiling”. The Phogo library is transparent enough so a Tortoise robot can be controlled by any student after a very brief introduction. At the same time it provides more advanced users with the powerful capabilities of the Python language, a modern programming language that can provide many opportunities to the students thanks to its flourishing community.
Just as the LOGO Turtle, Phogo's Tortoise can move freely on a flat surface and mark its trace with a pen. The Tortoise also has a distance sensor. The use of batteries and Bluetooth wireless communication removes from the experience any cable or tethering restrictions. These features make the Tortoise a valuable tool for teaching computational basics to students, and from there on to explore more advanced matters, as proposed by Prof. Papert and his team when developing LOGO. We have published all of the Phogo documentation (design files, assembly instructions, and teaching resources) in a GitHub repository under free and open licenses.
Compared to previous attempts, Phogo offers many improvements: it is a revision to the original LOGO project, using modern components. Particularly it uses Python, a modern programing language that is more adequate for learning, as it offers a vast on-line community that can provide support and many libraries and expansion opportunities. The introduction of a maker vision to the LOGO original project allows to create more learning opportunities, as the students have access to the electronic components and can take part on the assembly process. This is also an important idea when comparing Phogo to Lego Mindstorms as there is a significant difference in price. Scratch and Phogo are two complementary tools. While Scratch is ideal for young students, Phogo can be more interesting for older students, and it can be a better companion for their further experience with computers. It introduces them to a standard textual programing language, that together with the physical robot makes Phogo more easy to adapt to students with disabilities, giving opportunities to a broader range of potential users.
We have tested Phogo with a group of diverse teenagers without any prior programming knowledge. They were able to learn how to use the Tortoise and how to create some complex programs in just a brief session. The students showed great interest and excitement with the Tortoise and their ability to control it through code. The majority of students were people with physical, cognitive or intellectual disabilities and all of them were able to follow, enjoy and learn as any other student making this an accessible activity to everyone.
The project is going to continue in two directions. First we want to improve the Tortoise by reducing its costs, as presented. The lower the price, the more universally accessible Phogo will become. We want to change the servo motors to stepper motors in order to improve accuracy and remove the need for a gyroscope. We also want to replace the expensive bq ZUM control board with an ESP8266 integrated Wi-Fi module that costs just a fraction (less than 3 USD). This way it will be possible to upload all the software to the Tortoise itself and make it a standalone Wi-Fi device that the students can connect to with any web browser.
We are also very interested in figuring out where is the learning ceiling, the floor and how wide are the walls of Phogo as a teaching resource. That is why we will keep organizing Phogo workshops that can motivate more students. We plan to test for the age ranges where Phogo is valid, as we hope that adults could also benefit from it.
Another possibility is to test combinations of Scratch and Phogo, and see to which extent students benefit from both approaches in conjunction, or if just one of them is enough. We also plan to test how much Phogo increases the students interest in STEM areas and if learning with Phogo has any effect their future career choices.
In our tests we have seen that Phogo can be entertaining for the students for some hours. We also plan to make longer workshops, possibly spread over different weeks, to see if the initial interest continues on and to test if there is a real learning experience that can be quantified. We want to test how different is the learning experience to the ones achieved when using Scrath or Lego Mindstorms. In future workshops, students should take pre and post tests to measure the learning outcome. Another improvement would be to automatically record all the modifications to the files on which the students work, to study the progression and how they explore the different concepts presented.
We think that Phogo offers to students the possibility to learn a popular, real world language (Python) in a progressive and intuitive manner. Python is a useful life companion and students can further explore its possibilities without any limit. In the future we want to see if students are willing to continue their learning without the robot but with other Python libraries, such as those for web programming.
