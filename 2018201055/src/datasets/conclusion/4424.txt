Reproducibility of in silico experiments analyzing life science data is recognized to be a major need. As they provide a means to design and run scientific experiments, scientific workflow systems have a crucial role to play to enhance reproducibility. In this context, the contributions of this paper are five-folds. First, we introduce a set of three use cases, highlighting reproducibility needs in real contexts. Second, we provide a terminology to describe reproducibility levels when scientific workflows are used. Third, we introduce a set of criteria to define reproducibility-friendly workflow systems. Fourth, we have carefully reviewed the literature and evaluated workflow systems and companion tools based on such criteria. Last, we have highlighted challenges of research in this domain.
Ensuring reproducibility and reuse has obviously to face with numerous social issues (willingness to share, following good practices...). However, and most importantly, we have identified key issues, proper to reproducibility and reuse with scientific workflows, which highly depend on progress made in several research fields of computer science. Scientific workflows and their executions have very complex graph structures. Comparing workflows or executions, storing the history of workflows (e.g., to cite the workflows reused), reducing the structure of such graphs to make them more reusable, are directly related to the design of efficient graph algorithms which are key challenges in graph algorithmics and databases. As for chaining the use of workflows (possibly coming from different systems), rewriting a workflow into another equivalent (but more simple) workflow, optimizing a workflow execution while ensuring its repeatability relies on key issues of languages theory and software engineering. Concerning maintainability of pieces of software in the workflow environment, it relies on progress made on software engineering but also possibly in combinatorial algorithmics since the number of combinations of possible new environments may be huge. Last but not least, designing systems to annotate such complex workflows and their executions and then be able to efficiently retrieve, query and compare them based on their annotations relies on progress made in the semantics web, text mining, and database communities.
