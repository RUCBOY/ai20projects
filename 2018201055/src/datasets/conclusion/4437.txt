In this work, we have designed a novel resource definition framework and a method that allows convenient distribution of the application tasks on CPS environments. These contexts are mainly characterized by the diversity and dynamic availability of the computing elements involved. The proposal takes into account feasibility and suitability aspects such as the configuration preferences, variable availability of computing resources in CPS devices, personal and enterprise computers, and additional capabilities coming from cloud services. In addition, the framework supports solutions based on multiple technologies and approaches, combining well-known effective techniques with the latest research results. As a secondary effect, the framework also provides failure tolerance by supporting multiple instances of the different tasks required for the overall distributed application.
This approach offers an application independent solution for integrating computing resources in a flexible way and combining the scheduling possibilities for sharing the processing cost among the CPS nodes: cloud resources are used only when necessary, minimizing utility computing costs and security problems but preserving local resources when those are required for critical processes.
The experiments conducted provide a proof-of-concept prototype of the model and show the feasibility of the method for distributing the application tasks in a CPS environment.
For future research work, further effort must be invested in building a proper predictive model of the available resources, addressed to provide valuable information for increasing the effectiveness of the scheduler component. This a very important challenge for avoiding overload scenarios and properly leveraging the deployed infrastructure.
Another future work line has to do with the network performance analysis for obtaining accurate response times and available bandwidth for sharing the dataflows and tasks in CPS environments.
In addition, for the proposed further research, the experimental design should be completed, integrating other relevant factors, as main memory usage, storage requirements and energy consumption.
