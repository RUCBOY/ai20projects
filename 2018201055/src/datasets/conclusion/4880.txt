Cooperative game theory is a very important topic and it has applications in many disciplines, such as economics, politics, biology, sociology, operations research, and social network analysis. One of the main topics in cooperative game theory is the allocation of the worth of the grand coalition among the players involved in the game, where the Shapley value is the solution concept that is used most often for this purpose. In this sense, the Shapley value is useful when it is necessary to allocate the value that a set of players can achieve if they agree to cooperate. Nevertheless, calculating the Shapley value has been an open topic in game theory, where the complexity of its calculation is generally exponential, although its calculus has been solved well in some particular cases. This is one of the reasons why the Shapley value has not been applied extensively to real and large-scale problems.
As mentioned in the Introduction, the problem of computing Shapley value’s has been studied from two alternative perspectives in recent years: algorithms to compute the Shapley value exactly (e.g., see Bilbao, Fernández, Jiménez Losada, López, 2000, Granot, Kuipers, Chopra, 2002) and algorithms that focus on its approximation, where the main aim is to “estimate” the Shapley value within a reasonable computational time. The second approach has been investigated significantly less often than the first. However, considering the widespread application of game theory in real-world problems, where exact solutions are often not possible, it is necessary to develop algorithms that can facilitate this approximation. It should be noted (as mentioned by Maleki et al., 2014) that the first attempt to estimate the Shapley value for a large class of games was the algorithm proposed by Castro et al. (2009). Other attempts to estimate the Shapley value were mostly for a specific class of problems. Thus, for a real situation and real cooperative game, the Shapley value must be estimated using a sampling approach. For example, Fatima et al. (2006) proposed a randomized polynomial method for approximating the Shapley value of weighted voting and k-majority voting games, while Crama and Leruth (2007) used a Monte Carlo simulation to estimate the Shapley value for a complex voting game. The second well-known approach for estimating the Shapley value for a large class of games was proposed by Maleki et al. (2014), who proposed the use of stratified random sampling to reduce the error estimation in the original method described by Castro et al. They also considered the same strata treated in the present paper.
In order to compare the three algorithms for Shapley value estimation in general games, the symmetric algorithm defined by Castro et al. (2009) and the algorithm proposed by Maleki et al. (2014) require (to obtain better results) that the variabilities of the marginal contributions of all players are similar. Moreover, the symmetric algorithm requires that the marginal contributions do not depend greatly on the positions in which the players arrive. The algorithm proposed by Maleki et al. also requires that the variability of the marginal contributions increases with the size of the coalitions. Our proposed algorithm clearly obtains improvements in situations where the variabilities in the marginal contributions of each player are very different, or in those situations where the variability of the marginal contributions depends greatly on each player’s arrival position (which does not necessarily increase with the size of coalitions, as found with the algorithm proposed by Maleki et al.). In situations where the symmetric algorithms or that proposed by Maleki et al. perform very well, our algorithm does not obtain significantly worse results because we make no assumptions regarding the variability of the marginal contributions.
In this paper, we focused on the Shapley value. It is important to note that the method used to estimate the Shapley value can be extended in a very similar manner to estimate any semivalue.
Finally, in conclusion, we not that the proposed procedure can be computed in a parallel manner because the random estimation process in each stratum does not require information from the other strata. It would not be difficult to obtain a pseudo-code that works in parallel in order to reduce the complexity in a linear manner.
