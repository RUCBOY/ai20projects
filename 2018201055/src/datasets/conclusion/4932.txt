Pattern matching is not only common task in string processing but also in other fields where the pattern(s) need to be found e.g. image processing, artificial intelligence and DNA processing. Computational biology research and development aim to reduce the complexities of biological sequences data, sequencing capacity augmentation, read length raising and enlarging the field of applications. Inspite of the efforts for designing efficient and scalable string matching algorithms, there still exist computational challenges. This thought provoking question since read length l > 20, which is not required to note a specific position in the large genome. Although numerous algorithms exist in the literature for biological data pattern matching, however with the advancement of computing technology it is highly demanding to design state of the art algorithms to cope with challenges. In this paper, we present fast and efficient pattern matching algorithm for DNA sequences. The proposed algorithm utilizes the features of fixed length binary encoding to reduce the complexities in pattern matching. It also uses the concept of multi-threading approach to speed up the processes. On a single CPU, the multithreaded search hasnon-deterministic behavior as there are specific number of threads that show the highest performance. These threads are data dependent; therefore they cannot predetermine the search process. The multithreaded search is merged with distributed processing to minimize the waiting time. The multiple computing machines and multithreaded behavior of multi-threading search show more reliability. Analysis of results shows that our new algorithm EPMA outperforms existing algorithms.
An attention-grabbing conclusion is that various string matching algorithms achieve impressive scalability and efficiency but may be insufficient to fulfill future needs. The plenty literature of pattern matching may still contain other algorithmic solutions, whose discussion has not been evaluated here. However, the advent of multi-core computing machines and parallelization represent future research directions i.e. more investigations are required to develop compression scheme that only needs search for one compressed pattern instead of four compressed patterns. It is also required to enhance the algorithm i.e. to use optimized iteration and advance hash functions to handle condensed alphabet datasets. Another possible research direction is to use factor recognizer instead of suffixes. Moreover, the problem of mapping pairs of sequencing reads is also a challenging issue to be addressed.
