In order to increase efficiency and productivity in a variety of contexts, computer vision systems have been developed and used to classify patterns and detect objects in products and processes. However, many times these systems demand high processing capacity and large data memory, which imposes an extra challenge for embedding those applications. The target application platform, often has resource constraints, such as low memory sizes and low CPU performance, which must be taken into account in the design stages.
The development of machine learning solutions to practical problems on workstations, where there are no limitations of hardware resources, is common but then the exploration of the real constraints to embed these machine learning applications is often left as a future work.
An interesting subset of these applications is targeted to fulfill the necessities of visually impaired persons, and the device is usually a wearable device placed on the user’s body. These wearable devices have certain restrictions, as they require lightweight and long life batteries. This work aims to create a wearable computer vision device for visually impaired persons.
This work presents a design space exploration on a pattern classifier made of a GLCM (Gray Level Co-occurrence Matrix) combined with a SVM (Support Vector Machine) to collaborate with this device. This combination has proven to be effective for many texture identification applications [1], [2], [3].
The entire process was tested on a workstation and on an embedded platform, where a final implementation was assessed. The main contribution of this work is to evaluate and reduce the memory required in the classifier system so that it fits into a low power microcontroller platform, preserving the accuracy obtained in workstations with much larger resources.
This paper is organized as follows: Section 2 describes some of the state-of-the-art-systems that present related works as well as different attempts to embed computer vision systems. Section 3 describes the exploration of this work and results obtained using a workstation. Section 4 shows the results of the classifier in an embedded platform. Section 5 presents the conclusion of the paper and discusses the results obtained.
