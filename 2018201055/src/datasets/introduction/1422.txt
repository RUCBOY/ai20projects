The emergence of parallel computers compels parallel computation techniques into an array of application areas, including groundwater flow, contamination transport modeling, geothermal engineering, multi-phase flow, carbon dioxide sequestration and nuclear waste storage [1]. Beginning in the mid-1970s, supercomputers were introduced to accelerate reservoir modeling problems through vectorization, and computations could be completed at an advanced speed. However, models and programs had to be reorganized and reworked to take advantage of leveraged computational power through vectorization. Besides, the program performance deteriorated once a CPU number went beyond a specific number (usually 4, 8 or 16) [2]. Except on a shared memory system, parallel computations can also be carried out on distributed memory clusters. Over the past few decades, significant progress has been made in developing high performance modeling tools for distributed memory systems. However, they have not been widely applied in reservoir simulations.
On the other hand, the demand for modeling capability has increased rapidly in recent years with an increase in computational efforts. More complex geological, physical and chemical features are modeled through reservoir simulations to assess new exploration and production technologies, such as enhanced recovery processes. In addition, the traditional serial simulators have reached their simulation capability limits. The high performance simulation technology has been progressively viewed as an important, alternative modeling approach to solve large-scale simulation problems with multi-million and even multi-billion block models [3]. The reservoir model is divided into several smaller domains that are assigned to different computer processors. The actual time required to finish the simulation is thus reduced because the work load is divided into multiple processors. Furthermore, parallel reservoir simulators are capable to handle larger models than serial simulators.
Currently most oil production comes from mature fields by water flooding. However, water tends to flow through the more permeable formation zones that causes low sweep efficiency and premature water breakthrough. By applying polymer, the viscosity of the water phase is increased, and, as a result, the mobility of the water phase is reduced, which results in a more favorable fractional flow curve and then leads to a more efficient sweeping pattern and reduced viscous fingering. The mobility reduction of the injected water is due to two main effects. First, the viscosity of a polymer solution is higher than that of pure water (the viscosity of a polymer solution increases with raising polymer concentration). Second, the permeability to water is reduced after the passage of a polymer solution through rock materials (the permeability to oil is, however, largely unaffected). Both effects reduce the water mobility while the oil mobility is unaltered.
Polymer flooding holds a bright future because it can improve the area swept efficiency not only in the macro scale but also in the micro scale. The first polymer flooding application was reported in 1964 [4], [5]. The development of polymer flooding boomed in the US during the 1970s and 1980s with several polymer flooding projects [6]. However, it declined in the late 1980s because of low oil prices. During the middle 1990s, polymer flooding was resumed in China to large extent. Especially, oil production from polymer flooding contributed to 22.3% of the total oil production in the Daqing oilfield by 2007 [7], [8]. This significance has attracted the petroleum industry's interest in using reservoir simulators as tools for reservoir evaluation and management to minimize operation costs and increase the process efficiency [9], [10]. Reservoir simulators with special features are needed to represent coupled chemical and physical phenomena present in polymer processes.
Polymer flooding is in reality a miscible process, but it is typically simulated on a field scale using immiscible flow models which use empirical mixture models to account for unresolved miscibility effects. Bondor [11] presented the development of a three-phase, four-component, compressible, finite difference polymer simulator. The model represented a polymer solution as a fourth component that was included in the aqueous phase and was fully miscible with the water phase. Adsorption of polymer was represented as well as the permeability reduction of the water phase. An implicit pressure-explicit saturation (IMPES) procedure was used to solve the coupled system. Lutchmansingh [12] extended this simulator by solving pressure and saturation distributions simultaneously and polymer concentration explicitly. Based on Lutchmansingh's work, Abou-Kassem [13] eliminated non-relevant equations and unknowns by properly ordering the set of all equations and unknowns, thus providing significant savings in CPU time. Chang [14] implemented a third-order finite difference method to capture a physical dispersion effect which is normally smeared by artificial numerical dispersion. An IMPEC (implicit pressure-explicit concentration) scheme was adapted to solve an isothermal, three-dimensional, miscible-flooding compositional model. The simulator is well known as UTCOMP. Han [15] improved the solution approach by fully implicit scheme to overcome the performance limitation in symbiosis with the explicit scheme. A field scale chemical flooding model with one million grid blocks were simulated using 128 processors. Based on Han's work, Najafabadi [16] enhanced the phase behavior of surfactant/oil/brine to simulate the realistic salinity gradient effect by assuming no gas phase existing through the formation. Patacchini [17] introduced two-stage flash and two-stage thermodynamics constraints to consider gas/oil/water/microemulsion coexisting four phase problem. Their approach was dependent on a compositional natural-variable formulation. Behzadinasab [18] presented the parallel framework of a comprehensive chemical reservoir simulator that can be effective in running large-scale cases with millions of grid blocks.
To capture fine-scale phenomena and optimize a polymer flooding process, large-scale reservoir simulations with fine-scale grids are required. In this paper, a fully implicit parallel polymer flooding reservoir simulator has been developed to address these issues. The mathematical model of polymer flooding is introduced, including the conservation laws for water, oil and polymer, mechanisms of polymer flooding, and well modeling in the following section that followed by a section where numerical methods are presented. The upstream finite difference (volume) method is applied to discretize the model equations. The standard Newton is applied for their highly nonlinear systems. Linear systems from polymer flooding are ill-conditioned, especially when a reservoir has heterogeneous porosity and permeability. In this case, the linear systems are difficult to solve. In our simulator, a multi-stage preconditioner is employed to speed up the system solution. Parallel implementations are also introduced. Different polymer flooding cases are used to illustrate the accuracy and speedup of our simulator. The results show that this polymer flooding simulator has good speedup and capacity to simulate large-scale reservoir models.
