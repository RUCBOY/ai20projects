Recently, the mathematical matrices and arrays have become the most important programming mathematical tools in different computer disciplines (such image processing, computer organization, data-mining, pattern-recognition and artificial intelligent… etc.) [1]. The programmers rely on utilizing the arrays and matrices operations into their software program language with high precision to enhance their program applications by the parallelism technique [2]. The most software languages (like Matlab and C) have different matrices operations. However, according to some critical situations, the programmers resort to divide the great matrices into small ones using nested loops (rows and columns).
The first situation happens when the program application handles great data inside a matrix through a limited capacity of temporary memory in a computer system (such as an embedded system contains small memory).
For instance, the artificial neural network (ANN) applications and systems are gathering the data from many resources into mathematical matrices to carry out all their processing in parallel [3]. The nature and capability of their artificial intelligence are identifying depending on their processing algorithms through the matrices.
Moreover, many image-processing applications used the matrices operations to modify the images through them [4].
In the last mentioned cases, the programmers have to utilize the technique of tiling the matrices. The tiling is a separation process of original matrix into blocks of square or/and rectangle submatrices based on the optimization technique of the nested loops (loop transformations) [5]. The size of tiled blocks is determined depending on the available capacity of memory. In this case, the application has iterative capability for handling sequential of tiled submatrices (partials of a great matrix) individually across the limited memory.
The second situation occurs when the program manipulate huge of data in matrices through multicores or multithreads processor(s). The programmers ought to utilize the tiling technique of matrices. The total number and size of tiled blocks is calculated depending on the execution possibility of the processor. In this case, the application can carry out many tiled submatrices simultaneously via multiple cores or threads.
The third situation appears during performing matrices operations among dissimilar matrices dimensions. In this case, using common nest loop(s) only is not enough to solve this problem. Because the nested loop has identical limitation (number of rows and columns) for all used matrices inside it. Thus, the programmers resort to handle the irregular dimension matrices by using the common lowest number or rows and columns for all used matrices).
In spite, this software solution is the easiest method, but it wastes and losses of many data-elements to regulate the input-matrices in common nest loop. For example, the two matrices (A and B) as shown in the Fig. 1 have different dimensions (4 × 2 and 2 × 5 respectively). In case of using an operation opthrough a nest loop with the lowest number of their rows and columns, will outputs matrix C with dimension (2 × 2) and many data will be neglected.Download : Download high-res image (61KB)Download : Download full-size imageFig. 1. The output matrix between 2 dissimilar dimension matrices.
Therefore, two main methods (or combination between them) can be introduced to solve the last mentioned problem in the nested loop among irregular matrices' dimensions. The first method handles the disparate dimensions of matrices in three steps. Firstly supplementing (joining) the input matrices with element pads, secondly perform the required matrices operations, and finally eliminate the unnecessary pads (if necessary).
For more illustration, assume two different dimensions matrices (A and B) as demonstrate in the Fig. 2. Firstly, both matrices supplement with pads (with identity elements) to have the same dimensions in rows and columns (4 × 5). The second step is utilizing the nest loop(s) to carry out the adequate operation(s) between the two similar dimension matrices. It is clear that the most matrices-operations output matrices with similar dimensions as the input matrices (like the element-to-corresponding-element operations such as ADD, SUB, logical operations… etc.). In other hand, few operations output different matrices dimensions (like the matrix multiplication and transposing). Thus, according to the required application, the programmers can eliminate the unnecessary data elements that derived from the pads in the last step.Download : Download high-res image (155KB)Download : Download full-size imageFig. 2. Carrying out the first method.
The second method to manipulate the different dimension matrices consists of three steps. The first step is separating the input matrices into two or more sub-matrices. Secondly, performing the matrices operations among the analogous matrices dimension, and finally joining the output-manipulated submatrices with their relevant necessary pads. For more description, assume two different dimension matrices (A and B) as illustrate in the Fig. 3. The first step is responsible for dividing (separating) the original input matrices into two submatrices. The second step is carrying out the operation (Op) among the similar dimensions (2 × 2) of the submatrices while the last step joining the output matrix with the un-manipulated submatrices (A2andB2).Download : Download high-res image (179KB)Download : Download full-size imageFig. 3. Carrying out the second method.
In many researching and innovation issues, the designers and programmers need to transform their software programs from program models to mathematical models (converting their code into mathematical formulas) to satisfy two major tasks [6]. Firstly is exploiting the capability of appropriate mathematical theories to modify their application and then reconvert it again to program code. Secondly, is evaluating and analyzing the current and future behaviors mathematically for their software application through standard and approval mathematical equations and expressions. A great problem appears when they begin to transfer the procedure of reforming matrices dimensions (tiling, separating, dividing, joining and so on) from programming language domain to mathematical domain. They observe that there is not available reliable mathematical operation(s) to compile the reshaping matrices dimensions from programming code to mathematical model [7].
The programmers try to finding the optimal solution to solve this problem. However, the programmers stand helpless for formulating the reshaping of their software matrices into suitable mathematical formulas. The programmers asked the mathematicians “are there mathematical operations to carry out either matrix separation or matrices joining?” They answered, “No”. The programmers asked again the mathematicians “Why?” The mathematicians answered, “The mathematical scientist are more interested in the nature of matrices' entries and the scalar operations among elements than reshaping of matrices' dimensions ”Once again, they asked the mathematicians “Who responsible for exploring proper mathematical operations to reshaping the dimensions of matrices mathematically to serve the software applications; the programmers or the mathematical scientists?” Formally, the engineers and programmers need the mathematician scientist to define novel mathematical-operations and deduce new theories to help them in their programming evaluation and development. The mathematical scientists need the programmers to proof their theorems empirically.
Due to the growing use of the reshaping methods for matrices in many up-to-date programming applications, therefore introducing new mathematical operations for separating and joining processes become necessary and urgent disciplinary issue. The two proposed operations must helpful and useful for both the computer programmers and mathematical scientists. The proposed operations help the program designers for evaluating and developing their programs mathematically, while the mathematicians use the proposed operations to explore and deduce new theories and relations.
The next section presents a proposal for two novel reshaping matrices operations and their suggested algebraic operators. Moreover, the operations will be tested experimentally through program codes based on the VHDL.
