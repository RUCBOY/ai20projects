The increasing diversity of computing platforms and evolving threats against small devices urge the understanding of emerging vulnerabilities and effective design of responses and adapted security solutions [1,2]. From one side, the capabilities of adversaries are disproportionately rising, taking advantage of the increasing number of computing devices, thus widening the surface of possible exploits. From the other side, each new vulnerability is adding a layer of complexity to the defense framework, that needs to mitigate all attacks identified in the threat model.
Among cyber security exploits, hardware attacks are of growing concern as trusted computing and secure processing in hardware platforms are considered as fundamental for all information security practices [3], [4], [5], [6]. It is commonly agreed that security guarantees in digital systems mainly rely on a set of cryptographic operations performing in a hardware root-of-trust. When this root is compromised, security enforcement mechanisms at higher abstraction levels will unavoidably fail. Furthermore, cryptographic algorithms and security protocols are continuously evolving, while requiring large processing and communication capacities, thus making difficult the secure deployment of several resource-constrained devices [7].
Driven by political, economic or even personal motives, motivated entities are thus targeting the hardware layer with ever-advancing and sophisticated attacks. Different attacks can be conducted while either breaking mathematical algorithms, or exploiting other implementation weaknesses.
The focus of implementation attacks is generally related to the physical security of the device. For instance, given sufficient resources that an attacker may have access to, a semiconductor test equipment can help extracting sensitive information stored on the device.
The goals of an adversary can substantially vary depending on a particular application, that can be summarised in three categories: (i) learning secrets, usually considered as the most serious motive, and has been widely the focus of research (ii) taking advantage of a user hardware without extracting private data, e.g., using processing capacities and (iii) disrupting normal processing [8], [9], [10].
Three main categories of hardware attacks include side-channel attacks, fault attacks, and physical tampering. While an attacker may have several goals in practice, the literature in this area generally emphasizes key compromise.
Firstly, a side-channel refers to an avenue of information provided by the implementation of a cryptographic hardware. Examples of side-channels are sound, infrared radiation, time delays, power consumption, and electromagnetic radiation. This leaked information may be statistically related to the underlying computations or keys, giving clues that are useful to an attacker. This simple side-channel attack, introduced by Kocher in [11], details how measuring the processing time can reveal relevant information about keys. The attack of Kocher shows how measurements of the time required to execute secret key operations can reveal fixed Diffie-Hellman (DH) exponents, RSA factors, and other secret parameters of several cryptographic schemes. Recall that it is assumed that the adversary should be aware about the implementation details of the algorithm to successfully perform these attacks.
The category of power analysis attacks, i.e., which includes simple power analysis (SPA) and differential power analysis (DPA) involves physical measurements, via probes, of the device's current consumption versus time. The power analysis attacks rely on a correlation between the current being drawn by the processor and the instructions executed.
On one hand, SPA attacks have been performed to break the implementations of several schemes, for instance RSA, by analysing the differences between multiplication and squaring operations used in modular exponentiation. SPA attacks can also provide other clues to adversaries to support other attacks, even if it can not directly reveal the private key.
On the other hand, DPA relies on statistical tests to isolate a signal of interest from noisy and complex power signals on a device. DPA is based in its ability to discover useful information whenever there is a correlation between power traces and processed information, even if the relationship between power use and instruction execution is very difficult to link.
Secondly, fault attacks exploit hardware faults, e.g., an unexpected condition or defect, that may lead to a processing deficiency. Carrying these attacks involve supplying noisy power or clock signals, incorrect voltage, excessive temperature, etc.
Thirdly, compared to the aforementioned attacks, physical tampering are the most invasive and generally require more expensive equipment to be carried out. Carrying these attacks involve probing the electronics of the device require chip de-packaging, to remove protective layers and gain access to chip internals.
With the emerging of the Artificial Intelligence (AI), these attacks are becoming more powerful. To take on the daunting task of securing cyber infrastructure under such circumstances, securing the design of devices and removing vulnerabilities are becoming major concerns in the hardware industry.
This Special Issue, is dedicated to the extended versions, of the best papers, presented during the 1st IFIP NTMS, CyberSecurity on Hardware Workshop 2019 (CyberSECHARD'19), in conjunction with the 10th IFIP International Conference on New Technologies, Mobility and Security (NTMS), Canary Islands, Spain, June 24-26. The aim of the SI is to provide an overview of new advances on hardware security solutions for real world applications. It focuses on the technical challenges, research opportunities, and potential solutions to cyber-attacks on hardware.
Hereafter, we present proposed approaches that review the complexity of hardware attacks as well as secure algorithms (Section 2) and efficient implementation of primitives in several contexts (Section 3).
