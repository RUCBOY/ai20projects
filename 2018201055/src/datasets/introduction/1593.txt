As of today, providing safe and effective patient care is still a challenge. The challenge is amplified in rural area when it comes to emergency care as deciding proper treatments for acute patients requires knowledge and experiences [1]. Though medical best practice guidelines exist and are in hospital handbooks, they are often lengthy and difficult to apply clinically. A safe and correct computerized medical best practice guideline system can help to improve patient care by assisting medical professionals to adhere to medical best practices.
Significant amount of efforts have been made in obtaining various computer-interpretable models and tools for the management of medical guidelines, such as GLIF [2], Asbru [3], EON [4], GLARE [5] and PROforma [6]. However clinical problems are complicated and those formats mentioned above are not visual nor user friendly for medical staffs to validate their correctness. They are also difficult to formally verify. Many medical errors found in the U.S. Food and Drug Administration (FDA) database are due to the lack of rigorous clinical validation and formal verification [7].
Developing computerized disease and treatment models from medical best practice handbooks needs close interactions with medical professionals. In addition, to satisfy the safety and correctness requirements, the derived models also need to be clinically validated and formally verified. Rahmaniheris et al. [8] have developed organ-centric approaches to model medical best practice guidelines. To help improve clinical validation, Wu et al. have developed a workflow adaptation [9] to help physicians safely adapt workflows to react to patient adverse events and a treatment validation protocol [10] to enforce the correct execution sequence of performing a treatment based on preconditions validation, side effects monitoring, and expected responses checking. Both the workflow adaptation and treatment validation protocol are based on pathophysiological models. In addition, based on organ-specific physiology, a system that integrates medical devices into semi-autonomous clusters in a network-fail-safe manner has also been developed by Kang et al. [11]. Christov et al. [12] proposed an approach to detecting whether the performed medical procedures has deviated from the recommended ways to perform the medical procedures, i.e., medical best practices. Recently, in [13], Rahmaniheris et al. presented a framework for the domain-specific model-driven design of clinical guidance system. The approach focuses on translating generic medical knowledge into a set of communicating finite state machines whose correctness can be easily validated by physicians, formalizing and verifying a set of system safety properties against the constructed models, and integrating the Java code generated from the constructed models into existing guidance systems.
This paper focuses on the design of a framework that can be used in the process of developing verifiably safe medical systems. In particular, we focus on building the bridges between different artifacts in medical guideline system development process to facilitate validation as well as verification not only at the model level but also at the code level.
Rather than developing an all-in-one tool, which by itself can be a daunting task if it is not impossible, our approach is to develop a framework that utilizes existing tools designed for modeling, verification, code generation, and runtime monitoring, respectively, and bridges semantic differences among different tools used by the framework. The design goals and criteria for the framework are: (1) facilitate domain expert participation in the entire process, from computer modeling, model validation and verification, to runtime monitoring, of developing a verifiably safe medical best practice guideline system; (2) maximally utilize existing technologies for modeling, model level and code formal verifications, respectively; (3) provide safe and easy interoperability among selected tools and technologies and ensure semantic consistency among validation, verification models, and source code derived from the validated and verified models; and (4) support identification of root causes at validatable model level should a safety property fails at either verifiable model or source code level. Fig. 1 depicts the high level view of the framework architecture. In Fig. 1, red arrows depict the gaps among different framework components need to be bridged together.Download : Download high-res image (198KB)Download : Download full-size imageFig. 1. Framework architecture. (For interpretation of the references to color in this figure, the reader is referred to the web version of this article.)
The framework contributes to the development of verifiably safe medical best practice guideline systems in that it facilitates domain experts’ participation in the entire system development process; and the framework maximally utilizes and integrates existing technologies for modeling, code generation, model level and code formal verifications, and hence avoid unnecessary development effort and potential development errors. In addition, the framework can be also applied in the design and development of other safe-critical systems where domain experts’ participations are necessary and essential.
The rest of this paper is organized as following: we discuss related work focusing on ensuring safety of medical best practice guidance system in Section 2. Section 3 discusses the framework design philosophy, design strategies, and our previous work in addressing the framework development challenges. We present approaches to correlate safety properties specified in verifiable models with runtime code monitors and provide traceability from verifiable code to models in Section 4 and Section 5, respectively. A case study of a simplified cardiac arrest treatment scenario is performed in Section 6 to demonstrate the benefits of using the framework. We conclude in Section 8.
