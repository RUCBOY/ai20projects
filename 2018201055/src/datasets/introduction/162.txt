Radio Frequency Identification, or RFID, has already become an imperative technology for identifying and tracking objects [1], [2], [3]. RFID uses a two-way radio signal receiver and transmitter (reader) for the interrogators. Radio signals are sent to the tag attached to the physical object and the interrogator or reader is responsible for response. An RFID reader device is a network connected device (mobile or fixed) along with an antenna which is responsible to transmit power, data as well as commands to the objects tags. The versatility of RFID technology makes it ideal for use in the identification and authentication of unmanned aerial vehicles (UAVs) [4] in both commercial and/or military scenarios. Here we propose the example of a military scenario where a UAV must be authenticated before being allowed to operate within a secure airspace. In modern warfare, UAV drones are a commonly utilized resource that can perform reconnaissance and other useful tasks. Due to their widespread use, military personnel must be able to ensure that drones entering secure airspace are not being operated by their adversaries. In this case, these drones can be fitted with RFID tags and be required to pass through a reader checkpoint whereby the tag is scanned and it is credentials sent to a secure server unit for verification. Either the drone is authenticated, or if not, it can be intercepted. This scenario is also shown in Fig. 1. With the resource-constrained nature of RFID providing a requirement for protocols with limited computational overhead, we propose a solution utilizing Physically Uncloneable Functions to reduce cost and complexity while retaining sufficient security for UAV-based authentication scenarios.
Now, as a localizer and tracker, the RFID-based system [3] outperforms other localization systems; however, it is vulnerable to anonymity and location privacy attacks [4], [5] because the RFID tags transmit their identification and location information to RFID readers as plain-text. Therefore, any attacker can easily track the tags by their identifications. Securing RFID-based systems is a challenging task due to the computational capability of the RFID tags is very limited [6], [7]. Furthermore, existing solutions often use low cost tags without considering hardware protection mechanisms. As a consequence, secrets stored in these tags can be recovered through basic side channel and invasive attacks [8], which allows for forging of the information of the tag (such as debit balance of the ticket). To address this issue, recently the concept of Physically Unclonable Function (PUF) technology [9], [10] has been introduced. A PUF is a function derived from a physical characteristic and basic purpose of PUFs is to produce a device specific output for any input like as a fingerprint. Emergence of PUF has provided new flavor in Radio frequency identification (RFID) technology. With the inclusion of PUF, RFID can ensure hardware security.
Download : Download high-res image (261KB)Download : Download full-size imageFig. 1. Example of UAV use within military airspace.
1.1. Possible security threats in RFID systemsThere are many attacks that threaten the RFID systems and hence reveal user’s privacy. Therefore, for ensuring a secure RFID systems we need to consider the following attacks:•Illicit Tracking Attack: Since each object in the RFID-based applications is identified uniquely using the RFID tag, the adversary can mark each of these objects by their unique identities, which are transmitted frequently in the query/reply messages, and then track the objects and define their locations even with encrypted replies.•Eavesdropping Attack:Adversary listens to and records the communications among RFID tags and readers, in order to get critical information about the tagged objects.•Replay Attack: Is a kind of Man in the Middle attack (MITM) who initiates the communication between the two parties then replay the subsequent messages to both parties.•Desynchronization or DoS attacks:An attacker can cause de-synchronization problem by blocking a message between tag and reader. Precisely, in many RFID-based authentication protocols, to ensure forward secrecy both the backend server and tag need to update their secret security credentials. Now, if the response message from the backend server is blocked then the tag cannot ensure whether the interrogation was successful or not. In this case, it is possible that the server updates its database, but tag does not. This will cause DoS attacks [5].•Backward Secrecy Attack:If an adversary gains access to the secret keys, then he/she should be able to trace back all the previous communications of the tag.•Physical attacks: An adversary compromises a tag and should be able to obtain secure information such as secret key from the tag’s memory through cold boot attacks, which is a kind of side channel attack. In this regard, an attacker with physical access to tag is able to retrieve some useful information stored in the tag. Then, the attacker may try to trace all previous communications of the tag’s users. Many of the existing RFID authentication protocols are vulnerable to this attack.•Cloning attack: Most tags are not tamper proof, hence an attacker can build a cloned tag which will be interpreted by the reader as a legitimate tag.
1.2. Related work and motivationIn general, the concept of PUF technology can be utilized to ensure higher degree of security and efficiency. In the last few years, some interesting PUF-based authentication schemes have been proposed. We can divide them into two categories: (i) ideal PUF-based schemes [11], [12], [13], [14], [15], [16], [17], [18], (ii) noisy PUF based schemes [19], [20], [21]. Bringer et al. introduced an ideal-PUF-based scheme authentication protocol using ideal PUFs in [11]; however, the protocol fails to provide security against DoS and impersonation attacks [12]. Sadeghi et al. [12] applied an ideal-PUF in constructing RFID authentication to guarantee destructive privacy by considering the Vaudenay security model [17]. Soon after that, Kulseng et al. [13] proposed a new scheme that used the combination of PUF and a linear feedback shift register (LFSR). The protocol consists of four rounds and for each round the tag encodes it is identity by using XOR operation and a shared secret key. At the end of each session, the key is updated by both the server and tags; however, its security was re-examined and enhanced in view of ID protection (confidentiality) and desynchronized attack [14], [15]. In 2015, Lee et al. proposed a new scheme under a new privacy setting [16]; however, its construction is based on a secure public-key encryption. In 2017, a new scheme was proposed by Pandey et al. The authors utilized the combination of PUF with a threshold cryptography. Here, the authors suggested the secret sharing technique for thwarting tag compromising attacks [18]; however, in their protocol the tag needs to perform some computationally expensive operation, which is infeasible for resource constrained tag devices. Although differential design mechanisms can improve reliability, noise still presents as a factor in PUF design, which may cause several of the output bits to be incorrect for any given challenge. Herrewege et al. [19] proposed an authentication protocol by considering noisy PUF condition; however, after thoroughly investigating their approach, we found the following weaknesses in these schemes. For instance, in [19], a tag needs to reveal its identity in order to help the verifier in finding a previous PUF output z, therefore this scheme fails to ensure anonymity property. In 2014, Moriyama et al. [20] suggested a new authentication protocol for RFID systems using PUF. The protocol allows a reader to update random status secret s, and then a tag receives s for each session; but in their scheme a tag needs to store helper data for output reconstruction, which will cause high storage overhead at the tag side. In addition, implementing the output reconstruction on the PUF-based device is a disadvantage in many applications. Recently, Gope et al. proposed a new authentication protocol [22] using noisy PUF condition; but like [20], in their scheme a tag requires to execute the computationally expensive reconstruction function and store helper data for output reconstruction, which will cause a high storage cost as well. To resolve this issue, in CHES 2015, Aysu et al. introduced a new PUF-based protocol [21] using reverse fuzzy extractor; however, according to [22], the protocol presented in [21] cannot provide privacy, which is one of the major security requirements in RFID-based system. Furthermore, in all the above PUF-based anonymous authentication protocols (including [19], [20], [21]), to identify the device, the reader–server unit requires to perform an exhaustive search operation; therefore, they are not suitable for the large-scale database application scenarios.In a nutshell, in all the aforementioned schemes, the server needs to perform exhaustive search to identify the tag, which is not suitable for the applications with larger databases. The aim of this article is to address all the aforementioned issues by proposing a realistic privacy-preserving authentication protocol using PUF. We can summarize our contribution of this article as follows:•We propose a novel authentication scheme for a noisy-PUF condition.•Our proposed scheme will be able to ensure various important security features such as anonymity, protection against DoS attacks, etc., which are imperative for any IoT application and services.•One of the notable properties of the proposed scheme is that, in our scheme the server will be able to identify the tag without performing any exhaustive search operation.
1.3. Fuzzy ExtractorA Fuzzy Extractor [23], [24], [25], [26], [27] is a combination of two functions i.e., FE.Gen(.) [Key generation ] and FE.Rec(.) [ reproduction function]. We can consider FE.Gen(.) as a probabilistic algorithm for generating a key K and helper data hd, i.e., (K, hd) = FE.Gen(R) on a given input bit string R. FE.Rec(.) is a deterministic function, which takes a noisy input R′ and the helper data hd and then it generates the key K i.e., K = FE.Rec (R′, hd,) i.e., K = FE.Rec (R′, hd) when the hamming distance between R′ and R is at most d.
1.4. Reverse Fuzzy extractorIn order to ensure fast implementation of secure sketch and fuzzy extractors, the concept of a reverse fuzzy extractor can be used. In this context, the PUF-enabled RFID devices do not require to execute any computationally intensive reconstruction algorithm. Instead, the device needs to execute the helper data generation algorithm.
1.5. Physically uncloneable functionA Physically Uncloneable Function (PUF) is a physical system, that for a given input – the challenge – provides an output – the response – that can serve as a secure unique identifier (digital fingerprint) for devices. Each response generated for any given challenge is entirely unique and unpredictable. The entropy for a PUFs challenge/response pairs (CRPs) is attributed to the physical micro-variance in each chip caused during the manufacturing process that create unique behavioral differences between each individual PUF, making them very difficult to clone. The result of this is secure generation of challenges and responses that need not rely on complex and expensive cryptography. This lightweight nature of PUFs make them very suitable for enabling secure authentication for resource-constrained systems such as RFID.We can define PUF as a pair of CRPs. For a given input challenge C, the PUF outputs a random string R i.e., R=P(C). A PUF P is said to be (d,n,l,λ,ϵ)-secure if the following conditions hold:1.Conceive, there are two PUFs P1(⋅) and P2(⋅), and for any given input C1∈{0,1}k, Pr[HD(P1(C1),P2(C1))>d]≥1−ε. Here, the parameter HD denotes the hamming distance.2.For a given PUF Pi(⋅) and for any input C1,…,Cn∈{0,1}k, Pr[HD(Pi(C1),Pi(C2))>d]≥1−ε.3.Given, two PUFs Pi(⋅) and Pi∗(⋅), and for any inputs C1,…,Cn∈{0,1}k, Pr[H∞ˆ(Pi(Ck),Pi∗(Cj))1≤j,k≤n,i≠i∗,j≠k>λ]≥1−ε.
1.6. Pseudo random functionA pseudo random function PRF: {0,1}k×{0,1}∗→{0,1}k′ which takes a secret security parameter Kϵ{0,1}k and a message Mϵ{0,1}∗ as input and provides an arbitrary string PRF(K, M) which is indistinguishable from random string. Now, assume that h be a polynomial-time computable pseudorandom function. For distinguishing h, a probabilistic polynomial-time (PPT) adversary A may request polynomial bounded queries with its selected inputs and obtain the outputs computed by h for training. After the training phase, A is given a function, which is either h or a truly random function. We say that h is a pseudo-random function, if it is indistinguishable from a truly random function under A. Namely, A is given either h or a truly random function according to a random bit {0, 1} and it has only the probability 12+ε, to distinguish h. Download : Download high-res image (355KB)Download : Download full-size imageFig. 2. Setup Phase of the Proposed Scheme.Download : Download high-res image (503KB)Download : Download full-size imageFig. 3. Proposed Authentication Scheme.
