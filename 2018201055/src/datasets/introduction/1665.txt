Cyber-physical systems (CPS) integrate various engineering areas such as control-, computer-, mechanical-, and network engineering [7]. The complex and heterogeneous design aspects of CPS beget methodologies to combine the corresponding disciplines. For example, in automotive industry, it has been investigated that 80% of the innovations in the design of a car are attributed to the computer systems [13].
Sequential and model-based design methodologies [3], [8] are well-established techniques to cope with the complexity of designing CPS. The idea is, first, to select a promising physical system, defining the controller, and finally addressing design challenges of the embedded computer system. Such sequential separation of decisions reduces the complexity of the design effort. However, like most greedy approaches, the ultimate product is unlikely to be the best possible design due to missed trade-offs between cyber and physical design knobs.
Recent work shows that holistic design approaches result in superior products and systems when compared to sequential design flows, where the cyber-part is designed independently from the physical-part in a CPS. In this work, the term holistic implies that the physical, the control, and the cyber attributes of a system are evaluated concurrently. Consequently, a holistic optimization of the design space can yield ideal performance qualities such as energy consumption or control stability [1], [2].
The large design space, stringent performance objectives, and tight time-to-market requirements create a challenge in designing CPS systems. Typically, Design Space Exploration (DSE) is performed in early development phases to select between multiple high-level design configurations that meet the overall system design requirements. The power to automatically surf the design space and explore viable solution candidates is an essential requirement for many engineering tasks, including systems integration and optimization.
In this work, we explicitly investigate if and how specific properties of the cyber system such as cache size, CPU configuration, memory hierarchy, and peripherals interfere with the overall system performance metrics such as precision, stability, and power consumption. Similar dependencies have been discovered and utilized between physical properties and control parameters, which led to the controller pruning in [2]. Ultimately, the question to be asked is if a connection exist between physical system (PS) and cyber system (CS) in terms of the overall system performance. We answer this question in this paper.
Model-based design provides a flexible environment to identify high-level attributes of the subsystems. Hence, model-based design can be used to specify and analyze the system requirements from a semantic-oriented level rather than an implementation-oriented level [22]. If dependable models from divers disciplines are assembled at the high level without prior heterogeneous analysis and verification, system failures are likely to emerge. Our holistic model of a CPS provides a framework to integrate physical entities, environment settings, and computation resources into a single optimized end product. That is, a codependent methodology is proposed that captures the properties of the system, not only at the subsystem level, but also from a global interoperable point of view.
The proposed framework implements a DSE methodology based on the Y-chart [5], as depicted in Fig. 1. The Y-chart establishes clear distinction between the application and the architecture of the system that is being designed. This methodology follows a top-down flow in the domains of behavior such as structure and layout. A Y-chart based framework enables the exploration and analysis of the system configurations for further alteration in architecture, application settings, and mapping strategies.Download : Download full-size imageFig. 1. Y-chart methodology models the design representation from a top-down view. The behavioral, structural and layout views are each a branch of the ‘Y’.
Without loss of generality, we have used Simulink as our primary simulation and functional verification tool in developing the networked control application used alongside our proposed approach [25]. Alternatively, any of Scilab [24] or Octave [19] may be used instead of Simulink. In terms of the physical platform, we have used a parameterized System-on-a-Chip (SoC) called Platune [6]. Platune is specifically designed in a tunable way, having settings for processor caches, peripheral configurations, voltage scaling, and so on and so forth. More specifically, this tool facilitates:
•A holistic and comprehensive exploration and analysis of the system design space and its parameters interaction and correlation;•A compression of the design space into Pareto-optimal design points with regard to system performance metrics; and•A derivation of a dependency analysis to reduce the search and support tool-based DSE of CPS.
It should be clarified that, while the DSE engine of Platune is universal, the default simulation engine of Platune is based on a fictitious SoC. Given a specific CPS implementation, the SoC (i.e., cyber) model of the Platune would need to be replaced with an appropriate target simulator.
CPS are unique in the way they incorporate interactions between the computing and the physical entities. Therefore, the design foundations, methods, and tools of CPS engineering should accommodate the interdependency between the physical (e.g., mechanical, electrical, etc.) design, the computing hardware (e.g., processors, memories, etc.), and system software (e.g., algorithms for control, application logic, etc.).
Our key contributions in this work are summarized below:
1. We propose a holistic and interdependent framework for the design of a CPS that optimizes the cyber, physical, and control subsystems concurrently;2. We present a simulation-based framework that integrates the Simulink environment with the Platune SoC for system analysis, testing, and verification; and3. We present an efficient and concurrent algorithm to prune and explore the design space for CPS, per our holistic design platform.
The proposed framework is applied to a real application of control system, namely an automated inverted pendulum, to analyze and verify the efficiency and necessity of the suggested work.
The rest of this paper is organized as follows. A review of the state-of-the-art DSE frameworks for networked control systems is reported in Section 2. Sections 3 outlines the DSE problem and describes a tool-supported holistic methodology. We demonstrate the workings and effectiveness of our framework for the inverted pendulum example in Section 4. We provide some additional remarks and insight into the proposed methodology in Section 5. Finally, the conclusions and future work directions are summarized in Section 6.
