In organizations, the role is a job function with authorization to access protected resources. This is modeled as a Role-Based Access Control (RBAC) [1] which defines the access control relation between users and resources. Access Control [2] is concerned with how permissions or authorizations to object are structured. Different IT infrastructure implements access control models at different levels in many places [3] [4]. For example, operating systems implement an access control system for the protection of directories and files; and database management systems regulate access to views and tables by applying access control systems etc [5].
This research gets role engineering, specifically role-based access to services from a third-party organization which is not very common in computer networks. To access services, the user must be an authorized role owner. In face to face communication, verification and validation of roles are possible through physical certificates but in a computer network, it is spacious and sometimes it requires a knowledge-based security system for role validation and verification. This causes a lower level of confidentiality as credentials are shared and a higher level of vulnerability as it is easy to hack such credentials. In some cases [6], service-providing organizations solve this problem by directly contacting the role assigning organization; however, it is not an easy task to contact the role assigning authorities for the verification of every role to entertain the user with corresponding services. Digital Certificates [7] have also been presented in the literature as a replacement of physical certificate, but its use requires Public Key Infrastructure (PKI) ,[8] which is insecure, complex, and have higher maintenance cost [9], [10] and [11].
In a nutshell, the following are the goals of this research with assigned notation from G1 to G4:Download : Download high-res image (215KB)Download : Download full-size imageFig. 1. Graph model representation of Core RBAC Model presented by [12].

•G1: Create a strong relation between easy administration and strong security for role engineering.•G2: Maintain the privacy and anonymity of the entities and their credentials and proof of the role ownership is without the intervention of role assigning organization (raOrg).•G3: Ensure role assigning organization (raOrg) have secure role engineering management and enforcement mechanism so the entities cannot disguise their roles.raOrg can assign roles and corresponding services to entities, entities can transfer it on to other entities and organizations can revoke these operations.•G4: Service Providers (spOrg) can verify and validate the role and role owner without the intervention of role assigning authority.
A practical solution for Role-Based to Services from the third party organization is presented in this work. It is an unconventional framework using the cryptographic primitives. To ensure the easy administration, the Core Role-Based Access Control model [13] is modified by encapsulating the services in the role set. By defining the role model in this way, the enforcement mechanism needs only to verify the role, the verification of services is self-evident in role structure. To ensure strong security, an unconventional enforcement mechanism is presented which involves cryptographic operation for role creation and assignment operation.
Following is a summary of the major contribution of this research:

•NIST’s activities, contribution, and role towards Role-Based Access Control evolution, development, and implementation.•Modified Role-Based Access Control. Model for easy administration by defining the roles with encapsulated services.•Identification of major challenges for access to services from a third-party organization.•Definition of the threat model.•Requirements identification according to threat model and challenges.•Analysis and review of various cryptographic primitives including hashing, digital signature, accumulators, and range proofs that can provide important features in achieving the declared goals.•An unconventional enforcement mechanism for role engineering based on cryptographic functions.•Experimental time-based efficiency analysis for RSA and ECDSA schemes.
Notations, functions and their description for the conventions that have been used in the paper are listed in  Table 1.
The paper is organized into eight sections. Section 1 presents an Introduction followed by Section 2 that entails Motivation and Related work together with the major concerns and challenges in the current solutions. The Model for Role-Based Access to Services is presented in Section 3. Section 4 describes the assumption associated and the critical review of cryptographic primitives. Section 5 presents an overview of the proposed framework. Framework validation and Evaluation are presented in Section 6. Discussion and analysis are included in Section 7. The proposed framework is concluded together with the future work in Section 8 and references are listed in the last section.Table 1. Description of Notation/Function/Term.Notation/Function/TermExplanation of Notation/Function/Terme:Entity/User/Actor/Node/Autonomous Agent/Networkm:Arbitrary dataraOrg:Role assigning organizationspOrg:Service providing organizatione.PAK:Public Authentication Key of the entitye.SAK:Secret Authorization Key of the entityraOrg.PAK:Public Authorization Key of the role assigning OrganizationraOrg.SAK:Secret Authorization Key of the role assigning OrganizationspOrg.PAK:Public Authorization Key of the service providing OrganizationspOrg.SAK:Secret Authorization Key of the service providing OrganizationRI:AS:Role with encapsulated servicesα:KeyCreation() function that takes the key length as an argument and generate key pair for identity of the entity and organizationη:Signature() function that takes SAK and m and generate the digital signatureβ:Verification() function that takes PAK, m and η and return Boolean answerH():Deterministic mathematical function which takes an arbitrary size data as an input and produces fixed-size output. The cryptographically secured hash function is supposed to be Preimage resistant, Second Preimage resistant and Collision resistant.F(C):A special compression function used in SHA256. For the first iteration, it takes an initial vector (IV) of 256 bits and blocks of 512 bits as input and applies the collision-resistant compression function called F(C) to generate the hash value of 256 bits. For the second and onward iteration, instead of IV, it takes the output of the previous hashed value of 256 bits, a block of 512 bits and applies the F(C) function to generate the hashing value.H(↑):Data structure that is simply a pointer to where some data/information is stored together with a cryptographic H() of the information.Role Ownership:Proof of role ownership is concerned with exclusive rights and control over the role.Role Validation:Role validation is concerned with authentication .A valid role belongs to a particular organization.Role Verification:Role verification is concerned with authorization.
