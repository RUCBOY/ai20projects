The popular digital signature schemes, RSA and ECDSA, would be at significant risk after the invention of the first sufficiently powerful quantum computer [1]. Recently, it has been proven that the quantum technology has the potential to solve hard computation problems in a matter of few seconds which could otherwise take several hundred years [2]. Although, recently available quantum processors are not powerful enough to break ECDSA, however, the advancement trends of technology allow us to expect a quantum computer being able to break ECDSA after just a decade [3]. An algorithm to break RSA and ECDSA with the help of a sufficiently powerful quantum computer has already been proposed by Peter Shor [4]. So what will be the situation? Will quantum computers erase digital signature technology at all? Thankfully, the answer is “no”, because alternate digital signature schemes are already available, which can defeat quantum attacks. The digital signature schemes having the potential to withstand quantum attacks are commonly referred to as post-quantum (PQ) digital signature schemes. There are total five types of post-quantum digital signature schemes available to-date, including, lattice-based digital signature schemes, hash-based digital signature schemes, elliptic curve isogeny based digital signature schemes, multivariate digital signature schemes, and code-based digital signature schemes [5]. Although, PQ signature schemes are not newer, however, none of them could attract practitioners at a large scale, because of their low efficiency, improvable security, and large key/signature sizes [5], [6].
The hash-based digital signature (HBS) schemes are fairly efficient and provably secure [7]. Many popular PQ distributed ledgers, like Tangle [8], QRL [9], PQChain [7], and DL-for-IoT [10] have already adopted HBS schemes. However, HBS schemes suffer from larger key and signature sizes [11]. The three building blocks of a modern HBS scheme include a core one-time signature (OTS) or a few-time signature (FTS) scheme, a key compression tree, and a main hash tree. The core OTS/FTS is used to sign the message. A key compression tree compresses a given OTS/FTS public key into a single value to allow it to exist as a leaf node of the main hash tree. Finally, the main hash tree computes a single public key from a limited or a virtually unlimited number of OTS/FTS public keys. Although a public key encapsulating a large number of OTS public keys is desirable, however, distributed ledgers represent one of the exceptional cases. Distributed ledger technology recommends limited use of a single ledger address to preserve user’s financial privacy. Although a pure OTS scheme (which never allows reusing a key) can offer the strongest financial privacy, however, it is exhaustive in many situations. For example, it is exhaustive for an NGO to provide a fresh ledger address to every donor, each time to receive new donations; or, for a coffee shop manager to generate a fresh ledger address each time to receive payment against a cup of coffee. Therefore, there must be a way for reusing a single ledger address at least for a limited number of times without a security compromise. Hence, the HBS schemes which allow limited reuse of a single public key are suitable for distributed ledgers as compared to the more advanced HBS schemes.
This paper proposes Smart Digital Signatures (SDS) which is a compact and efficient post-quantum digital signature scheme. SDS is closer to an existing popular HBS scheme, XMSS [12]. SDS incorporates a novel one-time signature (OTS) scheme into XMSS, namely “SDS-OTS”. Furthermore, SDS uses a slightly modified version of the key compression tree as compared to XMSS. We have compared SDS with two different instantiations of XMSS, namely, XMSS-WOTS and XMSS-WOTS+. In the first instantiation, we incorporated XMSS with the OTS scheme “WOTS” [13], whereas, in the second instantiation, we incorporated XMSS with WOTS+ [11]. The results reveal that SDS is 74% faster than XMSS-WOTS+ and 30% faster than XMSS-WOTS.
The underlying OTS scheme of SDS, i.e. SDS-OTS, is the most compact OTS scheme as compared to all of the existing OTS/FTS schemes. WOTS and WOTS+ are the two most popular OTS schemes which have already been adopted by state of the art PQ ledgers, “Tangle” and “QRL”. SDS-OTS offers 87% reduction in key and signatures sizes as compared to WOTS, and more than 80% reductions in key and signature sizes as compared to WOTS+. WOTS+ is a compact variant of WOTS which uses bitmasks and randomizations to achieve compactness. Bitmasking allows WOTS+ to replace a collision-resistant (CR) hash function by a simple pre-image resistant function which finally offers compactness. However, bit-masking is expensive to achieve on quantum processors as compared to collision resistance [1]. Therefore, SDS-OTS avoids the use of bit-masks and randomizations. Finally, this paper also proposes a model for incorporating SDS into a distributed ledger, with the help of High-Level Petri-nets (HLPN). We can summarize our research contributions as:

1.We propose an efficient HBS scheme “SDS”, which is: (a)74% faster than XMSS-WOTS+ (i.e. XMSS incorporated with OTS scheme, WOTS+), and,(b)30% faster than XMSS-WOTS2.We incorporate an efficient novel OTS scheme into SDS, namely, SDS-OTS, which is: (a)Most compact OTS scheme(b)Offers 87% reduction in key and signatures sizes as compared to the WOTS(c)Offers 85% reduction in key size as compared to the WOTS+(d)Offers 83% reduction in signature size as compared to the WOTS+(e)Based on CR hash functions, hence, avoids the use of bitmasks (which are expensive to achieve on quantum processors)3.We provide HLPNs to present a road map for the researchers and end-users for incorporating SDS into a distributed ledger.
The rest of the paper is organized as Section 2 gives a preliminary knowledge of HBS schemes. Section 3 discusses our proposed HBS scheme SDS in detail. Section 4 provides details for incorporating SDS into a distributed ledger. Section 5 provides security and performance evaluation. Finally, Section 6 concludes this paper.
