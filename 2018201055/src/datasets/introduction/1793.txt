As part of Industry 4.0, manufacturing resources are increasingly being provisioned as services from the cloud, for all phases of the product development lifecycle [1], [2], [3], [4], [5], [6]. Consider the traditional computer integrated manufacturing workflow (Fig. 1(a)), consisting of computer-aided design, manufacturing and process planning (CAD, CAM, CAPP) together with computer numerical control (CNC) all running on local computer hardware [4]. In Industry 4.0, it is envisioned that this workflow will be transitioned to a cloud ecosystem where its various elements run on virtualized (cloud) computers (see Fig. 1(b); note that C- denotes cloud-based). Users will be able to connect to this ecosystem from anywhere in the world to design and manufacture parts on-demand using a variety of manufacturing machines (MMs) connected to the ecosystem. To this end, there already exist some examples of C-CAD (e.g., OnShape [7]), C-CAM (e.g., VisualCAMc [8]) and C-CAPP (e.g., MachiningCloud [9]); and CNC with cloud connectivity (e.g., with the help of the MTConnect standard) is available, thus forecasting a future transition to C-CNC.Download : Download high-res image (234KB)Download : Download full-size imageFig. 1. . (a) Traditional computer integrated manufacturing (CIM) workflow; (b) Cloud-based computer integrated manufacturing paradigm for Industry 4.0 (CIM 4.0). Note that while examples of C-CAD, C-CAM and C-CAPP exist, C-CNC is not yet available.
Some potential benefits of C-CNC are (see also [10], [11], [12], [13], [14] for similar discussions):
1)With C-CNC, a MM can be controlled using advanced algorithms that may not be executable on a local controller with limited computational resources; C-CNC thus holds the potential to significantly improve the performance of MMs without need for upgrades to powerful and costly computational hardware.2)C-CNC will allow a user to opt for only the CNC functionalities they need, when they need it, thus slashing costs.3)With C-CNC, upgrading the controller of a machine will become much easier, involving little or no hardware changes. This will reduce the problem of frequent obsolescence of MMs due to outdated control hardware.4)Due to the connected infrastructure provided by C-CNC, data analytics can be used to improve the performance of control algorithms (e.g., fine-tune controller parameters) based on feedback from several machines running the algorithms.5)With C-CNC, the often-frustrating barriers between CAD, CAPP, CAM and CNC in the traditional computer integrated manufacturing paradigm can be dissolved, allowing for seamless information transfer among the cloud-based versions of the various components. For instance, Gcode, which has a poor representation of design intent, can be eliminated in favor of STEP-NC or direct CAM servo control [15], [16], [17].
There are, however, two major objections to C-CNC. The first is cybersecurity. This is a valid concern raised against virtually all cloud-based services, and often slows down adoption of cloud solutions [6]. However, companies (like Amazon) which provide platforms for cloud-based applications are able to guarantee close to 100% security [1]. Hence, security-critical applications (like banking) are increasingly adopting cloud solutions. Techniques, like those used for cloud banking, can be used in cloud manufacturing [5,6]. Therefore, while there is no doubt that cybersecurity is critical to C-CNC, one can argue that it is not the key inhibitor to C-CNC from a technological standpoint.
The second concern is that sending real-time control signals over the Internet introduces safety and reliability risks due to time delays, dropped packets, and similar Internet quality of service (QoS) issues [10], [11], [12], [13], [14]. The decades-old field of Networked Control Systems has studied this issue in the context of feedback controllers, but the resultant solutions are based on Lyapunov stability criteria, which are conservative; i.e., they overly sacrifice performance to guarantee closed loop stability [18]. Recently, the nascent field of control as a service (CaaS) [[10], [11], [12], [13], [14],[19], [20], [21], [22], [23]] has advocated the use of edge/fog computing [22] or private cloud infrastructure [23] to mitigate QoS issues. The idea is to use specialized solutions like software defined networking (SDN) [24] and time sensitive networking (TSN) [25] to improve Internet QoS. However, these specialized solutions are likely to significantly limit the reach and increase the cost of C-CNC, especially for small and medium size enterprises (SMEs), which are poised to benefit the most from cloud solutions [26]. It is, therefore, desirable to have a solution that makes C-CNC broadly available over public/shared Internet connections, much like C-CAD, C-CAM and C-CAPP. One way of doing this is to transition only feedforward (FF) control functionalities of CNC (like trajectory generation and feedrate optimization) to the cloud, while leaving the time and stability-critical feedback (FB) loops (e.g., servo position control) in the local CNC [10], [11], [12], [13], [14]. In the context of FF-focused C-CNC, Schlechtendahl et al. [11] observed severe QoS issues (like long delays and data losses) in transmitting data over public Internet networks. Sang and Xu [12] proposed a FF-focused C-CNC architecture for switching to a local CNC in order to safely stop a MM if QoS deteriorates unacceptably. However, it is more desirable to guarantee safety without unduly stopping the MM, to avoid excessive loss of productivity.
As its original contributions, in Section 2.1, this paper makes a case for adding some FB functionality to FF-focused C-CNC by highlighting examples where FF-focused CNC cannot operate effectively without some FB. It is shown that the addition of FB makes FF-focused C-CNC more susceptible to variable QoS. Therefore, in Section 2.2, a three-tier redundant architecture is proposed to guarantee safe and reliable C-CNC over public Internet networks, without need to stop the MM whenever QoS deteriorates unacceptably. A prototype of Tier 1 of the proposed redundant architecture is then presented in Section 3, using a desktop 3D printer as a case study. Further research opportunities emanating from the proposed architecture are discussed in Section 4, followed by conclusions and future work.
