The nature of data-driven science today, with the extremely large data sets routinely involved and the collaborative nature of astronomy and many other sciences, creates an urgent need for server-side analysis platforms — a.k.a. science platforms. The emerging consensus within the astronomy community1  is that a science platform should include a server-side suite of data access, analysis and visualization tools, along with the ability to store, upload, download, cross-match and share data with collaborators or students for classroom applications.
The Sloan Digital Sky Survey (SDSS) science archive (Szalay, 1999) pioneered the concept of server-side analytics – the backbone of the current science platform concept – in astronomy almost 20 years ago (Szalay et al., 2000) with the release of SkyServer2  in 2001. SkyServer was the web portal for the SDSS Catalog Archive Server (CAS) and was followed shortly by its spin-off CasJobs3  (CAS + Jobs) in 2003, and both were server-side science portals for SDSS catalog data. Another early SkyServer spin-off was SkyQuery — an astronomy cross-match service (Malik et al., 2002) that allowed on-demand cross-matching server-side between two or more geographically distributed astronomical archives based on a probabilistic cross-match algorithm.
SkyServer (using the term as shorthand for the suite of services that were accessible from the SkyServer web portal) was the first instance of a publicly accessible astronomical archive available online that embodied the paradigm to “bring the analysis to the data” and allowed users to run queries against very large data sets and manipulate the data server-side in interactive and batch mode. Open SkyQuery, a VO-compliant version of SkyQuery (Budavári et al., 2004), was the flagship for the primary mission of the Virtual Observatory (VO), namely to federate the worldwide digital astronomical archives in order to maximize their discovery potential (Szalay et al., 2002a).
Recognizing the foundational role of SkyServer in the astronomical community, the US National Science Foundation (via the Data Infrastructure Building Blocks4  program) provided funding to the Institute for Data Intensive Engineering and Science (IDIES) at the Johns Hopkins University in 2013 to extend the server-side analysis functionality beyond catalog data, and to all science domains as well.
SkyServer thus became SciServer (Szalay, 2018), a fully featured science platform that took building blocks that had served astronomy for more than a decade, and built a state-of-the-art collaborative and cross-domain science framework on top of them. SciServer is free to use (at its basic level), and anyone can start using it as soon as they register. Data providers and other users with larger resource requirements, such as video cards or nodes for exclusive scientific computing with extra file or database storage, can either host them within SciServer, or deploy an instance of SciServer in their own environment. Although astronomy remains its mainstay (SciServer is the official science platform for SDSS catalog data, for example), SciServer currently supports additional science domains such as turbulence/physics, oceanography, genomics, earth science, materials science and social sciences.
In this paper, we first give an overview of the SciServer platform with its components and user interfaces. Then we describe our user management and resource access control component. In Section 4 we describe the data management components, both in relational databases and the additional data sets accessible on a simple POSIX file system. The most important feature of a science platform is the capability to perform filtering, analysis and visualization close to the data, and we describe SciServer’s support for that in Sections 5 Analysis close to the data: SQL, 6 Analysis close to the data: Compute. We describe the usage of the SciServer system so far and the various science use cases we support in Section 7 and close with a summary. An Appendix describes the resource management component in some more depth.
Download : Download high-res image (442KB)Download : Download full-size imageFig. 1. System architecture in SciServer. The Dashboard web application is the entry point to the system. While the core services in the lower half of the figure are central and unique in a SciServer deployment, the data access and analysis tools in the upper half can be replicated multiple times to scale out storage and computing capabilities. Most components implement REST APIs for communication with other components or external apps.
