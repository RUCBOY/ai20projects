Over the last few decades, there has been a tremendous increase in the complexity of large computing systems, primarily due to the increasing interconnectivity and interaction between systems, components, and services. These entities are, in turn, ever more autonomous, heterogeneous, and larger in scale, while also operating in increasingly open and dynamic environments. Hence, most of today’s systems evolve frequently and continuously over time [1], [2], often interacting with changing and even completely novel systems and execution contexts. This leads to the need for an ongoing requirement for system-of-systems integration. Systems can be interconnected either purposefully, for achieving novel intended goals, opportunistically, by ad-hoc interaction, or accidentally, through interference within a shared environment.
Systems engineering experience testifies that even carefully designed and extensively tested solutions are unable to react properly to all sources of problems that might be entailed by such a continuously changing integration status. For example, unforeseen interactions may occur when conventional interfaces, defined at design-time, are bypassed with a connection through the physical environment, including humans. This situation is further complicated by the lack of shared knowledge and/or pooled authority when considering the control of all involved systems [3]. Thus the self-improving system integration community [4], [5] has emphasised the consideration of what are known as Interwoven Systems [6], [7], [8] — that is, systems that integrate themselves and adapt as necessary, in response to their own behaviour and each other, within open and unpredictable environments.
These challenges drive the necessity to push system design, development and testing operations into run-time, with the concomitant need for real-time adaptations in knowledge acquisition, representation and processing. Doing so entails more system autonomy, intelligence, and self-awareness, to facilitate suitable reactions at run-time, when human experts may be unable to intervene. Related initiatives such as Organic Computing (OC) [2], Autonomic Computing [9] and Self-Aware Computing [10] have also emphasised the need to tackle ever increasing system complexity, by endowing systems with self-adaptive and self-organising (SASO) functionalities, or “life-like” properties. The underlying concept in each of these initiatives is to design systems with inherent self-adaptive, self-organising, and self-improving capabilities that lead to more flexible, robust and resilient behaviours during run-time. We will refer to this class of systems as SASO systems throughout this article.
These initiatives have brought about exciting insights and developments, with considerable success in developing ‘stand-alone’ SASO systems. At the same time, there continue to be substantial challenges to integrate multiple heterogeneous systems each with different self-adaptive and self-organising capabilities. Further challenges include combining technical and human organisations, which are also potentially unfamiliar to each other, the need to operate at very large scales, and operating in highly unpredictable environments. Several complementary initiatives focusing on systems-of-systems methodologies (e.g., service-oriented architectures [11] and cloud technology [12]) have also seen significant progress relevant to the aforementioned concerns. Still, most of these developments lack scalable methods for rapidly adapting components and sub-systems to their new integrated environments (e.g., optimal or viable configurations or compositions).
As a result of these observations, the concept of “Self-Improving System Integration” (SISSY) was established. The goal of the SISSY initiative is to address the challenges of system-of-system self-organisation and self-adaptation. Specifically, SISSY investigates approaches that allow for continual self-integration among components and systems that are self-improving (i.e. learning or evolving over time) towards effective and stable outcomes. This is considered the solution to the ‘Interwoven Systems’ problem outlined above.
Of course, variants of the above SISSY challenges have been approached by many different fields, ranging from mathematics and computer science to cognitive sciences. With respect to middleware research, SISSY goes beyond establishing reliable (self-adaptive) communication services, by adapting physical and functional connectivity, and by providing associated services like security, transactions and persistence. SISSY aims to ensure that self-integrated systems-of-systems feature (at least) functional coherence and, ideally, are able to meet their goals, while self-improving and self-adapting in the face of unforeseen challenges.
Concerning to previous efforts in SASO systems research, SISSY represents a qualitative shift rather than a radical different approach. It changes the process from designing adaptive processes within a well-understood problem space to developing what is now needed to negotiate and explore new configurations and collaborations over multiple systems at run-time. The biggest consequence of this shift is that designers need more than straightforward parameter changes or component hot-swapping. Such approaches are based on a known adaptation space, and can thus only respond to predefined types of changes (however useful they are in the short term). Rather, they must now entertain the possibility that there will be not only new usages for currently deployed or available components and processes, but, because of new system collaborations, also new and unforeseen interactions, interfaces, and interferences between behaviours and objectives. Meeting this challenge requires systems to carry out new forms of reasoning and self-modelling.
Furthermore, this kind of integration, once accomplished, is never finished in a SISSY system-of-systems because changes will continue to occur. Such changes may be within partnering systems (intentionally or by corruption), in collective behaviours, in executing environments, and in targeted goals. Thus system integration must not only take into account the systems (and components) that are currently interfaced, but also the frequent insertion of new components and systems as well as their utilised functions and featured behaviours within ever-changing execution environments.
Qualitatively, the SISSY initiative goes beyond conceiving adaptive and maintenance processes for mature systems with persistent predefined goals where the learning and adaptive processes are directed towards retaining the desired state, performance, or set of behaviours. It broadens the scope of systems integration to also include a set of novel, and not currently well-defined, processes that create genuinely novel behavioural patterns and joint goals among a set of simultaneously self-developing systems, through negotiation and what we call “active experimentation” processes [13], [14].
Although the SISSY initiative has produced various contributions towards mastering continuous change, it has not yet fully achieved its goal. This article summarises the current state-of-the-art and establishes an agenda for the years to come. In particular, the article’s contributions are as follows:

•Defining the SISSY concept (Section 2);•Briefly positioning SISSY within the overall field of integration sciences (Section 3);•Reviewing the research efforts within the SISSY initiative and deriving a taxonomy of different approaches (Section 4);•Identifying a research road-map for filling the gaps with SISSY research (Section 5).
