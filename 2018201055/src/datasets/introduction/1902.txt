1.1. BackgroundFor decades, some of the most challenging prosthetic parts to fabricate have been from the maxillofacial region; the “auricular prostheses” for ear defects, “facial prostheses” for mid-face, “orbital prostheses” for eye socket defects and “obturator” for palatal defects. Digital designing, computer-aided design & manufacture (CAD-CAM) and rapid prototyping have seen a dramatic increase in utilisation in the past few decades, especially in the fields of medicine and dentistry. This can be attributed to the fact that computers, software and hardware have made great leaps in technological advances. Personal computers have become more powerful in their processing capabilities with every development in core architecture. Such development allows for tasks like graphics rendering to be carried out on personal computers, which would have been thought impossible a couple of decades ago [1].Although computers and associated software are currently used to create prosthetic templates to serve as fabrication guides for clinicians, very few articles have recorded the digital workflow to create the aforementioned prosthetic templates in the rehabilitation process of maxillofacial defects [2].The ear is an anatomically complex organ. Medical sciences have specialised technicians called anaplastologists who develop expertise in the sculpting of anatomical organs. These skilled technicians are paid lucratively for their services, the cost of which is added to the patient's treatment. The alternative to such age-old conventional means would be using digital systems to digitally recreate the prosthesis. For decades, most authors have used and confirmed success with commercial software in carrying out the task. However, the exorbitant subscription fees of the CS add to the cost of treatment, even though anaplastologists' fees were cut [[3], [4], [5], [6], [7], [8], [9], [10]].Prosthetic midface rehabilitation can be unique and challenging depending on the case. The complexity depends on the extent of the defect. This extent ranges from the restoration of one side of the face or orbit to mid-facial defects involving the nose. For an orbital or facial prosthesis, mirroring the healthy side has had successful results. Alas, once again, these were mostly carried out using commercial software. When the nose is involved, however, the entire process becomes more complex as lines of symmetry are disrupted [2].The palatal defect exposes the oral cavity to many sensitive structures situated within the nasal cavity. Conventional processes demand that a negative impression of the defect site is taken using impression material. This procedure exposes the patient to a magnitude of complications. Issues arise from residual impression material being left unnoticed deep in the defect cavity. Complications of such issues include infection and allergic responses, with more serious situations necessitating hospitalisation and a surgical approach for removal of the residues [4,8,11]. Digital data capture and designing could potentially bypass such issues entirely.
1.2. The research questionsCan prosthetic specialists create a genuine prosthetic template with the aid of open source (OS) digital workflow? How much would the process of prosthesis fabrication using OS differ from the commercial software (CS) counterpart? Are there limitations to designing facial prosthetics using free software? Is there any difference in the volume and shape of templates designed by OS when compared to CS? Is it possible to design the said prosthetics on personal computer setups without having to purchase additional hardware?
1.3. The objectivesThis study will aim to answer all the aforementioned questions by adhering to two objectives:1.Designing five prosthetic templates of maxillofacial defects using both open source and commercial software on a low-end personal computer setup to evaluate the differences in the designing processes from a clinical operator's point of view.2.Virtually analyse the designs using volumetric comparison, point cloud and Dice similarity to evaluate the dimensional differences between OS and CS system designs.
