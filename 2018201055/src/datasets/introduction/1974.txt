Systems that we develop today have more components interacting with each other and increasingly include software. These systems exhibit non-linearity and emergent properties. Emergent properties are also seen as concerns and include safety, security, and privacy. Most of the concerns are addressed in the design stage by disjoint safety, security, and privacy teams, requiring the integration of work later. This way results in longer-lasting projects. Examples of techniques for safety analyzes include Fault Tree Analysis (FTA) [1], Event Tree Analysis [2], HAZOP [3], Failure Mode, Effects, and Criticality Analysis (FMECA) [4], HFACS [5], and Hazard Analysis and Risk Assessment. (HARA) [6]. HARA and HAZOP are safety analysis approaches that can also be used in the early stage of development. For security approaches, the families ISO 27000 [7] and NIST 800 [8]are standards that contribute to protecting hosts and computer networks by identifying and dealing with security threats.
Most safety and security techniques are meant to be used when most of the information about the system design is available when many design decisions and compromises are already made. This limits the concept of a system that considers emergent properties, such as safety and security.
System-Theoretic Accident Model and Processes (STAMP) is an accident causality model, based on systems theory [9]. System-Theoretic Process Analysis (STPA) [10]is a technique, based on STAMP, to identify hazardous control actions, loss scenarios, and safety requirements. STPA is considered a rather complex technique since it requires a different analysis perspective compared to other hazard analysis techniques, such as FTA and FMECA. STPA is based on the analysis of control actions, feedbacks, and other interactions. There exists a growing interest in using STPA because it is claimed that STPA can identify more loss scenarios and safety requirements [10]. STPA is also claimed to address security concerns, however, there exists a lack of experience of using STPA in the security domain. We hypothesize that STPA is limited to provide security analysis because it neither specifically considers security attributes such as confidentiality, integrity, and availability nor includes threat models.
A threat can be intentional, accidental (e.g. computer malfunctioning), or the possibility of a natural disaster (e.g. earthquake) [11]. In computer security, a threat is a possible danger that might exploit a vulnerability to breach security, thus causing harm. Safety analysis focuses on accidental and natural disaster events, while security analysis should consider all types of events, including intentional.
STRIDE [12] is a threat model to identify computer security threats. STRIDE is a mnemonic for six categories of security threat: Spoofing, Tampering, Repudiation, Information Disclosure, Denial of Service, and Elevation of Privilege.
We investigate how STRIDE can be used with STPA to aid the identification of scenarios where intentional threats can breach confidentiality, integrity, and availability and cause harm. We then extend STPA with STRIDE to identify scenarios, causal factors, and requirements related to security concerns. In order to do the extension, we include the STRIDE activities into STPA.
The remaining text is organized as follows. Section 2 presents the theoretical foundations of our proposal. Section 2 also describes related work. Section 3 presents the STPA extension with STRIDE. Section 4 describes the application of the proposal using an example. Section 5 discusses our work. Section 6 concludes our paper and presents some future work.
