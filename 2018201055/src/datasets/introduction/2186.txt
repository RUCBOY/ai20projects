Working with Partial Differential Equations (PDE) is a common task in Engineering and Sciences applications. Many phenomena can be modeled with PDE. Solving PDE normally requires difficult computation and in many situations, the way to find the solution is by means of an approximation algorithm from Numerical Analysis theory. But what happens if the PDE to solve depends on one or more general parameters? Applying numerical methods normally requires giving specific values for these parameters. Finding a solution of a PDE with parameters is therefore a difficult task that normally needs to be solved analytically. To achieve this goal, we will use a Computer Algebra System (Cas). Cas are computer software that can deal with exact computations and manipulate algebraical expressions. For example, a Cas can expand (x+y+z)3 and return the result x3+3x2y+3x2z+3xy2+6xyz+3xz2+y3+3y2z+3yz2+z3 while a numerical software needs the values of x,y and z to obtain the result. In addition, ∫011−x2dx=π4 in a Cas while a numerical software will return an approximation of the value with some significative digits.
There are a lot of Cas available in the market (see [1] for a complete list and description of Cas from their origins) but we are interested in those ones which allow the use of programming and with a large amount of built-in functions. Among the Cas satisfying these characteristics, there are both, proprietary and free software. For example, some proprietary ones that can be considered are Derive [2], Mathematica [3] or Maple [4] while Maxima [5] or Sage [6], [7] are free software that could also be used. Due to the expertise of the authors, the chosen one is Derive since we have a long experience in using this software both in Engineering education [8], [9] and research [10], [11].
The existing Cas PDE solvers use the Cas as a black box [12], [13], [14], [15], [16]. That is, the Cas only provide the solution of the PDE without any further information. We are interested in this work in the use of a Cas for solving PDE as a white box, providing not only the solution but also all the procedures for solving the PDE.
Therefore, the main goal of this paper is the development of SFOPDES, a new stepwise solver using the software Derive to solve first order PDE step by step. We will describe this new solver and will provide the code freely so that anyone can use and modify it attending to the specific necessities. SFOPDES is a novelty since we do not know of any other free PDE solver which provides so many detailed steps of the solving procedure. This fact makes SFOPDES to be very useful also in the teaching and learning process in a PDE course for Engineering or Mathematics students.
In the process of solving PDE, first order Ordinary Differential Equations (ODE) are needed. Therefore, SFOPDES does not only solve PDE but ODE also. The programs in SFOPDES can be grouped within the following blocks:

•First-order ODE: separable equations and equations reducible to them, homogeneous equations and equations reducible to them, exact differential equations and equations reducible to them (integrating factor technique), linear equations, the Bernoulli equation, the Riccati equation, first-order differential equations and nth degree in y’, and generic programs to solve first order ordinary differential equations.•First-order PDE: Pfaff Differential Equations, Quasilinear PDE and Lagrange–Charpit Method for First-order PDE.
In order to make the paper self-contained, Section 2 is devoted to explain the definitions and theory needed to solve the PDE considered. In Section 3 the syntax of the programs developed in the library of functions of SFOPDES is described. Some examples of use are shown in Section 4. Finally, Section 5 is devoted to the conclusions and the enumeration of some ideas for future related work.
