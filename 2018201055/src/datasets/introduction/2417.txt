The goal of the nearest neighbour search is to retrieve a set of database vectors that lie in proximity of the query vector. This is a common problem that frequently occurs in many computer science domains, e.g. in computer vision [2] or data mining [3]. Nevertheless, finding the exact nearest neighbour is often computationally expensive, while determining an approximate nearest neighbour provides an efficient and satisfactory alternative. This is why several successful solutions for the Approximate Nearest Neighbour (ANN) search have been proposed in the literature, such as hierarchical structure based methods [4], [5] and hashing based methods [6], [7]. The method proposed in this paper extends the state of the research in terms of the former group, i.e. the structure based methods, as its key component is a tree-based structure that we use to efficiently retrieve ANNs.
To validate the performance of our proposed method in real-life application, we refer to computer vision, where ANN search is typically used instead of an exact nearest neighbour, e.g. in the context of image-based localisation [8], [9]. For image-based localisation, one needs to find the most similar vectors describing image patches, so-called local feature descriptors, and ANN search is typically used to speed up this process. Local feature descriptors are commonly represented as high-dimensional floating point vectors and this is why the majority of works on ANN in this space focus on vectors of real numbers [5], [10], [11], [12]. However, recently proposed binary descriptors [13], [14] are much less costly to compute while offering competitive or superior performance, and therefore they are increasingly often used in the context of image-based localisation.
This is why in this paper, we focus our work on ANN for binary descriptors and propose a novel ANN search method that uses Random Binary Search Trees (RBST) to find similar vectors within a database of binary vectors. As a use case of our method we take image-based localisation problem and we evaluate our method on a real world dataset of over 1 million binary local feature descriptors obtained within the frames of Google Project Tango collaboration. The evaluation of our ANN search method clearly shows that our algorithm outperforms the state-of-the-art competitors, such as Local Sensitivity Hashing [6] and Multi-probe LSH [15] in terms of retrieval accuracy, while providing similar recall and memory consumption.
The remainder of this paper is organised in the following manner. In Section 2, we present our method. In Section 3, we compare it against the state of the art and we conclude this work in Section 4.
