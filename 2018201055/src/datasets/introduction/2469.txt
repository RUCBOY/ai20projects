The world is moving toward the Internet of Things (Gubbi et al., 2013, Ray, 2018) (IoT), where everything is connected to the Internet. Computer desktop applications are used for everyday tasks such as writing an email or a text document, business accounting, etc. However, these desktop applications have lost their importance because all these things can be done using a web browser without downloading and installing software, just by having Internet connectivity.
Many collaborative tools are spreading across the Internet and the number of different available tools is constantly growing, e.g. Google Docs, Onedrive, etc. If we focus on the development fields, we can find some examples such as GitHub1  or Bitbucket2  for source code development, and JIRA3  for team management and project tracking. These tools provide very useful functionality such as peer code review, file comparison, change history, deadlines reminders, task assignments and more.
The development of these tools has been possible thanks to new technologies like Cloud computing, which provides computational resources on demand. With the Cloud, anyone can rent a small set of computational resources to perform any casual computation. Furthermore, there are other more traditional approaches like Grid computing or High Performance Computing (HPC).
However, scientific tools do not evolve at the same pace and, depending on the complexity of scientific software algorithms, a huge amount of processing power is required. Hence, researchers need to learn about computer architectures and system configuration, which can be difficult for someone with a limited computing background. Moreover, most researchers invest a lot of time in learning to use these new features. It is time to start using the knowledge acquired for tool development in other fields in order to update the methods for doing science and take scientific research to new heights, through the use of the data generated by the IoT.
Most scientific workflows that make use of computational resources share many of their steps or methods, especially the ones that require the use of a supercomputer. In this paper, we present a proof-of-concept study for a web-based service, oriented toward scientific research applications, which will provide the end user with a set of useful tools. Our aim is to test whether it is possible to abstract a discipline scientist from the details of computer configuration, giving scientists enough computational resources to satisfy their experimental requirements. These objectives are closely related to the Cloud concept of Software as a Service (SaaS), in which fully working software is provided to the user without the need for prior installation or configuration.
The rest of the paper is organized as follows: Section 2 presents a common workflow used by scientists to perform a defined experiment with a specific software. The current state of HPC software migration toward Cloud environments is also summarized. As web interfaces also have an important role in this work, we briefly reviewed a representative set of existing scientific web interfaces.
ScifE is, above all, a framework with a service oriented architecture. This “backend” architecture presents many challenges because it has to implement all the bulk functionality that will provide service through a web interface. This web interface, which will be used by the end user, has been developed using state-of-the-art technologies found in many successful interactive web pages. Section 3 shows the main features of our proposed architecture, its functionality and how it has been implemented. Section 4 is dedicated to explaining the tests we have conducted to verify the feasibility of the architecture. Finally, in Section 5, we present what we have achieved with the development and testing of our proof-of-concept framework, what we need to improve in order to make the software available for production use and what our future objectives are.
