Regular usage, ageing and environmental conditions are some of the main factors which contribute to the deterioration of road surfaces. In combination with the ever expanding urbanization and development of public infrastructure, the surface area of roads grows and so does the need for maintenance to keep those structures in usable condition. One of the main defects that can appear on road surfaces are cracks [1], [2]. If not treated within a reasonable timeframe these cracks can increase in size, impair the structural integrity of roads and pavements, facilitate further defects such as potholes as well as lead to material damage and required maintenance downtimes [2], [3]. Therefore it is important to regularly survey those surfaces and fix faults before they escalate. Due to the developments in information technology and image processing techniques it is now possible to enable the partly automation of the surface inspection process to detect faults such as cracks. Proposed systems can include a variety of sensors such as cameras or laser [2], [4], [5] as well different platforms on which those sensors are deployed. These may be groundborne, such as specialized vehicles [2] or airborne as in UAVs [5]. However, independent of the platform or the sensors used, a large amount of data is collected which needs to be analyzed, either manually, which is unduly time consuming, or by the use of automatic algorithmic methods.
Fig. 1 shows the diversity of surface cracks, they may traverse into the horizontal and vertical directions, appear in grid like patterns, vary in width along the same crack and appear atop of different surface structures. In addition to that, other anomalies may cover the appearance of cracks in images, including road markings, dirt patches, oil stains and vegetation, all of which are common occurrences. This makes this task increasingly more difficult when conducted manually, in addition to any subjectivity an annotator might have [1], [8].Download : Download high-res image (89KB)Download : Download full-size imageFig. 1. Sample crack images (top row) and their annotated ground truth labels (bottom row) from three datasets ([6], [7], [3]), showing some of the challenges of the crack segmentation task: non-uniform backgrounds, obstructions such as shadows, dirt and stains, differing crack widths as well as changing camera angles.
In the computer vision domain, deep learning based convolutional neural networks (CNN) provide state of the art performance in a variety of tasks such as classification, detection and segmentation [9], [10], [11]. In some tasks they have even surpassed human performance [12]. Other work has also shown that when working on images with cracks, deep learning based methods outperform other techniques using handcrafted features or further machine learning approaches, making them well suited for the analysis of cracks in images [3], [13], [7], [5], [14]. In this work we follow the popular approach of using semantic segmentation to analyze surface images, automatically annotating an image on a pixel level and stating for each pixel if it either contains a crack or not. Other approaches have been proposed to classify whether images or patches contain cracks [15], [14] or locate cracks through creation of bounding boxes [16], however segmentation provides a better level of detail to assess the severity of cracks and allows for tracking of potential crack changes over time.
Encoder-decoder based CNN architectures have achieved significant results, from segmentation of city-scenes [17], [18], to medical image segmentation [19] as well as for crack segmentation [3], [13], [20], [21]. This is a popular approach as the encoder learns denser features and the decoder then increases the size of the features again for creation of a segmented output. Connecting features of the encoder and decoder parts in an architecture, not only at the bottleneck such as in SegNet [17], but at their interim stages generally leads to improved results. This is shown in state of the art results in the crack domain, such as in DeepCrack [3], which fuses multi-scale features at the different levels of the encoder-decoder architecture, FPCNet [13] which sums skipped feature maps in the decoder upsampling process or as in the architecture in [21], using concatenated shortcut connections between encoder and decoder as introduced in the U-Net [19] architecture for medical image segmentation.
Several recent encoder-decoder segmentation architectures have been designed around using an encoder backbone which has been derived from popular image classification architectures [7], [22], [23], [24]. As these encoders are designed for image classification they provide strong feature extraction capabilities and are therefore ideal for use as an encoder part in segmentation architectures.
Based on those observations we present an universal decoder design which can be added to a variety of popular feature-encoding backbones such as VGG [25], ResNet [26] and EfficientNet [10] to effectively segment surface cracks.
Whilst many of the previous works only report their results on a small amount of datasets [13], [21], [27], [7], we show that our decoder-design in conjunction with a pretrained backbone achieves high performance across a multitude of datasets.
In summary, our proposed optimized deep encoder-decoder methods consist of the following contributions:
1.We design a novel decoder part for encoder-decoder based CNN architectures to segment surface cracks in images. This decoder can be added to different encoder architectures, completing an U-Net like shape for the task of semantic segmentation. The components of this decoder architecture have been selected to optimize the performance on the task of crack segmentation.2.The performance of this decoder is then evaluated on five relevant crack datasets. It is shown that using this decoder, in conjunction with an EfficientNet B5 encoder backbone, new state of the art results are achieved in all datasets. To the best of our knowledge this is one of the first comparisons across a such a large number of crack segmentation datasets from different works.3.During evaluation, we apply two techniques which previously have not been used in the crack-segmentation domain; Firstly, we discover that test-time-augmentation, through resizing of images, yields an additional boost in performance and secondly, reporting of results using a single training run is error-prone and does not accurately present the performance of a model. We therefore propose to report results after performing a statistical analysis and do so by showing the performance of our model by reporting the average and standard deviation over ten training runs
