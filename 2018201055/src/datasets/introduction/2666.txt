Data visualization is a vital step in the scientific process: no matter how important the research, if decision makers, other scientists, or the public can't understand what your science means, society won't benefit from your results. This is well-known and well-understood, and data visualization has long been an important part of the scientific enterprise. There are many important contributions over the years, and the most accessible and well-known is Tufte's The Visual Display of Quantitative Information [1]. Tufte's other books [[2], [3], [4]] are seminal as well. Given the recent (≈last 10 years) push to “Big Data”, associated emphasis on data analytics in materials science [[5], [6], [7], [8], [9]], and commensurate improvements in scripting software and associated graphics libraries, such as MATLAB, R's ggplot2 [10], and Python's Matplotlib [11] or Seaborn [12], there has been a sudden crop of publications discussing rules, recommendations, and heuristics for the improved visualization of scientific data (e.g., [[13], [14], [15], [16], [17], [18], [19]], among many) Relatively little discussion of materials-science specific data visualization is available; a few papers are available on particular aspects, such as in large data sets [20], but very little general advice is, to our knowledge, available. Some examples of general rules, which herein we try to expand for materials and physical sciences, are to “know your audience” [13] or to use scatterplots instead of bar/line graphs [14]; we suggest the interested reader examine the referenced papers if they find the suggestions in this paper useful.
However, most of this plethora of good advice has been focused on the biological, psychological, and climate sciences. In this paper, we present six data visualization heuristics that we have developed specifically for the physical, and particularly materials, sciences. We will draw examples from ion beam implantation, microscopy, and mechanical properties, as typical and common examples that are still understandable to those outside the field. We also provide online the Python 3 Jupyter Notebooks used to generate the figures here.1 The six rules we enumerate are: (1) Generate figures programmatically; (2) Multivariate data calls for multivariate representation; (3) Showing the data beats mean ± standard deviation; (4) Choose colormaps that match the nature of the data; (5) Use small multiples; and (6) Don't use vendor exports naïvely.
As a matter of definition, we will take “data visualization” to mean “the presentation of results derived from experiments or simulations,” in differentiation from the usage of visualization to describe the overall display of a system under study, as might be the connotation of “visualization” in a purely computational or theoretical framework.
