The ocean covers over two thirds of the earth’s surface. Although this vast and profound area is rich in biological organisms, chemicals, mineral deposits, natural gas and petroleum resources, the marine environment is quite complex and harsh. Therefore, human beings are not capable of submerging to deep sea depths or staying underwater for long periods of time. Applications of various high-tech means are required, for instance, underwater robotic technology (Williams et al., 2012, Zhang et al., 2015, Zhang et al., 2018), to understand marine environment, study marine science, and explore and exploit marine resources (Jarry, 1986, Pazmiño et al., 2011). By employing an observation device carried by underwater vehicles, human beings can complete rapid environmental assessment (Hagen et al., 2008), sample and observe underwater resources, perform subsea mapping, inspect underwater cable (Yu et al., 2018a), and explore underwater oil and natural gas deposits (Lane et al., 1997). Therefore, many countries with strong ocean engineering capabilities are focusing much attention on the development of underwater vehicles (Roberts and Sutton, 2006).
According to the operation mode, two main types of unmanned underwater vehicles, remotely operated vehicle (ROV) and autonomous underwater vehicle (AUV), are designed to replace human beings for deep-sea activities in the commercial and scientific fields (Antonelli, 2014). The ROV is physically linked, via an umbilical cable, to an operator that can be either on an underwater workstation or on a supporting ship. With the umbilical cable, remote operators can use a ROV to accomplish intervention tasks easily. Therefore, ROVs are widely used by the offshore oil and gas industry. Relying on the onboard power supply and intelligent control units, AUVs are designed to be used with no umbilical cable and are completely autonomous. Examples of AUVs include the Bluefin-21, which was used for black box search of the Malaysia Airlines crashed plane, developed by Bluefin Corporation (Dhanak et al., 2013), and REMUS, which was originally used as a remote environmental measuring unit, developed by Woods Hole Oceanographic Institution (Stokey et al., 2001). Combining the advantages of ROV and AUV, a new type of hybrid underwater robotic vehicle (HURV) is designed for deep-sea exploration and intervention, such as Nereus (Bowen et al., 2008), UROV7K (Nakajoh et al., 2007) and SAUVIM (Marani et al., 2009). This new underwater explorer fills the gap between the commercial market and oceanographic research. The HURV can operate as an AUV for broad-area underwater mapping/surveys, and then can convert into the light fiber-optic tethered ROV mode to do close-up underwater sampling/intervention of a target area of interest. In Fig. 1, the operational procedure of the HURV is shown. More precisely,
(1) The mother ship supporting the HURV sails for the target area, and then the HURV and its launcher are deployed into the water together;
(2) The HURV is released from the launcher and moves just like an AUV in the autonomous control mode, exploring the large-scale sea floor with sonars and cameras in order to locate the target of interest; and
(3) The HURV works in the ROV mode, enabling high quality tele-operation by a human pilot, such that fine underwater target manipulation/intervention is achieved via visual guidance and force/tactile feedback.
In this paper, the design, implementation and experimental results of a HURV, which was recently developed by the lab of Autonomous Robotic Marine System (ARMs), are presented. How to design a two-layer software architecture and a practical heading control system for the developed HURV are the main concerns.Download : Download high-res image (290KB)Download : Download full-size imageFig. 1. Operational procedure of HURV.
One of the key technologies employed in the HURV developed by ARMs is the software architecture. In Valavanis et al. (1997), the proposed control system is based on a two-level control architecture comprised of a supervisory control level and a functional control level. The supervisory control component is responsible for the coordination of the overall AUV navigation, guidance, and control. The functional level modules directly control actuators, sensors, and all hardware components residing directly on the vehicle. In Han et al. (2013), the control architecture of the AUV is implemented by a hybrid architecture with two layers: a hierarchical planning layer and a reactive execution layer. Most of its tasks are interpreted as a set of waypoints, and then actions are specified at the points. In Palomeras et al. (2012), the Component Oriented Layer-based Architecture for Autonomy (COLA2) of the vehicle implements the component-oriented layer-based control architecture structured in three layers: a reactive layer, an execution layer and a mission layer. Reinforcement learning techniques have been programmed in the reactive layer to improve the vehicle primitives’ adaptability to unknown time-varying environments. The execution layer implements a discrete event system based on Petri nets. The entire software structure of the SAUVIM is divided into two parts for MC68060 CPU boards (Kim and Yuh, 2004). One is the application layer and the other is the device layer. The shared memory via the VME bus is used to guarantee real-time communication between these two CPUs.
The other key technology is the control design. When the HURV works in the AUV mode, the classic motion forms can be divided into the heading control and depth control or dynamic positioning, path following and trajectory tracking (Chu et al., 2018, Bhopale et al., 2016, Neto et al., 2015, Li et al., 2018, Qiao et al., 2017). In the last twenty years, various motion controllers have been designed, such as PID control, backstepping control, sliding mode control (SMC), neural network control, fuzzy control and so on (Wang et al., 2017, Liu et al., 2016). For instance, a virtual target moving along the path is introduced as an additional degree of freedom to eliminate the singularity of the horizontal-plane path following Lapierre and Soetanto (2007). In Fossen et al. (2015), a nonlinear algorithm combining a PID controller with an adaptive line-of-sight (LOS) guidance is presented for the Dubins path following. It is well known that SMC is considered a robust approach to control a nonlinear system with internal and external uncertainties. Therefore, the SMC technique has been widely used to address the tracking control problem of robotic vehicles with uncertain parameters (Liang et al., 2016, Sun et al., 2016, Cui et al., 2017, Xiang et al., 2017a). The conventional fuzzy logic control, due to its simple control structure, and easy and cost-effective design, has been successfully employed in control applications in robotic fields (Wang et al., 2018, Peng et al., 2018). For instance, a single input fuzzy logic controller is applied to the variable-depth control of an underwater vehicle (Ishaque et al., 2010). In Kim et al. (2012), the sufficient conditions for the robust stabilization based on the exact discrete-time fuzzy model of uncertain nonlinear systems are derived and their application to the depth control of AUV is tested. The adaptive fuzzy technique based on the universal approximation has also played an important role in the control field of robotic vehicles. The readers can refer to Tee and Ge (2006). The neural network control has a similar capability and has been adopted in dynamic positioning (Gao et al., 2016), distributed maneuvering (Peng et al., 2017), trajectory tracking (Chu et al., 2016, Wang et al., 2015) and path planning (Zhu et al., 2018). It is very important that a controller can be easily implemented in an actual onboard system of robotic vehicles. Therefore, a reliable and practical controller is preferred by engineers in developing a marine robotic vehicle.
In this paper, the software architecture of the HURV is divided into a monitoring layer and a task layer. The monitoring layer is built on the client–server supervisory control and data acquisition (SCADA) system running between the surface platform and embedded computers. The real-time operating system, VxWorks, is chosen for the underwater embedded controller, such that the multi-task processing is achieved based on the Round Robin, binary, mutual exclusion semaphores and shared memory. Based on the above software architecture, the HURV makes full use of the onboard controller and high-accuracy sensors to complete complex underwater missions. Then, a practical fuzzy proportional–integral–derivative (FPID) controller without using any hydrodynamic coefficients is chosen for the automatic heading control, where the cruising-speed tracking by using a pair of vertical rudders and the low-speed tracking by using two horizontal thrusters are considered, separately. Subsequently, numerical simulation results are provided to show the superiority of the designed FPID controller performs than the classic PID controller, especially in the rise time, settling time, and overshot. Finally, the motion experiment results of this developed HURV illustrate that the two-layer system has satisfactory multi-task processing performance, and under the corresponding two-layer software architecture, the fuzzy-based heading controller has robust performance against unknown hydrodynamic coefficients and external disturbances in the presence of actuator saturation.
