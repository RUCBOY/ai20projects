With the sharp increase in massive data, cloud computing has been integrated into various types of network technologies to improve massive data processing and management capabilities. In cloud computing, one of the most significant services is cloud storage [8], which possesses the advantages of nearly unlimited storage space, and enables users to remotely upload their data to the cloud storage server. Besides, cloud storage services contribute to kernel data sharing among users with no geographic constraints, which can achieve flexible access anywhere.
Although cloud storage services have brought about a great many benefits to users, some serious security concerns in data outsourcing have emerged [42]. Without the physical control of the data stored in the remote cloud server, users would not fully trust the cloud server. As the cloud server may be malicious or corrupted, the outsourced data may be eavesdropped, tampered, or deleted, thereby undermining data confidentiality, integrity, and reliability. From the perspective of users, the most important security issue is data confidentiality, especially for those sensitive data which need to be encrypted before being outsourced to the cloud server [11]. Simultaneously, original data owners also want to share encrypted data with other data receivers. Hence, how to search over the ciphertexts and retrieve target data in the cloud server efficiently has been a challenging issue.
Public-key encryption with keyword search (PEKS) [5] is a promising cryptographic primitive that can achieve the goals of searching and retrieving target data efficiently. However, most of existing PEKS schemes are designed on conventional cryptographic hardness assumptions, which may be broken in the near future according to the research on quantum computers [34]. The recent breakthrough research results [4] indicate that quantum computers would be probably constructed, which makes post-quantum secure PEKS schemes more critical than ever before.
We also observe that existing PEKS schemes lack a controlled outsourcing mechanism. In some scenarios, original data owners may only have limited computation resources, or have no abilities to access the Internet flexibly. For instance, as a chronic disease patient, she/he needs long-term treatments. During this period of treatments, continuous recording health status of the patient with medical sensor devices will generate massive medical data, among which, some medical data are critical and sensitive. As the patient cannot flexibly process these massive medical data in real time, on behalf of the patient, a trusted proxy (e.g., medical worker) needs to be authorized before encrypting these sensitive medical data as well as corresponding keywords, and upload them to the cloud server associated with medical information systems. Thus enables the patient to share these sensitive medical data with data receivers (e.g., chief doctors) for further precision analysis and diagnosis. Consequently, constructing an efficient proxy-oriented PEKS scheme in cloud storage systems is indispensable [13], [35], especially for those original data owners with constrained data processing capabilities.
As far as we are concerned, a majority of existing PEKS schemes are designed on certificate-based systems [10], [16], which incur complex certificate management procedures in public key infrastructure (PKI), including time-consuming certificate generation, certificate storage, certificate update, and certificate revocation. Additionally, some drawbacks in the security procedures of various certificate authorities have also jeopardized trust in the entire PKI, which might hinder the secure deployment of PEKS in cloud storage in practice. While an identity-based cryptographic system, first introduced by Shamir [33], can eliminate the establishment of the PKI. In such a system, a trusted key generator center (KGC) can generate the private key according to any known information of an individual, e.g., telephone number, email or IP address. Hence, it can remove the need for explicit certification and all associated costs, making an identity-based cryptographic system particularly appealing.
Along with the aforementioned hindrances in the deployment of PEKS in cloud storage, as pointed out in Huang et al.’s work [16], due to the low entropy of keywords, most of existing PEKS schemes are vulnerable to inside keyword guessing attacks (IKGA) from misbehaved cloud servers. In particular, to perform such IKGA, a misbehaved cloud server encrypts all keywords under a data receiver’s public key by exhausting a small keyword space off-line. With a searchable trapdoor from the data receiver, the misbehaved cloud server can identify the ciphertext which matches the targeted trapdoor exhaustively, and recover the keyword hidden in the trapdoor to violate data privacy eventually.
To address the above issues, in this paper we propose a proxy-oriented identity-based encryption with keyword search scheme from lattice assumptions for cloud storage, providing a post-quantum secure promise. Lattice-based cryptography [28] inherently owns distinct advantages (i.e., strong security proofs based on worst-case hardness, efficient implementations), and has been considered as a promising post-quantum cryptography. Specifically, the contributions of this work are elaborated as follows.
•We propose an efficient proxy-oriented identity-based encryption with keyword search scheme, called PO-IBEKS. PO-IBEKS is constructed by leveraging an identity-based encryption based on the hardness assumption of deciding learning with errors (LWE) problem [15], and is secure against quantum-computing attacks. Moreover, we integrate the LWE encryption and preimage sampleable function [15] into PO-IBEKS to resist IKGA from misbehaved cloud servers, under the quantum-computing settings.•To support proxy-oriented functionality, PO-IBEKS is the first lattice-based scheme that enables an original data owner to authorize a trusted proxy to encrypt sensitive data as well as corresponding keywords, by generating the signed warrant, thus alleviates the data processing burden on the original data owner. As the warrant includes the relative rights and information of an original data owner and a proxy, any unauthorized proxy cannot encrypt the data and outsource them to the cloud server on behalf of the original data owner.•We provide provable security of PO-IBEKS, including ciphertext indistinguishability, extensional unforgeability, and delegation security. We also conduct a comprehensive performance evaluation compared with existing schemes, PO-IBEKS is much more efficient in terms of communication overhead and computational costs. Specifically, PO-IBEKS dramatically reduces the end-to-end computation delay from the cloud server to the data receiver. This is because that in the test process, cloud server only needs to execute simple addition and multiplication operations over a moderate module, without needing much more time-consuming cryptographic operations, such as bilinear pairing and modular exponentiation operations.
The remainder of this paper is organized as follows. In Section 2, we review the related work. In Section 3, we introduce preliminaries, including lattice-based cryptography, system model of PO-IBEKS, threat model, and design goals. In Section 4, we propose PO-IBEKS. In Section 5, we provide the security proof of PO-IBEKS. In Section 6, we conduct the performance evaluation. In Section 7, we draw the conclusions and future work.
