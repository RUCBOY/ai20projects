Answers to the questions of which instructional methods are suitable for school, what instructional methods should be applied in teaching individual subjects and how instructional methods support the act of learning represent challenges to general education and education in individual subjects. The wide range of instructional methods is almost incomprehensible.
The Center for Teaching and Learning (2018) cites 150 instructional methods, Gugel (2011) more than 2000 methods including their variations. Handbooks describing instructional methods are provided by authors such as Ginnis (2001); Abell and Lederman (2007); Davis (2009); Petty (2009).
A useful definition of method which also represents the conceptual starting point for this study comes from Huber and Hader-Popp: “The word method is understood to mean a clearly defined, conceptually perceivable and independent, if also integrated, component of teaching.” (Huber & Hader-Popp, 2007, p. 3)
Empirical findings on the effectiveness of learning are numerous. In his compilation of 800 meta-analyses into which more than 50,000 studies were included Hattie provides information on the influences on learning with respect to six domains: contributions of the person learning, the parental home, the school, the instructor, the curricula and teaching. In particular, the domain of teaching (Hattie, 2009, chapters 9 and 10) provides information on the effectiveness of instructional methods/approaches. High effect sizes (d > 0.50) were demonstrated for microteaching (d = .88), reciprocal teaching (d = .74), feedback (d = .73), problem solving (d = .61), direct instruction (d = .59), mastery learning (d = .58), case study (d = .57), concept mapping (d = .57), peer tutoring (d = .55), cooperative (vs. competitive) learning (d = .54) and interactive instructional videos (d = .52).
There is as yet no standard reference work in neither German nor English literature for computer science education which extensively addresses the application of instructional methods for school (Cornelson, 2018). The German-language literature contains a few brief chapters on the application of learning assignments, group work, learning programs, discovery learning and project teaching (Hartmann, Näf, & Reichert, 2006), problem solving and project teaching (Humbert, 2006), problem-orientation along with modeling and simulation (Hubwieser, 2007), problem solving, experiments and project teaching (Schubert & Schwill, 2012). The English-language literature contains descriptions on the application of “solving problems” (Koffmann & Brinda, 2003), “group work” (Irons, Alexander, & Alexander, 2004), “rich tasks”, “concept maps” (Hazzan, Lapidot, & Ragonis, 2011), and “visualizations” (Agneli, Kadijevich, & Schulte, 2013; Fincher & Petre, 2004).
Several articles in the computer science educational magazine LOG IN (2018) are interesting from methodological and practical teaching standpoints. LOG IN already raised awareness of the necessity of new methods in computer science education ten years ago (Seiffert & Koerber, 2003). Among the writings found in the LOG IN heading „Practice & Methodology” there are reports featuring the following instructional methods: direct instruction, inductive approaches, discovery learning, experiment, concept mapping, problem solving, self-directed learning, project teaching, simulation and modeling, and role-play.
The search through the English-language magazines and conference reports on computer science education (Journal of Educational Computing Research, Computer Science Education, ACM Transactions on Computing Education, Special Interest Group Computer Science Education Bulletin) provided findings related to computer science education in regard to constructivist teaching activities (Gorp van & Grissom, 2001), the “eXtreme teaching” approach (Andersson & Bendix, 2006), holistic teaching and learning (Thota & Whitfield, 2010), the influence of instructional methods on the design of computer programs (Hung, 2012), the effect of games on motivation in teaching (Freitas de & Freitas de, 2013), the reduction of learning content (Kilpeläinen, 2010), the application of formal modeling (Carro, Herranz, & Mariño, 2013), the effectiveness of two-person team programming (Braught, Wahlks, & Eby, 2011) and the application of the experiment (Schulte, 2012).
The curriculum of ACM Association for Computing Machinery (2013) does not contain any recommendations on the use of instructional methods for computer science classrooms. The Bildungsstandards Informatik für die Sekundarstufe I (Computer Science Educational Standards for Lower Secondary Education) (GI, 2018) recommend various instructional methods (e.g. direct instruction, project, group and free work) and learning forms (e.g. subject-related, interdisciplinary, self-directed learning).
For the assessment of instructional methods, a booklet (Zendler & Klaudt, 2015b) was developed at the Department of Mathematics and Computer Science of the University of Education Ludwigsburg, which contains the following 20 instructional methods for computer science education: case study, computer simulation, concept mapping, direct instruction, discovery learning, experiment, Leittext method, jigsaw method, learning stations, learning by teaching, learning tasks, models method, portfolio method, presentation, problem-based learning, programmed instruction, project work, reciprocal teaching, role-play, and web quest. All methods are described according to a uniform schema that provides information on the use of the individual methods in computer science education.
The heat map seen in Fig. 1 contains the means for the 20 instructional methods with respect to the six knowledge processes: build, process, apply, transfer, assess, and integrate (Zendler & Klaudt, 2015b). The heat map also contains the grand means of means of the knowledge processes for the instructional methods. The instructional methods are sorted in accordance with these grand means.Download : Download high-res image (288KB)Download : Download full-size imageFig. 1. Means of the instructional methods visualized for the knowledge processes.
Fig. 1 shows that problem-based learning was assessed by the computer science teachers as the best method for supporting the act of learning in computer science education; this method is followed by five additional instructional methods: learning tasks, discovery learning, computer simulation, project work, and direct instruction.
In a more detailed observation the heat map reveals that problem-based learning is distinguished by high values (> 3.50) for all knowledge processes. Learning tasks is characterized by high values for the knowledge processes of process and apply. Discovery learning demonstrates high values for the knowledge process build. Particularly high values (> 4.00) for the knowledge process build are shown by direct, which additionally has relatively high values (> 3.00) for the knowledge processes of process and apply. Whereas computer simulation is characterized by relatively high values for the first four knowledge processes, project work is notable for relatively high values with the knowledge processes apply, transfer and assess. The following instructional methods in the heat map are also noteworthy: the models method due to its relatively high values in the knowledge process apply, programmed instruction due to its relatively high values in the knowledge processes build, process and apply, learning stations due to its relatively high values in the knowledge process of process, and finally presentation and the experiment method due to their relatively high values in the knowledge process build. The following instructional methods had relatively low values in all of the knowledge processes (< 3.00): learning by teaching, case study, the jigsaw method, concept mapping and the Leittext method. Web quest, reciprocal teaching and the portfolio method were rated as relatively poor (< 2.50) in all of the knowledge processes.
Reciprocal teaching and programmed instruction are two instructional methods that showed high effect sizes in the Hattie study, as evidenced by a large number of studies in different subjects, but not in computer science. On the other hand, the assessments of computer science teachers show a very different picture: While computer science teachers assessed program instruction well, especially for the knowledge processes of build and of process, reciprocal teaching was rated poor in all knowledge processes. In order to verify and validate the assessments by the computer science teachers, reciprocal teaching and programmed instruction must be tested in authentic teaching scenarios, which is the objective of this study.
1.1. Reciprocal teachingReciprocal teaching is a dialogical instructional method between teachers and learners which serves as a tool in understanding the meaning of texts. This instructional method is attributable to Palinscar and Brown (1984).Reciprocal teaching is based on the principle of learning by teaching. Reciprocal teaching is compatible with the assumptions of the cognitive learning theory in which learning takes place through the construction and conversion of cognitive structures. The role of the learner is to actively process information, to organize and to reorganize it. Depending on the learning progress, the learning path is controlled by the teacher or self-controlled by the learners themselves (see Zendler, 2018).Rosenshine and Meister (1994) have presented a first summary of studies on reciprocal teaching. In their study, a co-operative variant of reciprocal teaching was superior to conventional methods for reading, using standardized tests (d = 0.32) and self-constructed tests (d = 0.88) (Rosenshine & Meister, 1994). In the two meta-analyses of Hattie (2009), reciprocal teaching has an effect size of d = 0.74, and was among the top ten instructional methods. The use of reciprocal teaching is mainly positive concerning reading comprehension and in students’ self-efficacy. Similar effects have been demonstrated for natural sciences (Palincsar, Brown, & Campione, 1996; Schneeberger, 2009).The basic structure of this instructional method is as follows: The instructor and each student from a small group take turns leading the discussion on a particular section of text in a joint attempt to understand it. This involves moving through four steps in an iterative manner: (1) Summarizing. The students are required to summarize a section of text. (2) Questioning. The students are required to pose questions regarding the text. (3) Clarifying. The students are required to evaluate the text. (4) Predicting. The students are required to make predictions regarding the text passages that follow.There are few teaching examples cited in the relevant literature applying reciprocal teaching as an instructional method. Sims-Knight and Upchurch (1993) documented a teaching unit on object-oriented design.
1.2. Programmed instructionKeller (1968) introduced the idea of this instructional method and examined its efficiency. Today, programmed instruction is available as educational software for almost every subject. The intensive contact with the teacher distinguishes this instructional method from other forms of self-study. Programmed instruction is based on the mastery learning concept: The students must genuinely understand a topic before moving on to the next one (see Canton, 2007).Programmed instruction is an instructional method with a central instructional focus on individualizing self-study materials that are centered around the learners.Programmed instruction is an enhancement of the “Keller-Plan” method and mastery learning. It is often associated with adjectives such as goal-oriented, individualized, but also with instructed learning. The mastery learning principles states that it is not allowed to continue with the next unit until 80%–90% of the substance has been mastered (Frey & Frey-Eiling, 2010). Programmed instruction can be attributed to the behaviorist learning theory in which (1) the division of learning content into small learning units is important, and (2) the monitoring of learning takes place regularly after each unit (see Zendler, Seitz, & Klaudt, 2017).The overall positive effects on mastery learning are additionally confirmed by the meta-analysis of Hattie (2009). This learning approach achieves an effect size of d = 0.58 and is positioned in the upper third of its list of the most effective instructional methods. For teaching computer science, programmed instruction is classified as "well suited" (Hartmann et al., 2006). Schroeder and van den Boom (2007) report positive effects for teaching computer science in schools, especially with respect to careful presentation of the subject matter, individualization, and monitoring.This instructional method comprises six steps: (1) Study packages. Distribution of the instructional material in individual study packages with instructions on self-study. (2) Provision of the study packages by the instructor. (3) First study package. The instructor selects the first study package for the students. (4) Self-study. The students work through the study package on their own, conduct the exercises in the instructional material and examine whether they have understood the instructional material. (5) Performance monitoring. Instructor gives the students a test. (6) Next study package. If the test is completed successfully, instructor has the students repeat the steps 4 and 5 in relation to the next study package; otherwise the students have to repeat the study package they have failed to understand.Teaching examples applying programmed instruction have been written about by Hartmann et al. (2006) and are available on the website from SwissEduc (2018). They include programmed instruction regarding introduction to the Unix operating system, on recursive programming, proper conduct on the Internet and more.
1.3. Positioning of reciprocal teaching and programmed instructionBy using the frame of reference by Wiechmann and Wildhirt (2015), which consists of three educational dimensions (instruction control, mediation style, and lesson design), we positioned reciprocal teaching and programmed instruction (see Fig. 2). With regard to instruction control and mediation style, both methods are similarly classified. They are somewhat discovery-oriented and more or less student-controlled. Both instructional methods are different in terms of lesson design. Reciprocal teaching can only be achieved if special situational moments are taken up, whereas programmed instruction is based on comprehensively planned preparatory work on the part of the teacher.Download : Download high-res image (270KB)Download : Download full-size imageFig. 2. Positioning of reciprocal teaching and programmed instruction.
1.4. Learning content and instructional methodsLearning objectives and learning content on the one hand and instructional methods on the other are interdependent. To compare instructional methods, it was important to have learning content, which can be taught with both instructional methods. Search queries are one such topic. They contribute to content and process concepts of computer science education (see Zendler, Spannagel, & Klaudt, 2011). Moreover, they are consistent with the requirements of educational standards for computer science education (ACM Association for Computing Machinery, 2013; GI, 2018), and thus receive theire educational legitimacy.1.4.1. Search queriesSearch queries represents a learning content for which Klicksafe – an EU initiative – has designed a module called “search engine” (Rack et al., 2016). The lesson is based on the five steps of the Klicksafe module:(1)Enter the search query. The procedure starts for the user with the entry of the search query in the search field. This step is visible to the user.(2)Search for adequate data centers. When one or more data centers have been selected, the search index stored on servers can be searched in the subsequent step. The worldwide selection of data centers and their index servers is invisible to the user.(3)Index search. The search engine looks for specific character patterns and creates a first result. It can happen that the user has mistyped when entering the search term and thus has fewer search results. To counter this case, the search engine tries to detect syntactical errors and suggests a similar search term to the user as an alternative. This step remains hidden to the user.(4)Search for correct document. The index servers only contain words and web addresses. In the background, they refer to so-called doc servers, which contain processed information material.(5)Search results. In the last step, the search results are listed in form of so-called snippets. The snippets are presented to the user in a user-friendly way. The user can select suggested snippets with a mouse click, and then is directly referred to the website with further information.
1.5. Research questionsProgrammed instruction and reciprocal teaching are two instructional methods, which were classified similarly in the two dimensions of instruction control and mediation style. However, they are very different in lesson design.The assessment of instructional methods by computer science teachers give first answers to the questions of which instructional methods are suitable for which knowledge processes. In the opinion of computer science teachers, programmed instruction is well suited to the knowledge processes of build, process, and apply, while reciprocal teaching is not suitable for any knowledge process in teaching computer science in school.Hattie (2009), on the other hand, found in his meta-analyses that reciprocal teaching is very effective.With these findings and assessments, however, it is not possible to clarify which of the two instructional methods are actually effective in the practical use of lessons, especially in the field of computer science. Thus, the present study concentrates on the empirical comparison of the effectiveness of both methods, in order to answer the question of how effective the two methods are when they are used in computer science lessons.Due to the fact that there is little empirical material to date on instructional methods in computer science education, three questions are central to this study:(1)Reciprocal teaching vs. programmed instruction: Which instructional method performs better with respect to learning outcome on search queries? The answer to the first question is the main interest of this study. However, it must be seen in the context of answering two further questions.(2)Class context: Are there any class differences for learning outcome when reciprocal teaching or programmed instruction are used to search queries? The control of the class context is important because it can be used to verify whether instructional methods in different classes have similar effects or not. If they do not have similar effects, class effects for different learning outcomes have also to be considered.(3)Learning outcome: Learning outcome is a complex construct that can only be grasped through the interplay of several variables. Thus, the question arises as to whether reciprocal teaching and programmed instruction differ, particularly with respect to different types of learning outcome (e.g. concepts, cognitive abilities, practical skills)?The following research hypothesis is linked to these three questions:“In computer science education (grade 5, secondary school), programmed instruction performs better than reciprocal teaching with respect to learning outcome on search queries.”In the next section, we present the methods applied, describing the study design and procedures as well as the data analysis strategy. Then, we give a detailed account of our findings. In the last section, we discuss those findings and, finally, we draw implications for future research.
