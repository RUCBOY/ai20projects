The term ‘mereology’ is accredited to the Polish mathematician, philosopher and logician Stanisław Leśniewski (1886–1939). In this contribution we shall be concerned with only certain aspects of mereology, namely those that appear most immediately relevant to domain science (a relatively new part of current computer science). Our knowledge of ‘mereology’ has been through studying, amongst others, [2].
1.1. Computing science mereology“Mereology (from the Greek  ‘part’) is the theory of parthood relations: of the relations of part to whole and the relations of part to part within a whole”.2 In this contribution we restrict ‘parts’ to be those that, firstly, are spatially distinguishable, then, secondly, while “being based” on such spatially distinguishable parts, are conceptually related. We use the term ‘part’ in a more general sense than in [4]. The relation: “being based”, shall be made clear in this paper. Accordingly two parts,  and , (of a same “whole”) are either “adjacent”, or are “embedded within”, one within the other, as loosely indicated in Fig. 1. ‘Adjacent’ parts are direct parts of a same third part, , i.e.,  and  are “embedded within” ; or one () or the other () or both ( and ) are parts of a same third part,  “embedded within” ; etc.; as loosely indicated in Fig. 2, or one is “embedded within” the other — etc. as loosely indicated in Fig. 2. Parts, whether ‘adjacent’ or ‘embedded within’, can share properties. For adjacent parts this sharing seems, in the literature, to be diagrammatically expressed by letting the part rectangles “intersect”. Usually properties are not spatial hence ‘intersection’ seems confusing. We refer to Fig. 3. Instead of depicting parts sharing properties as in Fig. 3[L]eft, where shaded, dashed rounded-edge rectangles stands for ‘sharing’, we shall (eventually) show parts sharing properties as in Fig. 3[R]ight where •—• connections connect those parts.Download : Download high-res image (26KB)Download : Download full-size imageFig. 1. Immediately ‘adjacent’ and ‘embedded within’ parts.Download : Download high-res image (61KB)Download : Download full-size imageFig. 2. Transitively ‘adjacent’ and ‘embedded within’ parts.Download : Download high-res image (134KB)Download : Download full-size imageFig. 3. Two models, [L], [R], of parts sharing properties.
1.2. From domains via requirements to softwareOne reason for our interest in mereology is that we find that concept relevant to the modelling of domains. A derived reason is that we find the modelling of domains relevant to the development of software. Conventionally a first phase of software development is that of requirements engineering. To us domain engineering is (also) a prerequisite for requirements engineering [5]. Thus to properly design oftware we need to understand its or their equirements; and to properly prescribe equirements one must understand its omain. To argue correctness of oftware with respect to equirements one must usually make assumptions about the omain: . Thus description of omains become an indispensable part of oftware development.
1.3. Domains: science and engineeringDomain Science is the study and knowledge of domains. Domain Engineering is the practice of “walking the bridge” from domain science to domain descriptions: to create domain descriptions on the background of scientific knowledge of domains, the specific domain “at hand”, or domains in general; and to study domain descriptions with a view to broaden and deepen scientific results about domain descriptions. This contribution is based on the engineering and study of many descriptions, of air traffic, banking, commerce (the consumer/retailer/wholesaler/producer supply chain), container lines, health care, logistics, pipelines, railway systems, secure [IT] systems, stock exchanges, etc.
1.4. Contributions of this paperA general contribution of this paper is that of providing elements of a domain science. Three specific contributions are those of (i) giving a model that satisfies published formal, axiomatic characterisations of mereology; (ii) showing that to every (such modelled) mereology there corresponds a CSP [3] program; and (iii) suggesting complementing syntactic and semantic theories of mereology.
1.5. Structure of this paperWe briefly overview the structure of this contribution. First, in Sect. 2, we loosely characterise how we look at mereologies: “what they are to us!”. Then, in Sect. 3, we give an abstract, model-oriented specification of a class of mereologies in the form of composite parts and composite and atomic subparts and their possible connections. In preparation for Sect. 4 summarises some of the part relations introduced by Leśniewski. The abstract model, as well as the axiom system of Sect. 5, focus on the syntax of mereologies. Following that, in Sect. 5, we indicate how the model of Sect. 3 satisfies the axiom system of that Sect. 5. In preparation for Sect. 7 we present characterisations of attributes of parts, whether atomic or composite. Finally Sect. 7 presents a semantic model of mereologies, one of a wide variety of such possible models. This one emphasises the possibility of considering parts and subparts as processes and hence a mereology as a system of processes. Section 8 concludes with some remarks on what we have achieved.
