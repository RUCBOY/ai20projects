Collaboration during the computer science learning process has been shown to benefit students in many ways. It can lead to higher quality code, increased confidence, and a higher course completion rate in undergraduate students [[1], [2], [3]]. One popular form of collaboration in computer science education is pair programming, in which each student in the pair takes on a role as either driver or navigator. The driver has control of the keyboard and mouse, actively constructing and editing code. The navigator observes and actively seeks to identify errors as they are made, plans ahead to offer structural suggestions, and asks clarification questions [4]. Programmers switch roles within pair programming sessions, usually after a specific amount of time or after completing a subtask. In productive pair programming sessions, both driver and navigator participate in active discussion and work as a team.
Pair programming has long been studied for its impact on undergraduates and professionals [5]. However, there is much we do not know about pair programming for young students1  [6]. In order to better understand the needs of these young students, we must first understand how they interact with each other, whether they adhere to beneficial pair programming practices, and whether their collaboration leads to successful program development.
This research sheds light on these questions by examining interactions between elementary school-level programming partners working in pairs within their classroom. Our overarching research goal is to develop a deeper understanding of how young students interact with one another during the pair programming process in order to better support their collaboration in the future. This goal gives rise to two distinct research questions that we investigate through our analyses: first, How do young students balance their dialogue, turn-taking and control while collaborating when learning to program; and second, How do young students coordinate their dialogue during collaboration for computer science?. To answer these questions, we analyzed the students’ dialogue, turn-taking, and input control as proxies to measure the students’ relationship balance. We collected a corpus of data including Scratch programs, planning documents, and video of students’ collaborative process. We transcribed the videos and annotated individual student actions to track important behaviors such as keyboard and mouse control, making and responding to suggestions, and help seeking. This article examines the results of a quantitative and qualitative analysis which reveals factors related to the balance of students’ work, such as the total amount of time each student spoke, the amount of time each student “drove”, and the types of dialogue that the students exchanged. The results show that some student pairs take turns at the controls naturally and both partners contribute actively to the dialogue, while other pairs resist taking turns and display an imbalance in dialogue contributions.
