The last decade has seen a rapid growth in the number of ways young learners can engage in the act of programming. This includes new programming environments, toys that feature programming and other computing ideas, and online campaigns designed to introduce computer science to large numbers of learners around the world. Across these contexts, graphical block-based programming has a growing presence, spanning both formal (classroom) and informal settings [1]. Recently, a wave of blended and dual-modality programming environments has emerged that integrate affordances of the block-based programming approach into conventional text-based programming interfaces, further diversifying the introductory computing landscape. Despite this growth in the variety of introductory programming environments, relatively little is known about the relationship between modality, programming interface design, and the impact they have on learners’ emerging programming practices. We use the term modality to capture both the representational infrastructure used as well as the set of interactions the interface supports. Understanding the effects of emerging programming modalities for novices is critical to the larger goal of making computing education effective and accessible to all learners. This paper seeks to address this gap in the literature by answering the following research question:


How does modality affect learners’ emerging programming practices?
