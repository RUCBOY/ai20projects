Mobile platforms, in particular smartphones, are evolving continuously in terms of processing power, storage capacity and captured image quality. It has now become possible to run computationally intensive image processing algorithms, such as face detection and recognition, object identification and tracking, on smartphones. In the medical area, smartphones are now being used for Computer-Aided-System (CAS) of physical activity detection [26], neurology performance evaluation [45], etc.; and for Computer-Aided-Diagnosis (CAD) systems including electroencephalogram EEG [46] and electrocardiograph (ECG) [2], [52]. In this paper, we are focusing on a smartphone-based CAD system for retinopathy. Such systems are already known to provide ophthalmologists with a non-labor intensive approach for the detection of abnormalities in retinal fundus images. Another advantage of these systems is their capability to allow eye examination in remote locations with limited access to clinical facilities. The work described in [6] implements a diabetic feature detection approach proposed in [16], on Android smartphones. The app is compared with retinograph-captured fundus images where the detection accuracy is about 87%.
The localization of Optic Nerve Head (ONH) plays a key role towards identifying conditions such as Diabetic Retinopathy (DR) [15], [17], [44]. ONH appears as a yellowish region in a color retinal fundus image (see Fig. 1). The main characteristic of ONH is its rapid intensity variations due to dark blood vessels that appear in its vicinity. Three characteristics of ONH have been utilized in the literature to localize it. These characteristics include: (1) appearance as a bright disk nearly 1600 µm in diameter; (2) presence of arteries leaving from and veins entering it; and (3) diverging blood vessels from it. As noted in [23], the detection of ONH is a challenging task due to the discontinuity of its boundary caused by large vessels and its considerable color and intensity variations.Download : Download high-res image (786KB)Download : Download full-size imageFig. 1. Processing pipeline of the ONH detection algorithm.
There are many algorithms in the literature that determine the location of ONH or its boundary. In [37], an overview of the existing algorithms was provided and a computationally efficient algorithm in comparison with the existing algorithms was proposed. The algorithm in [37] employed Radon Transform (RT) to localize ONH based on its brightness and roundness. RT processing was applied to overlapped sub-images in order to detect the sub-image containing the ONH. RT was applied using different orientations with respect to the ONH circular shape. It basically involved computing transforms of intensity projections through sub-images. The processing was repeated for overlapping sub-images and different projection orientations. Besides its high computational cost, the RT computation increases when projections along tilted orientations are considered due to an increase in the amount of memory accesses.
This paper proposes a mobile CAD system in ophthalmology that insures locating the fundus on smartphone-captured image and then detecting ONH using the RT-based ONH detection algorithm reported in [37]. The paper discusses the optimization of the RT computation for the purpose of running it as an app on smartphone platforms. Adecomposition is performed to enhance the efficiency of the RT computation by first performing RT projection by an angle plane-rotation, followed by orthogonal RT projection that is similar to a line matrix sum. Furthermore, the roundness of ONH is used to reduce the plane-rotation processing time by considering orthogonal projections applied to the same rotated sub-image. This has allowed using the OpenCV library. All the computational steps taken are then implemented on Android smartphones.
The rest of this paper is organized as follows: Section 2 provides an overview of the computationally efficient RT-based ONH detection algorithm. Section 3 discusses the computational issues of this ONH detection algorithm. Section 4 proposes the steps taken to improve the computational efficacy of the RT-based ONH detection algorithm. The use of OpenCV and the Android smartphone implementation are presented in Section 5. The results obtained in terms of the performance, the computational efficiency and the validation of the developed smartphone app are covered in Section 6 followed by discussion in Section 7. The paper is then concluded in Section 8.
