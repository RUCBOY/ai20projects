Numerical computing and dynamical systems go hand in hand and this has been a long-term relation. In the 60s, it had already been observed the use of computers dedicated to efforts in understanding climate phenomena [22]. In fact, many numerical problems in dynamical systems, such as finding sinks in the Hénon Map or iterating the Lorenz attractor, have motivated research on arithmetic algorithms for extended precision [20]. As stated in [25], computational techniques are applied to different topics in nonlinear dynamics, such as synchronisation, bifurcation and chaos, complex networks, conservative systems and nonlinear partial differential equations.
In fact, many works have been published delivering an idea of reliability in their numerical solutions of nonlinear dynamical systems. This is not the precise idea that Lozi states in [24]. In fact, he asks if “In the simple case of a dynamic discrete system (of Hénon map) there are doubts as to the nature of the computational results: long unstable pseudo-orbits or strange attractors?” [24]. Other earlier works, such as [6], [10], [37], have already raised some suspicions on the conclusions of nonlinear dynamics upon numerical simulations. Recently, Galias [11] expresses the importance of developing methods to prove the existence of chaotic attractors and warns its audience to the dangers of rounding errors for simulations and analysis of nonlinear circuits. Similar results can be found in [33], but using a method based on interval extension.
Different from the Lorenz system, the proof for the chaotic attractor of the Chua’s circuit needs to be further investigated [11]. The case of Chua’s circuit is an outstanding example of nonlinear dynamical system built upon on inequalities, which has been seen as important source of inconsistent results according to [3]. A “good agreement” between simulation and experimental data cannot be seen as the final answer, which has been considered as paradoxical in [6]. In such direction, it has been reported that a simulation of the Chua’s circuit using the same set of parameters and initial conditions presents chaotic and periodical oscillation depending of the numerical method applied [41]. This kind of chaos suppression according numerical methods is not a new issue and it has been already studied in works such as [7]. Another fact that points out for the importance of the reliability [14], [34] and reproducibility [40], [43] of numerical simulation is the fact that there are theoretical models with no possible real experiment. Take an example of logistic map [26], where x is considered the population density and a continuous variable in the interval of 0 to 1. It means that a population has a infinite number of individuals, which is impossible to make an equivalent experiment.
The term “Computational Chaos” has been defined during investigations on chaotic behaviour of difference equations used to approximate a continuous system represented by a set of differential equations as the step-size is increased [30]. Further results on the same issue can be found in [11], [21], [23], [45], [46]. For instance, in [21], the author has introduced the concept of critical predictable time to provide a more precise description of computed chaotic solutions of nonlinear differential equations.
According to [17], one of the first attempts to examine the relation between numerical experiments and the true dynamics of a system is found in [15]. By means of the Cray X-MP, a computer costing multi-million dollars at that time, they have reported the shadowing property as valid for a considerable number of iterates when simulating the logistic map for the parameter r=3.8 and the initial condition x0=0.4. When this case is considered, according to [15], a pseudo-orbit of the logistic map is shadowed by a true orbit within a distance of 10−8 for 107 iterates. Since the theorem is proved for specific conditions, “it can be raised an issue if the computer test constitutes a sufficient condition, and therefore the theorem is proved for all cases, or whether it is a necessary condition, the result may not be valid for all cases”, as states [32].
Many researchers have applied the result in [15] on studies concerning the dynamical systems theory since then. More than 150 citations of [15] have been analysed through the Scopus online platform and it was observed that, in some cases, the shadowing theorem is seen as a property possible to be generalised for non-hyperbolic systems. The paper of [15] is mentioned as the one that proves the shadowing property for systems with non-hyperbolic behaviour by [39]. In the same line, [15] is considered as “first proof of the existence of a shadow for a two-dimensional non-hyperbolic system over a non-trivial length of time” by [17]. In addition, remarks that the shadowing property had been shown valid for some initial condition and parameter values of the logistic map, without mentioning the cases for which the property fails are presented in [4].
Thus, beyond using the computer to study nonlinear systems, it also becomes important verifying the reliability of its numerical results. Some recent works have explored the issue of checking computer results [11], [31], [32]. An interesting approach to analyse the forward error of iterative numerical algorithm is proposed in [16]. The authors state that “many iterative numerical algorithms can be considered as dynamical systems, and therefore can be studied using control systems theory”, and although the proposed forward error analysis schemes may also be applied to algorithms that can be represented by a nonlinear dynamical system, it will be necessary to show that the dynamical system used to represent the algorithm is Lyapunov stable [16]. One of the key steps towards a control-theory approach to analyse error may require a way to proper measure this error. In this sense, based on the preliminary work about convergence of recursive functions on a computer [31], a method has been proposed to calculate a lower bound error for free-run simulation of polynomial NARMAX [2] by Nepomuceno and Martins [32]. In that work, a simulation is performed by means of two interval extensions, derived from mathematical properties, such as commutative, distributive or associative [29]. These two interval extensions produce two different pseudo-orbits. Applying interval analysis, the authors show a way to calculate an inferior limit, that is, a lower bound, for the error. This method can be extended to other types of recursive functions, as done in [33]. More recently, the lower bound error has been used to develop a fast and robust method to calculate the positive largest Lyapunov exponent by Mendes and Nepomuceno [27], [33]. It has been also used to estimate a critical simulation time, similar to that presented in [21], but calculated by means of interval extensions.
In [32], three identified models from literature have been investigated and it has been showed that it is not possible to undertake an arbitrary number of iterations for some cases of simulation of polynomial NARMAX without losing all significant digits of the simulation. In fact, there are cases that less than one hundred of iterations, all digits lose their significance. This is a serious matter, as for many types of validation techniques, such as the bifurcation diagrams, hundreds of iterations have been considered as transient. For instance, in [35, p. 40], the author described a procedure to build a bifurcation diagram of the logistic map considering the first 500 iterations as transient. This suggested procedure does not make any requirement of computer precision, on the contrary, what we have seen in the literature, most of works have been using only double precision. For instance, in [1] the authors use 1000 points in their algorithm to detect nonlinear dynamics without any description of software or precision. Regarding the studies on Hénon Map, it is noticed a need of an extremely large number of points to observe a sink starting from random initial conditions by [12]. The author in [12] concludes that the most numerical studies do not display anything but transient behaviour. This emphasises the need to a very careful analysis of reliability of a numerical simulation.
In this paper we propose a method to detect unreliable computer simulation of recursive functions based on interval extensions. In particular, we are interested in verifying whether the results regarding the confidence of numerical simulation of logistic map, as enunciated by [15], is also valid for today’s programming languages. In some sense, our main motivation comes from [9], in which a discussion on the using of computer experimentation in mathematics proof is presented. Our method is based in the lower bound error proposed in [32]. First, we check in detail the theorem proposed by [15] using the lower bound error and also symbolic computation. Here we applied associative property of multiplication to produce two interval extensions in order to keep the numerical simulations with the same error interval. After that, we verify the results for all combination of parameters and initial conditions indicated as valid in [15] for three interpreted languages: Matlab, Scilab, Octave and in two compiled languages: Fortran and C. All tests indicate that the theorem is not valid for these programming languages in modern computers. We also present a simple technique to estimate a critical simulation time for systems based on the largest Lyapunov exponent and interval extensions. This is a supplementary way to verify the reliability of the simulation. In a similar way showed by Palmore and Hering [37], our results show that floating-point errors can propagate in a simulation of chaotic systems, and within less than 100 steps, destroy all accuracy of a result.
The outline of the paper is the following: in Section 2 we recall some preliminary concepts on the polynomial NARMAX, IEEE standards on floating point and interval arithmetic [18], [19]. Still in Section 2, we present the definitions of orbits and pseudo-orbits and the lower bound error. Then, in Section 3, we present our method to to detect unreliable computer simulation of recursive functions. Section 4 is devoted to present the results,then the final remarks are given in Section 5.
A preliminary version of our work was presented in [44].
