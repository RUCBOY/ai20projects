Searching new ways for automating reasoning is one of the engines in computer science. In the last decades, the two main research areas devoted to this aim, namely, connectionist systems ans logic-based systems, have explored very different techniques, approaches and representation systems.
On the one hand, logic-based systems are based on a symbolic representation of the knowledge and derivation rules which allow to obtain new formulae from previous ones. Many efforts have done in order to prove the correctness and soundness of the rules depending on the expressiveness of the language and the chosen semantics.
On the other hand, the traditional connectionist systems used to handle automatic reasoning are based on artificial neural nets inspired in the network of biological neurons in a human brain. These nets have been also widely studied and provide a point of view where the data is encoded in real numbers and the synapses between neurons determine the flow of information.
The integration of both paradigms is a vivid area in artificial intelligence (see, e.g., [1], [2], [3]). In the framework of membrane computing, several studies have been presented where P systems are used for representing logic-based information and performing reasoning by the application of bio-inspired rules (see [4], [5]). These papers study approaches based on cell-like models, as P systems with active membranes, and deal with procedural aspects of the computation. The approach in this paper is different in both senses.
On the one hand, the connectionist model of P systems is considered, i.e, the model of P system inspired by the neurophysiological behavior of neurons sending electrical impulses along axons to other neurons (the so-called spiking neural P systems or SN P systems for short). On the second hand, we consider the semantics of propositional deductive databases in order to show how SN P systems can deal with logic-based representing and reasoning systems.
One of the key features of the integrate-and-fire formal spiking neuron models [6] (and, in particular, of the SN P systems) is the use of the spikes as support of the information. Such spikes are short electrical pulses (also called action potentials) between neurons and can be observed by placing a fine electrode close to the soma or axon of a neuron. From the theoretical side, it is crucial to consider that all the biological spikes of an alive biological neuron look alike. This means that we can consider a bio-inspired binary code which can be used to formalize logic-based semantics: the emission of one spike will be interpreted as true and the absence of spikes will be interpreted as false.
As we will show below, SN P systems provide a natural way for dealing with this binary behavior in a connectionist model. SN P systems suffice for dealing with the semantics of propositional logic systems which do not use negation. The semantics of reasoning systems with negated information, even in the propositional case, needs to add new elements for dealing with the difference between negated information and absence of information (see [7]).
The literature of SN P system provides an efficient tool for dealing with such negated information: the use of anti-spikes and annihilation rules. SN P systems with anti-spikes were presented in [8] as a formalization of the idea of inhibiting in some way the communication between neurons. Such extended model has been widely studied (see, e.g., [9], [10], [11]) and it has inspired the use of negative information (see, e.g., [12], [13], [14]). Recently, the study of SN P systems has been extended with different features, see e.g., SN P systems with thresholds [15], SN P systems with request rules [16], SN P systems with structural plasticity [17] or cell-like SN P systems [18]. Among the recent contributions, the approaches shown in [19], [20], [21] deserve to be cited. In such papers, the interaction between reasoning systems and membrane computing is also studied. Instead of dealing with propositional logic, the authors consider fuzzy logic and the applications focus on fuzzy representation of the knowledge and fault diagnosis.
The main result of this paper1 is to prove that given a reasoning system based on propositional logic it is possible to find an SN P system with the same declarative semantics. We prove it in both cases: when the reasoning system involves negation and when it does not. A declarative semantics for a rule-based propositional system is usually given by selecting models which satisfy certain properties. This choice is often described by an operator mapping interpretations to interpretations. In this paper we consider the so-called immediate consequence operator due to van Emden and Kowalski [22]. It is well-known that for a rule based system without negation KB, such operator is order continuous and its least fix point coincides with the least model of KB. We adapt the definition of the immediate consequence operator to a restricted form of SN P system and we prove that a least fix point, and hence a least model is obtained for the given reasoning system. The monotonicity is lost if negation is allowed, but even in this case, the immediate consequence operator can be computed with membrane computing techniques.
The paper is organized as follows: firstly, we recall some aspects about SN P systems and the semantics of deductive databases. In Section 3 we prove that standard SN P systems can deal with the semantics of deductive databases if they do not involve negation. In Section 4 it is shown that endowing SN P systems with anti-spikes and annihilation, then such devices can deal with the semantics of deductive databases with negation. Finally, some conclusions and topics for further discussion are provided in the last section.
