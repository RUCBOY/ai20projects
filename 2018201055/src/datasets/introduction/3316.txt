Process systems engineers have long recognized the importance of both logic and optimization for automated decision-making (Hooker, Ottoson, 2003, Jain, Grossmann, 2001, Maravelias, Sung, 2009, Trespalacios, Grossmann, 2014). Early work on disjunctive programming is motivated by (i) the practical need to naturally model logical conditions such as dichotomies and implications and (ii) the theoretical insights gained from novel structural characterizations (Balas, 1979). Contributions highlighting the importance of both logic and optimization have diverse applications, e.g. spatial layout (Sawaya and Grossmann, 2005), modeling contracts in supply chain optimization (Park, Park, Mele, Grossmann, 2006, Rodriguez, Vecchietti, 2009), and manufacturing systems (Fattahi et al., 2014).
While process systems engineers have been developing methods at the interface of logic and optimization, the computer science community has also been developing hybrid logic/optimization approaches. Typical computer science applications requiring both logic and optimization are operating system scheduling and motion planning in robotics (Aminof, Kupferman, Lampert, 2011, Beaumont, Evans, Huth, Plant, 2015, Raman, Piterman, Kress-Gazit, 2013). The differences in application domains between process systems engineering and computer science have unfortunately led to a divergence in mathematical developments.
But modern challenges in process systems engineering could strongly benefit from methodological contributions in computer science. In particular, we propose satisfiability modulo theories (SMT) for process systems engineering applications. We motivate SMT using a series of test beds and show the applicability of SMT algorithms and implementations.
Section 2 reviews background in both optimization and logic. Section 3 discusses existing optimization/logic hybrids. Section 4 describes three domains where SMT is highly applicable to PSE: (Section 4.1) two-dimensional bin packing, (Section 4.2) model explainers, and (Section 4.3) SMT-based MINLP solvers. Table 1 summarizes our position that SMT has complementary strengths and weaknesses with respect to mixed-integer nonlinear optimization (MINLP). We propose SMT as a methodology to address several challenges in process systems engineering.Table 1. Complementary strengths in SMT/MINLP inspire applying SMT to PSE.SMTMINLPTraditional communityComputer scienceEngineeringDivision in developments stemming from divergent applicationsDeductive reasoningStrongLimitedGDP less flexible than SMTNonlinear functionsLimitedStrongTranscendental functions in MINLPOptimizing bjectiveWeakStrongTightly integrated in MINLPPropositional satisfiabilityStrongWeakLogical propositions not typical in MINLPWarm startingStrongWeakWould strongly benefit MINLPScalabilityLimitedLimitedSMT: Limited for nonlinear functionsMINLP: Limited for large problemsaTypical applicationsSMT: Software verification; SchedulingMINLP: Energy systems design; Biomedical engineeringaFor some problems, MINLP can reliably address 103 variables/constraints; but 102 variables/constraints are more typical for general problem classes.
Parts of this paper have been previously published, e.g. Callia D’Iddio and Huth (2017) describe the Section 4.3 ManyOpt tool in detail. The purpose and novelty of this paper is to show the broad applicability of SMT to PSE.
