Reservoir simulation models are used extensively by oil and gas industries to efficiently manage existing petroleum fields and to develop new oil and gas reservoirs [[1], [2]]. Although reactive transport modeling in porous media is more realistic which have been discussed in [[3], [4], [5]], most reservoir simulations more focus on advection [[6], [7]], as well as diffusion [8]. In order to represent complex geological heterogeneity and to capture highly spatially varying solutions for Darcy velocity, saturation, and concentration, it is common to use millions (or even billions) of grid blocks or cells in large-scale geological models for field-scale flow and transport simulation. Additional computational challenges come from the complexity of the geological media, the flowing fluid, and their interaction, which demands robust and efficient computation of subsurface flow and transport. To address these challenges, parallel reservoir simulators equipped with robust, scalable and efficient algorithms are essential to improve simulation runs and simulators’ capability.
The modeling equations of multiphase flow in geological formation typically include conservation laws for each phase (for fully immiscible multiphase flow) or conservation laws for each component (for partially miscible multiphase flow). In addition, extended Darcy’s law is usually assumed for multi-phase flow in the media. This phenomenological law together with conservation laws and fluid properties are often used to model the fluid flow behaviors in the subsurface system. Numerical solution procedure involves approximation using spatial and temporal discretization. Finite difference, finite volume, or finite element methods can be used for spatial discretization. The local conservation property of the discretization scheme is often important. Popular conservative methods include the block-centered finite difference method and the Raviart–Thomas mixed finite element method.
Various decoupled splitting schemes and time integration schemes have been used to discretize the equation system in time and to tackle the coupled equations. The simplest and most straightforward approach is to treat all terms explicitly, e.g. as in the forward Euler method. These fully explicit methods are easy to implement and computationally cheap for a single time step; however, governing equations for multiphase flow often come with strong nonlinearity and stiffness, leading to the severe Courant–Friedrichs–Lewy (CFL) condition [9]. As a result, the explicit methods become prohibitively expensive due to the tiny time steps imposed by the CFL condition. Semi-implicit methods have been widely used in practice because of its improved stability over the fully explicit methods. One popular semi-implicit scheme people use in practice is the IMPES (implicit in pressure and explicit in saturation) scheme [[9], [10], [11], [12], [13]]. The motivation of IMPES comes from the observation that the pressure and Darcy’s velocity change less rapidly with time as compared with the phase saturation or species concentration. In the iterative IMPES scheme [[14], [15], [16]], a number of iterations are performed in a single pressure–saturation time step interval to increase its accuracy and/or stability. It can be considered as an improved version of IMPES or as an iterative solution procedure of a fully implicit scheme. In spite of the popularity of semi-implicit methods, it is believed in computational community that the most promising scheme for subsurface multi-phase flow is the fully implicit method [[1], [17], [18], [19], [20], [21], [22]], mainly because of its unconditional stability. In the fully implicit approach, all the coupled nonlinear equations are solved simultaneously and implicitly, thereby the whole system approach has the potential to allow more physics to be added easily to the system without changing much of the algorithmic and software framework.
Even though being stable for arbitrary large time steps, the computational efficiency of a fully implicit method still relies on sophisticated nonlinear and linear solvers, especially when the size of problems becomes large. It remains challenging and important to obtain efficient nonlinear and linear solvers of the algebraic systems arising from the fully implicit treatment of reservoir simulation. In this study, we propose a highly parallel solver based on the framework of Newton–Krylov–Schwarz (NKS) algorithms [[23], [24], [25], [26], [27]] to guarantee the nonlinear consistency. In the proposed NKS method, the resultant nonlinear system is solved by a generalized Newton method, i.e., active-set reduced-space method [[28], [29], [30]], and then the linear Jacobian systems are solved with a preconditioned Krylov subspace method. The success of the overall approach depends heavily on the preconditioner, owing to the fact that it can substantially reduce the condition number of the linear system. Hence, we use the overlapping additive Schwarz type domain decomposition methods [[31], [32], [33]] to build the preconditioner. A great advantage of domain decomposition methods is that communication only occurs between neighboring subdomains during the restriction and extension processes, and meanwhile does not require any splitting of the nonlinear system. Therefore the additive Schwarz preconditioner is naturally suitable to massively parallel computing and provides the scalability. In particular, with the appearance of the restricted version of Schwarz methods proposed by Cai and Sarkis in [34], it can lead to substantial reduction of the total computing time, which greatly expands the scope of application of the domain decomposition algorithm. An important implementation detail in designing the additive Schwarz preconditioner is to balance the quality of the iterations and the computing time spent on the simulation. Hence, several performance-related parameters in the preconditioner, including the type of the Schwarz preconditioner and the size of the overlap, are carefully discussed and tested to achieve the optimal performance. By using these strategies, our experiments show that the proposed fully implicit solver based on the Newton–Krylov–Schwarz algorithm is efficient, robust and scalable on a supercomputer.
The remainder of the paper is organized as follows. In Section 2, we introduce the mathematical model for the two-phase slightly compressible flow, following which a fully implicit scheme is provided for the temporal and spatial discretization. In Section 3, we briefly review the Newton–Krylov type method with additive Schwarz preconditioners for solving the resultant nonlinear system. Several sets of numerical experiments with parallel performance results are reported in Section 4 and the paper is concluded in Section 5.
