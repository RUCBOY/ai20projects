In several fields such as political science, computer science, social science, medical science, and policy making, we often encounter situations where performances (or scores) of various objects are quantitatively available over a number of attributes (or from a number of judges). Based on the performances over different attributes, a comprehensive preference order of the objects is required. The problem is important from a practical standpoint. For example, consider a group of ten investors who have hosted a competition for startup idea among students of an institute. Proposals for independent ideas are invited from different teams of students. Subsequently, each investor ranks every student-team based on the decreasing order of their preference. Based on the rankings from the ten investors, the goal is to come up with a single combined ranking for student-teams. The highest ranked student-team in the combined ranking gets the highest proportion of investor funds.
In our framework, we have a set of n items (or objects) to be ranked by k different judges. The rankings of the n items by the k judges can also be interpreted as n objects being ranked on k different attributes. The preferences of different objects can be depicted either through orderings or rankings. When objects are stacked in the order of preference, i.e., the best object at the top and the worst at the bottom (or vice versa), the resultant list of objects is called orderings. On the other hand, when ranks are associated with objects stacked in a fixed order, the resulting list of ranks is called rankings. Consider four objects that need to be ranked, and suppose that these objects are P, Q, R, and S, listed in that order. Then, an ordering  < S P R Q >  corresponds to the ranking (2 4 3 1). Here, the number 2 implies that object P has rank 2. Similarly, Q, R, and S have ranks 4, 3, and 1, respectively. When judges assign distinct ranks to each of the n object, the resulting ranking is called full ranking. A judge can give the same rank to multiple objects, and in that case, the ranking is referred to as a tied ranking. When one or more judges leave the ranks of some objects unassigned, then the resulting ranking is called incomplete ranking.
Under the above setup, the objective of the problem is to find a combined ranking that best fits the k different rankings corresponding to the k attributes. These k rankings are termed as input rankings. The combined best-fit ranking of the n objects is termed as consensus ranking. The problem of combining the k input rankings is called the rank aggregation problem.
The rank aggregation problem has been studied in various fields with different names such as median rank problem, social choice problem, Kemeny problem, etc. (Arrow, 1951, Dwork, Kumar, Naor, Sivakumar, 2001, Kemeny, 1959, Kemeny, Snell, 1962). Determination of consensus ranking is an essential component of various models involving rank data, for instance, distance-based models (Mallows, 1957) and rank clustering (Heiser and D’Ambrosio, 2013).
Numerous approaches for the rank aggregation problem have been proposed in the literature. One of the earliest attempts to formally conceive the idea of aggregating ranks traces to Nicholas of Cusa in 1435 (Sigmund, 1963). For the election of the Holy Roman emperor, Cusanus suggested that all voters assign points to each candidate and the candidate having the highest sum of the points be elected. On similar lines, de Borda (1781) offered a rather scientific analysis for deciding the election winners. Around the same period, de Condorcet (1785) proposed a method for pairwise comparison of alternatives and noted the intransitivity of the method, also known as the Condorcet’s paradox.
Kendall (1938) proposed a method to aggregate ranks based on the rank aggregation coefficient. On similar lines, Kemeny (1959) defined a distance measure to find the best fit of the rankings. Further, Kemeny and Snell (1962) proposed a set of three axioms to define a general distance metric. Rank aggregation under Kemeny framework, which is also the focus of the present paper, satisfies these axioms. Finding a consensus ranking under Kemeny framework, just like the traveling salesman problem, is an NP-hard problem (Bartholdi et al., 1989). With the work of Cohen and Mallows (1980) and Thompson (1993), statistical analysis of ranking was revived in the eighties and nineties (Heiser, 2004). Thompson (1993) and Heiser (2004), under a geometric configuration, established that the vertices of the permutation polytope form the sample space of rankings. Other distance-based models under axiomatic frameworks have also been developed (Cook, 2006, Cook, Golany, Penn, Raviv, 2007, Cook, Kress, Seiford, 1986, Cook, Saipe, 1976). However, due to differences in distance measure and axioms, similar to D’Ambrosio et al. (2017), the present paper is not comparable to those models.
Emond and Mason (2002) proposed a Branch-and-Bound algorithm to find a consensus ranking. Subsequently, Branch-and-Bound was employed by D’Ambrosio and Heiser (2009) and D’Ambrosio and Heiser (2016) for recursive partitioning algorithms for preference ranking. The drawback of the algorithm is that its run-time becomes unmanageable when the number of objects is more than 25 (D’Ambrosio et al., 2015). As has been noted in the literature, it is evident that the complexity of the consensus ranking problem is primarily governed by the number of objects n and not by k. Ali and Meilă (2012) surveyed various approaches and performed empirical comparisons to determine algorithms that work well in practice. They concluded that though no algorithm reached both the smallest distance and lowest runtime simultaneously, the local search and Branch-and-Bound approach seemed like better choices.
To overcome drawbacks in the Branch-and-Bound algorithm, D’Ambrosio et al. (2015) and Amodio et al. (2016) developed an algorithm, called QUICK, which, though similar to the Branch-and-Bound algorithm, produces a remarkable saving in the computational time. QUICK achieves a local minimum solution for the consensus ranking. However, the run-time of QUICK increases drastically for n ≥ 200 (taking days). D’Ambrosio et al. (2015) also proposed another algorithm, called FAST, which takes much longer than QUICK but tries to achieve an improved minimum in terms of Kemeny distance. Recently, D’Ambrosio et al. (2017) proposed a differential evolution algorithm, called DECoR, which is able to arrive at solutions in reasonable computing time even for large n (up to 200). They compared their results with other heuristic algorithms and showed that both QUICK and DECoR produce reasonably good solutions, beating all other solutions available in the literature. Inherently, the run-time for algorithms proposed in the literature increases rapidly when the number of objects reaches a certain limit. This increment in the run-time is of non-deterministic polynomial order.
In the present paper, we propose algorithms for finding consensus ranking under Kemeny’s axiomatic framework. Two basic algorithms have been proposed. First, called Subiterative Convergence, combines the results of rank aggregation of smaller subsets of objects. It does not directly search the full space of rankings. Second, called Greedy Algorithm, repositions one object at a time to a new position that results in a better ranking. Thus, both the basic algorithms reduce the search space efficiently. Furthermore, based on the two basic algorithms, we propose two advanced algorithms. Run-time is polynomial-bounded for the proposed algorithms. This overcomes the problem of non-deterministic polynomial order increment in run-time. Various examples show that the proposed algorithms outperform state-of-the-art algorithms in terms of Kemeny distance as well as run-time.
In Section 2 we introduce two criteria for filtering optimal Kemeny solutions. In Section 3 two basic algorithms are proposed to find consensus ranking under Kemeny framework. In Section 4 we propose two advanced algorithms. Comparison of the proposed algorithms with existing algorithms, based on various datasets, is presented in Section 5. Finally, Section 6 provides concluding remarks.
