Big data has emerged as a driving force for scientific discoveries (Chen et al., 2013). Large scientific instruments (e.g., colliders, light sources, and telescopes) generate exponentially increasing volumes of data. To enable scientific discovery, science data must be collected, indexed, archived, shared, and analyzed, typically in a widely distributed, highly collaborative manner. Data transfer is now an essential function for science discoveries, particularly within big data environments.
The emergence of distributed, extreme-scale science applications is generating significant challenges regarding data transfer. We believe that two relevant dimensions characterize the data transfer challenges of the extreme-scale era:
(1)High-performance challenges. Because the sizes of scientific data sets are growing exponentially, it is important to transfer data in highest throughputs possible. Thus, scientists can quickly access and analyze data to facilitate scientific discovery.(2)Time-constraint challenges. Scientific applications typically have explicit or implicit time constraints on data transfer. Providing real-time and deadline-bound data transfer is a challenging task in the extreme-scale era.
Networks are essential for data transfer. From an end user's perspective, we envision networks should provide the following capabilities and features in order to successfully address the high-performance and time-constraint challenges of data transfer for big data science:
•High capacity to provide ample network bandwidth.•End-to-end network architecture. Many big data science applications require QoS-guaranteed end-to-end network paths to support their operations. Network QoS can include bandwidth, delay, loss, jitter, or their combination.•Programmability. This feature enables science applications to program networks at run-time to suit their needs. A powerful and rich set of network programming primitives are necessary to support various science applications.•Scalability. Networks must be scalable to concurrently support many users and a wide variety of science applications.•Service availability. Networks must allow science applications to use network services at any time and from anywhere.
Over the years, the U.S. Research and Education(R&E) network communities have developed new network tools, services, and architecture in support of big data science. The existing network paradigm that supports data movement for big data science consists of three major components: terabit networks that provide high network bandwidth, Data Transfer Nodes (DTNs) and Science DMZ architecture (Dart et al., 2014; Science DMZ, 2017; Data Transfer Nodes, 2017) that bypasses the performance hotspots in typical campus network, and on-demand secure circuits/paths reservation systems, such as ESNet OSCARS (Guok et al., 2005) and Internet2 AL2S (Internet2's Advanced Layer 2 Service, 2017), which provide automated, guaranteed bandwidth service within the WAN. This network paradigm has been a big success. However, to reach its full potentials, we claim that the existing network paradigm for big data science must address three major problems:
•The last mile problem. An end-to-end network path typically consists of LAN segments (the last mile), and WAN segments. WAN QoS can be provisioned by utilizing ESNet OSCARS or Internet2 AL2S to reserve bandwidths between Service Termination Points (STPs) (Roberts et al., 2014). However, there lacks an automated network service in campus or local area networks to provision QoS for the last mile. As a result, end-to-end network paths with guaranteed QoS cannot be provisioned.•The scalability problem. The computing models for large-scale science applications are becoming ever more globally distributed and grid-based, typically involving hundreds, even thousands, of computer systems. Often many of these science applications require QoS-guaranteed end-to-end paths to adequately support their operations. The scalability problem arises when establishing end-to-end paths between computer systems at numerous, widely dispersed sites.•The programmability problem. Within the WAN, services such as ESNet OSCARS and Internet AL2Sprovide some degree of network programmability that allows science applications to reserve network bandwidths between STPs. However, there lacks a network service within campus and/or local area networks that allow science applications to program local networks at run-time to suit their needs. As a result, science applications cannot make the most efficient or optimum use of underlying network resources.
We are working on the AmoebaNet project to address these problems. AmoebaNet applies Software Defined Networking (SDN) technology (Shenker et al., 2011; McKeown, 2009) to provide “application-aware” network service in campus or local area networks. AmoebaNet supports a list of salient features:
•Providing an AMQP interface (Vinoski, 2006) to allow applications to program networks at run-time. The JSON-RPC style communication provides dynamic and flexible interaction with networks;•QoS-based routing and path computation;•Fast provisioning of end-to-end network paths with guaranteed QoS;•Fine-grained control of network traffic;•Network slicing;•A rich set of network programming primitives to support a wide spectrum of use cases and application scenarios;•A full-featured scheduler that allows network resources to be requested on-demand, or scheduled in advance to support complex network operations.•Seamless integration of LAN and WAN;•REST-based network initialization and configuration.
AmoebaNet complements existing network paradigms for big data science by: (a) allowing science applications to program networks at run-time to suit their needs, and (b) working in conjunction with WAN circuits/paths reservation system such as ESNet OSCARS and Internet2 AL2S to provide an end-to-end network service, which solves the last mile problem and addresses the scalability issue.
The rest of paper is organized as follows. Section 2 presents background and related works. Section 3 discusses the problems with existing network paradigms for big data science. Section 4 describes AmoebaNet design and implementation. In section 5 we discussed the network paradigm for big data science. Section 6 discusses our evaluation of AmoebaNet. And Section 7 concludes the paper.
