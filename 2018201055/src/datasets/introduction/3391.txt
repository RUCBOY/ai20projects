ESnet has proposed the Science DMZ model [1], a scalable model designed for local campus networks, to satisfy the increasing demand for high performance scientific research, including large data transfers and real-time human to application interaction. With Software Defined Networking (SDN) techniques emerging as a preferred solution for network management, decoupling the control plane from the data plane within the context of a Science DMZ network environment enables efficient rule-based network control and significantly reduces the required time for network configuration as well as troubleshooting [[2], [3], [4]].
Although network administrators need not log into network devices to manually apply network configuration changes thanks to SDN technology, there exists a pronounced latency between the time a user sends a request for a network resource and the time the request is serviced by the network. In this case, inefficiencies continue to endure in the interaction between users and network administrators, which indicates an ongoing need for manual intervention, shown in Fig. 1. For example, the University of Massachusetts Lowell (UML) campus IT department constitutes a Change Advisory Board (CAB). Network administrators from CAB are mandated to meet every Thursday to approve or deny changes. All requests to CAB must be submitted by Monday for review on Thursday in the same week. Most changes need to be reviewed and implemented off hours. Similar situation exists in Massachusetts Green High Performance Computing Center (MGHPCC) [5] as the administrators work on the requests every Tuesday. In order to accelerate this inefficient interaction, the entire process must be automated, which in turn requires the consideration of four key requirements. Firstly, in order to replace more traditional methods, such as phone calls or emails, users will require a more effective method to submit their requests. Secondly, users should have the ability to submit high-level requests that do not depend on intricate knowledge of the low-level details regarding the design of the network. Specifically, users should only have to specify the sources and destinations for the corresponding network resource request. As a result, user requests will have to be converted into detailed network configuration settings for the appropriate switches. Thirdly, a given network user’s request should be serviced in a manner that reduces the required processing time as well as the amount of manual labor carried out by a network administrator. Lastly, although an automated network management work flow is used, the network configuration process still requires the supervision and management by the network administrator.
In this paper, we introduce FLowell, a network infrastructure consisting of a SDN-powered Science DMZ that supports various forms of data-driven scientific research conducted at UML campus. Furthermore, FLowell is designed to accelerate large data transfers from UML to MGHPCC, which will be demarcated from the general purpose, campus production network. Moreover, we propose a programmable policy engine as part of the control plane to allow science research teams from different departments the ability to access Science DMZ resources under the purview of FLowell. In this case, the overarching goal is to reduce the requirements in terms of the time to service a resource request as well as the level of manual intervention on the part of a network administrator.Download : Download high-res image (147KB)Download : Download full-size imageFig. 1. Inefficient user–admin interaction.
In this paper we make the following contributions. (1) We design a set of simple and human-readable policy rules for defining the network data paths between end hosts and network resources. (2) We design a policy engine that provides users with policy rules for rapid response time in network resource requests, independent of whether the requests can be serviced. (3) We design a policy engine that allows administrators the ability to manage data paths irrespective of whether they were generated from a user request or from a newly defined network administrator policy. (4) We design a policy engine that converts high-level policy rules to OpenFlow hardware rules so that the low-level knowledge of the underlying network infrastructure is transparent to end users. (5) We successfully deploy the proposed system in a production network between UML and MGHPCC to reduce the user-request service time from hours to milliseconds.
The remainder of the paper is organized as follows. In Section 2, we introduce the ESnet Science DMZ model along with our enhanced FLowell Science DMZ deployment. In Section 3 we provide the research motivations for our work. Subsequently, we describe the policy engine in Section 4. Afterwards, we evaluate the performance of our proposed solution within Section 5. Furthermore, in Section 6 we provide a survey of work related to FLowell. Finally, we conclude in Section 7.
