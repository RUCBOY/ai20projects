Cloud computing comprises a huge number of computing resources including processing power, memory, storage and network and they are all available for serving users on demand. In addition, the business model of cloud computing, pay-as-you-go for renting computing services for a period of time rather than owning expensive high performance machines for a lifetime, recently gains a lot of attentions from computing communities. A cloud is currently the most attractive and cost-effective choice for users who need high computing power for a short period of time. However, such users do not want their data to be exposed in a clear format on clouds. In other words, users still have concerns not only for resources and prices but also for the security and privacy of their data. Thus, any cloud-based outsourcing computation scheme should satisfy such requirements.
High computation is present in many application areas such as computer science, engineering, bioinformatics, and physics where various types of data are transformed into a matrix for computation and analysis. One of the most common techniques performed on matrices is known as the singular value decomposition (SVD). In computer science, SVD is used in machine learning to speed up learning algorithms, data visualization, and data dimension reduction [1] called Principal Component Analysis (PCA), web/document search with Latent Semantic Indexing (LSI)[2], [3], data compression [4], [5], digital watermarking [6], [7], denoising image [8], [9], and face recognition [10], [11], [12], [13]. In mechanical engineering, SVD is used for studying machinery fault signatures [14], [15]. In statistics, we use SVD to find a pseudo inverse matrix for fitting data in the least square model. Bioinformatics uses SVD and PCA for gene expression processing and modeling [16]. SVD is also used to examine the entanglement in quantum computation [17]. Unfortunately, computing SVD is an expensive task as its complexity is O(n3). As a result, researchers are interested in investigating how to reduce its complexity [18], [19] but that is beyond the scope of this paper.
The cloud-based outsourcing scheme plays a significant role for resource-constrained users. But, to develop such scheme and simultaneously take the security of users’ source matrix into account would bring two main challenges.

•The first challenge is the security of a source matrix. The developing scheme must be able to hide the source matrix from being exposed in a clear format when it is on cloud. For the privacy concern, the source matrix should be encrypted locally before being sent to the cloud so that it will not be exposed during the computation on cloud. But, typical encryptions such as AES [20] and RSA [21] cannot be applied in this situation because they change from full meaning data to no meaning data. Thus, we need a scheme that allows computations on encrypted data.•The second challenge is the performance of the outsourcing scheme. With the addition of the security cost, the scheme would generate more computation overhead in encryption and decryption than the normal operation. To make an efficient outsourcing scheme, the computation overhead should be less complex and lower than the computation of the original problem.
One interesting work called homomorphic encryption allows computation on encrypted data. But, according to some researches [22], [23], fully homomorphic encryption requires high computation; hence, it would be impractical for resource-constrained machines. Independently, the light-weight outsourcing matrix computation schemes [24], [25], [26], [27], [28], [29], [30] have been developed. In 2002, Atallah et al. [24] introduced a variety of specific secure outsourcing techniques for scientific computations. Their proposed work was simple and effective but lack of the result verification. In 2011, Wang et al. [31] proposed the first iterative outsourcing approach for solving a large-scale linear equation. They utilized the Paillier’s scheme [32] to obtain an additive homomorphic property for computing and hiding an intermediate result. Later, Chen et al. [28] showed that some non-negligible information can be recovered and used to deduce several columns of the original matrix in Wang’s scheme. They also proposed a new algorithm based on Atallah’s scheme. In 2013, Lei et al. [25] presented an outsourcing matrix inversion scheme based on Atallah’s scheme and it included a verification algorithm. In 2014, Lei et al. [26] proposed a robust technique against cheating in secure outsourcing matrix multiplications based on Atallah’s work. In 2015, Hu and Tang [29] proposed an outsourcing eigenvalue scheme. In 2016, Zhou and Li [30] presented an outsourcing scheme for SVD computation. For these two recently works, the information hiding technique was also based on Atallah’s work.
In essence, the main idea of aforementioned efforts [24], [25], [26], [27], [28], [29], [30] is based on similarity transformation [33] for hiding a source matrix. To reduce multiplication cost in these schemes, they chose a similarity transformation matrix as sparse as possible by using a random monomial matrix which has only one element in each row and column. Specifically, a source matrix is hidden by scaling and permutation.
However, these schemes have a common drawback when the value of some elements is zero, and such elements cannot be scaled or hidden. In some applications, the zero element has significant meaning. For example, a binary matrix representing a graph or a bitmap image in which an element is either 0 or 1; if an adversary knows the position of zeroes, he will definitely know the position of ones.
In this paper, we propose a novel lightweight scheme of secure outsourcing matrix computations for SVD on a cloud. For hiding a source matrix before uploading it to the cloud, our scheme uses two transformations: translation and scaling. First, the source matrix is translated by adding it to the random outer product (the outer product of two random vectors) for ensuring that there is no element including zeroes being exposed in the clear format to the cloud. Next, we do the scaling for gaining high security. In our scheme, we define a similarity matrix that can help generate the two transformations. After the transformed matrix is uploaded to the cloud, the cloud does not require any special algorithm for computations. The security analysis indicates that our proposed scheme gives secure computations. The experimental results also show that the entropy of the encrypted matrix, the indicator of how hard to attack, is higher than that of the previous work [25], [30]. In addition, the performance analysis shows that the complexity of the local workload in our outsourcing scheme is only O(n2) while the complexity of computation on a cloud is O(n3).
In summary, our work gives two main contributions: (i) we propose a lightweight scheme of secure outsourcing SVD on cloud, and (ii) our scheme can hide all of source matrix’s elements including zeroes and give high entropy values.
The remainder of this paper is structured as follows. Section 2 mentions mathematical backgrounds which are SVD and similarity transformation. All details of the proposed work are described in Section 3 which consists of the system overview as well as the design goals, the algorithm design, an example, and the proof of correctness. In Section 4, we analyze the security of our scheme. In Section 5, we analyze the performance of the proposed work. In Section 6, we describe related work. We discuss and conclude our work in Section 7. Finally, the proof of all lemmas is shown in Appendix B.
