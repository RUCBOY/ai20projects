Computer and network systems are subject to many types of attacks. Our ability to detect the attacks becomes more important as the computers and networks are increasingly integrated into the reliable and efficient functioning of our society (Jones and Sielken, 2000). Intrusion detection systems (IDS's) are developed to discover signs of attacks called intrusions, such as unauthorized access by monitoring activities in systems and networks (Ansari, Vakili, 2017, Jow et al, 2017, Marinova-Boncheva, 2007, Yucelen et al, 2016). Upon detecting suspected intrusions, an IDS can take preventive measures, such as, sending alerts to system and network administrators (Jones, Sielken, 2000, Liu et al, 2017, Scarfone, Mell, 2007, Sun et al, 2007, Sun et al, 2007). In an IDS, one or more sensors collect system or activity data called events, which are organized as logs that are typically stored in files or databases. An IDS can search the logs for intrusions (Sebring et al, 1988, Sun et al, 2007, Thamilarasu, 2016).
Many existing logging schemes typically treat events separately without explicitly considering relations among the events (Xiao, 2009). For example, when this conventional logging system records two events about two users operating a single file in a log, such as, an event that User A reads the file and another event that User C deletes the file, the system will record the two events separately, and in the log there is no explicit declaration that both of the users have activities on the same file. The relations among the users and the file can only be inferred from the values of certain attributes of the two events, such as users' identifiers and the name of the file. The file names can be changed and two files can have the same file name. In addition, file names may be subject to spoofing. The relations of the events inferred from the values of the attributes may not be reliable (Das et al, 2009, Sun et al, 2016).
Flow-net is a logging mechanism that builds comprehensive logs to track events. Contrary to the conventional logging schemes, a salient feature of the flow-net logging is to maintain relations of events in the logs explicitly (Fu, Xiao, 2014a, Fu, Xiao, 2014b, Fu, Xiao, 2015, Xiao et al, 2012). Let us take a TCP (Transmission Control Protocol) three-way handshake as an example. In a TCP three-way handshake, an event “sending SYN” (where SYN stands for Synchronization) normally triggers an event “receiving SYN-ACK” (where ACK means Acknowledgment). In total, the three-way handshake consists of six events that have fixed and unambiguous temporal and causal relationships. A flow-net logging system explicitly records relations among all the six events of the TCP three-way handshake, including the causal and temporal relationships of the pairs of events, “sending/receiving SYN,” “sending/receiving SYN-ACK,” and “sending/receiving ACK”. The relations among events are critical in intrusion detection. We posit that the flow-net based logging mechanism is superior in intrusion detection to the conventional logging based schemes that do not record event relations explicitly. In this work, we use the word “relation” to represent the temporal order of two consecutive events that share some common attributes.
In a computer and network system, a behavior is composed of multiple related events. We call characterization of the behaviors “fingerprints” (Takahashi et al, 2010, Wang et al, 2013). Fingerprints are commonly used in signature-based intrusion detection and computer forensics (Takahashi et al., 2010). In this paper, we propose a flow-net based fingerprinting method (FNF) and apply it to detect intrusions by examining both the events and the relations among the events. Detecting intrusions in a computer or network system are akin to determining the various types of behaviors characterized by their fingerprints in flow-net logs.
First, we provide formal definitions of flow-net and flow-net based fingerprinting. By using flow-net and flow-net based fingerprinting, we are able to obtain fingerprints of behaviors and provide accurate and compact representations of any behaviors in computer and network systems with the fingerprints. We apply the FNF to detecting malicious behaviors in computer and network systems. This is in effect an FNF-based IDS that searches and identifies system and network behaviors using their fingerprints and determine the behaviors that correspond to attacks in flow-net logs.
Second, we formulate the problem of searching and identifying intrusion behaviors from flow-net logs as the Fingerprint Matching Problem (FMP). To solve the FMP, we propose a Fingerprint Lookup Algorithm (FLA). The FLA searches and identifies in flow-net logs the occurrences of behaviors whose fingerprints are stored in a fingerprint library. The FLA is designed to look up behaviors in flow-net logs by matching fingerprints of the behaviors to those in the fingerprint library.
Since a type of behaviors may have variations, it may be a good idea not to look for an exact match. We define a distance between a fingerprint and a behavior as fingerprint difference ratio. The ratio allows us to compare how close a fingerprint in the fingerprint library to a behavior in a flow-net log. We consider the two a match when the distance between the two is sufficiently small. Therefore, with the ratio, the FLA tolerates some variations of a type of behaviors. We call the PMP of detecting certain type of behaviors tolerating behavior variation the proportional fingerprint matching problem (PFMP).
Finally, for real-time intrusion detection, computational efficiency is important. We analyze the computational efficiency of the FNF-based IDS and find the best parameter configuration to achieve optimal performance under various conditions.
A flow-net can be modeled as a directed acyclic graph where edges are explicitly recorded temporal relations between events. Searching an attack in a flow-net log becomes in effect a subgraph searching problem, which we consider a fundamental departure from the conventional IDS's. We believe that it is a novel approach to use the flow-net based fingerprint to represent system or network behaviors and to apply it in intrusion detection. The contributions of this paper are summarized as follows.
•We provide a formal definition of flow-net based fingerprint. The fingerprint of any behavior can then be represented uniquely and formally.•We define the FMP and the PFMP, and solve them using the FLA that searches and identifies intrusions in flow-net logs by using fingerprints of known behaviors.•We propose a method to calculate the distance between two fingerprints and between a fingerprint and a behavior. The distance allows us to detect an intrusion as well as its variants. This is actually a fuzzy intrusion detection scheme.•We evaluate the performance of the proposed schemes. We analyze the computational efficiency of the schemes and evaluate the schemes using simulation experiments.
The rest of this paper is organized as follows. We discuss related work in Section 2. In Section 3, we propose the FNF. The FLA is proposed in Section 4. The FNF is applied to intrusion detection in Section 5. Evaluation results are presented in Section 6. We conclude our work in Section 7 along with discussions on future work.
