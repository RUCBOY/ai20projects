In this work, we extend the safety supervisory control framework introduced in a companion article [8] with the ingredient of Temporal Logic (TL). Specifically, we examine the synergies obtained from integrating model-based hazard modeling/monitoring with the verification of TL safety constraints to improve both accident prevention and dynamic risk assessment. We present a detailed case study to illustrate the novel insights that result from this integration for improving dynamic risk assessment and accident prevention.
The use of TL in risk assessment offers many possibilities for overcoming some of the limitations associated with traditional Probabilistic Risk Assessment (PRA), for example in accounting for time-related considerations in accident scenarios and in handling software issues. The latter is a serious issue since most engineering systems are increasingly software-intensive, and not having a risk assessment tool (and modeling formalism) that can handle all risk aspects of such systems in an integrated manner is an important gap in the analytical toolset of risk analysts and safety professionals.
In our previous work, we developed a safety supervisory control framework and analytical tools for monitoring emerging hazards in a system, and guiding safety interventions both on-line and off-line [8]. We leveraged state-space formalism and model-based approaches, first to establish hazard levels or danger indices as metrics that measured the “proximity” of the system to adverse events, and second to estimate the times at which critical thresholds for the hazard level are (b)reached. This estimation process provided important prognostic information and produced a proxy for a time-to-accident metric or advance notice for impending adverse events. We also introduced a hazard temporal contingency map as a tool to support operators’ situational awareness by providing prognostic information regarding the time windows available to intervene before hazardous situations become unrecoverable, and to help decision-makers prioritize attention and defensive resources for accident prevention.
We now augment the previous safety supervisory framework (anchored in state-space formalism) with the new ingredient of Temporal Logic. Temporal Logic is being adopted in an increasing number of fields, such as robotics and safety-critical systems, and it is used in a variety of ways, as a formal language to express software requirements for example [5], [26], or for the expression of specifications for automated motion planning of vehicles such as robots and UAVs [18]. Once a requirement or specification is provided in TL, checks and controls can be implemented to ensure that such behavior is followed. We made the case for the introduction and use of TL in risk assessment in [9], to overcome the static nature of most risk assessment tools which are ill-suited to handle modern applications of cyber-physical systems [20]. Briefly stated, TL allows the explicit inclusion of temporal considerations in the definition of safety requirements, which then act as constraints on the system behavior. Safety features can then be put in place to either ensure compliance with these constraints or to trigger warnings if/when they are violated.
Uses of TL and other timed logics for risk assessment and safety analysis have been proposed and pioneered in the late 1990s early 2000s (notable in particular are the works by Chris Johnson [15], [16], [17]; for a survey of the use of timed logics in risk and safety applications see [8]).
The objective of this work is to integrate TL with the safety supervisory framework on the one hand, and to demonstrate the practical application of the integrated framework and the novel insights it can provide for improved risk assessment and accident prevention on the other hand. The expanded framework leverages tools and ideas from two disciplines, Control Theory (state-space formalism, feedback, and estimation), and Computer Science (Temporal Logic and requirement specifications/verifications). To illustrate the capabilities and workings of the integrated framework, we present a case study as a “proof-of-concept” involving a Learjet accident during a rejected takeoff. The case study shows how hardware, software, and operators’ control actions can be integrated within the framework. Software played a key role in the escalation of the accident sequence, and it is here analyzed in detail. We show among other things that the aircraft suffered in fact from a faulty logic, a lurking accident pathogen, in the Full Authority Digital Engine Computer (FADEC), which prevented the pilot from activating the thrust reversers in particular operational scenarios, and further aggravated the situation by shifting the backward thrust selected by the pilot to a forward thrust schedule. We propose a new TL safety constraint (based on speed measurements and the history of pressure sensors from the landing gears) to be incorporated in this and other aircraft FADEC, and that could have prevented the hazardous situation, in this case a rejected takeoff following tire explosion, from turning into a deadly accident. Moreover, we examine a novel metric for online support of pilots’ go/no-go decision-making during critical takeoffs. This metric relates the distance required for the aircraft to stop (in both nominal and worst-case conditions) to the total length available to the aircraft before encountering an obstacle on its path. Its set-up and check against pre-defined criticality threshold can augment the current (limited) thinking that revolves around the decision speed V1 as a safety threshold for aborting a takeoff, and can also better inform accident investigation and provide cues for the prevention of similar occurrences in the future.
The remainder of this work is organized as follows. Section 2 provides a brief review of the safety supervisory framework and the necessary background material regarding the notion of hazard level and the TL syntax. Section 3 presents the case study, and analyzes in detail the hazard monitoring process and the verification of compliance of the TL safety principles. Section 4 concludes this work.
