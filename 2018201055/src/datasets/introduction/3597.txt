A robot should be more than a specific-purpose machine, used only for a particular task, designed, and developed with specific hardware and software, making it difficult to integrate with other robots or reuse for a different purpose.
If a robot were to become a general-purpose computing unit such as a common computer or a cellphone, it could be reused for different missions and integration with other robots would become transparent. Nowadays, coupling a robot with a companion computer is becoming mainstream, mostly with unmanned vehicles. The advantages of such approach are many because such companion computer is installed with a conventional operating system, which opens the scope of what can be done with a robot to only where our imagination can takes us.
Moreover, if a robot’s companion computer is installed with an operating system, the integration between robots becomes a straightforward endeavor via traditional protocols such as TCP/IP. In addition, with a set of robots, each with its companion computer, it becomes possible to set a High Performance Computing (HPC) cluster of computers.
A HPC cluster of computers is a set of computers (nodes) connected via a Local Area Network (LAN), in which a set of software layers are installed in each of its nodes. Such software layers provide or have the potential of providing a set of features, such as scalability, user-transparency, resilience and ultimately higher computing efficiency, which we depicted as HPC features.
In fact, the existence of HPC was motivated to provide computing efficiency. Certain problems within scientific research or even commercial activities require the processing of large datasets and/or the application of complex mathematical models highly expensive, in computational terms. In order to have a solution for such problems, a traditional computer and software could take years to reach to it. Therefore, a HPC cluster of computers uses parallel software, i.e. software that it is able to run in multiple computing units at the same time decreasing considerably the time required to achieve a solution for such complex problems. In addition, parallel software can be also executed on a single node, for example, using multi-core and many-core architectures, such as common CPUs with more than one computing core or GPUs (Graphics Processing Unit) respectively.
Research works such as [[1], [2]] and [3] proposed the use of robots embedded with GPUs for the processing of complex robotic tasks. Even at industry level, the UAVs Chinese manufacturer DJI [4], launched the Manifold embedded computer [5], which includes a NVIDIA [6] GPU. Moreover, previous attempts, such as [7] and [8] have proposed to implement a HPC cluster of robots with the objective of solving expensive robotic computational tasks.
However, HPC can be more than simply a speeding-up tool, precisely because in order of providing such computational efficiency, HPC infrastructures and software were designed to provide features such as scalability, etc., as previously mentioned. Such features could be very useful in the world of robotics, especially with multi-robot settings.
In this work, we introduce the novel concept of High Performance Robotic Computing (HPRC), which aims at adapting traditional HPC into the world of robotics by not only providing higher computer efficiency but also exploiting HPC features such as scalability, user-transparency, etc. While previous works have suggested the use of HPC within robotics scenarios, there is still a lack of a formal definition of the HPRC field and successful strategies to adapt traditional HPC into robotic systems.
In this work, we present the following main contributions:



•
A literature review of previous attempts of using HPC in robotic settings, from single to multiple robot approaches.
•
The formal definition of the HPRC field, which takes traditional HPC, as its foundation. Using HPC as a tool for speeding up complex computing tasks has been largely demonstrated in the literature and works such as [8] presented results about its use in robotics context. In this work, we focus on the rest of the features provided by HPC, rather than on its proven computing efficiency. This requires a change of mind of the current understanding of HPC, in which the only objective is to achieve computing efficiency, for a new one in which other features are exploited for the advantage of multi-robot settings.
•
Results of a traditional HPC benchmark upon embedded computing cards, such as those being used as robotic companion computers nowadays.
•
Results of novelty software developed to control the motion of heterogeneous multi-robot settings using traditional HPC technologies over a HPRC cluster made up of embedded computing cards. The software demonstrates that HPRC does not only focus on complex computing tasks as it does its foundation HPC.
