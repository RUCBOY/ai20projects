Communication networks formed by recent technological advance in Internet of Things (IoT) are not only becoming much larger in size but more complex and dynamic in nature (Atzori et al., 2010). Consequently, the large amount of network traffic log generated by the movement of people and mobile devices are difficult to analyze. Dynamic network analysis (Carley, 2014) is an emergent scientific field to address the challenges and has profound implications for a number of important tasks. For example, a network operator may need to detect anomalies in information technology network for potential faults and security breaches. A military commander may need to gain situational awareness, and understand the relationships in terrorists networks. Advertisers may need to target high-impact users based upon user spatiotemporal actions in social networks. Or, cancer researchers may need to understand interactions in protein networks and detect anomalous tumor cells.
Dynamic network analysis is highly challenging due to spatiotemporal network dynamics in terms of both topological structure and attribute evolution. Dynamic networks are known for their temporally changing topology as a result of on/off patterns of network connectivity. For communication networks, for example, network connections may be established or removed at any moment, making static analysis of a moving target more difficult. Often, dynamic networks are also encoded in higher dimensional space. For example, edges may contain properties such as link quality metrics (e.g., loss rate, latency, or bandwidth) and the locations where the connections are made. Similarly, nodes may contain attributes such as user profile or computing status (e.g., CPU, memory, or disk utilizations). Determining the most effective manner to analyze the many complex relationships between these attributes, especially in a temporally dynamic context, presents significant challenges.
While classic statistics and graph theories are useful in analyzing static networks, such methodologies may become insufficient with large dynamic networks. There has been research (Lahiri and Berger-Wolf, 2008) to understand and detect anomalies in dynamic networks using methods such as clustering (Bilgin and Yener, 2006) and link prediction (Liben-Nowell and Kleinberg, 2007; Han et al., 2014). However, with rapid growth of dynamic network size, volume, dimension and complexity, data mining approaches alone become inadequate. This is due to inherent computational infeasibility when considering all possible prediction outcomes. Alternatively, visualization techniques (Bender-deMoll and McFarland, 2006) have been proposed to explore dynamic networks for patterns and potential abnormal behaviors. Among them, small multiples and animation (van den Elzen et al., 2014; van den Elzen et al., 2016) are two typical visualization methods for dynamic network analysis. However, it is still difficult to track changes over time due to limitations of human cognitive ability. Other dynamic network visualizations that explore three-dimensional (3D) space (Itoh et al., 2010; Oline and Reiners, 2005) or utilize superimposition and layer juxtaposition (Federico et al., 2011; Beck et al., 2012; Pupyrev and Tikhonov, 2010) have been put forward, but suffered from problems of visual clutter, readability and preservation of mental map (Archambault et al., 2011).
To that end, we designed and developed Dynamic Network Analysis and Visualization (DNAV), which is a relatively lightweight, web-based tool. One major component of DNAV is the dynamic graph view. We adopt the node-link diagram to take advantage of users' familiarity with concept of classic graphs. However, our dynamic graphs differ from traditional graphs in that spatiotemporal information is encoded within the graph components. One of the design principles for DNAV is to try to visually analyze the network dynamics without going to higher-dimensional space or using animation approaches. Therefore, the nodes and edges in our dynamic graphs are divided into segments by their temporal dimensions based on the user's selection of node and edge properties. Each segment can be further divided if there are multiple status values within one time slot. Different colors are utilized to show dynamic node and edge property evolution over time. By dividing basic graph components into segments, we accomplish the goal of showing a dynamic network in one single static view without requiring users to remember changes as in animation schemes.
While dynamic graphs are ideal for detailed investigation, another important component of DNAV are the overviews derived from results of data mining and statistical analysis. For example, temporal trends in connection magnitudes, network entropies, and property values provide a quick overview of networks over the entire time period and can suggest which time periods look suspicious and need further investigation. By combining detailed graph views and overviews, DNAV provides a scalable solution to large-scale dynamic graph analysis. We have implemented multiple interactive functions. First, a time selection bar allows investigators to analyze dynamic graphs only within certain time period. Second, the maximum hop setting enables analysts to limit the number of hops from a selected node. The resulting smaller subgraphs allow scalable visualization of large networks. Lastly, node and edge filtering by their weight attributes is included.
We evaluate DNAV over two publicly-available datasets (Whiting et al., 2015; Grinstein et al., 2009) that contain communication records involving network traffic data, time, and user proximity location information. DNAV is effective in identifying the time and location of anomalous events in network communication patterns.
The rest of the paper is organized as follows: In Section 2, we discuss and compare various data mining and visualization methods in dynamic network analysis. Section 3 describes the key components of DNAV, i.e., dynamic graph construction. Section 4 discusses the dynamic network aggregation overviews. In both sections, we introduce important metrics used for dynamic network anomaly detection and the design principles of visualization in DNAV. Section 5 describes the system architecture and implementations. Two detailed case studies are conducted in Section 6 to illustrate the usage applications of DNAV. Finally, we conclude our work in Section 7.
