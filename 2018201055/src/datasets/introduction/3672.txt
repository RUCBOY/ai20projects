Deoxyribonucleic acid (DNA) molecules are known as the key component of live organisms. They store the codes for protein generation and transfer the genetic features through the generations. Recently, it is found that DNA molecules can be used for computation. DNA computing is a form of computation in which the Watson-crick reactions are used for computation [1]. This computation model can be used for mathematical and logical computations. DNA computing makes a bridge between genetics and computer science. DNA computing is an emerging nanotechnology with smaller size, lower power consumption and higher parallelism compared to the conventional transistor-based computation [2].
DNA computing technique was first introduced by Leonard Adleman to solve the Hamiltonian path problem with a high degree of parallelism [3]. His experiment shows the high capabilities of DNA computing resulted by automatic annealing between complementary DNA strands.
On the other hand, VLSI technology is facing serious challenges in recent years and alternative technologies such as quantum computing, optical computing and DNA computing are offered as emerging computation technologies [4]. Some limitations of VLSI technologies are rooted in von Neumann computation model [4] that bounds the parallelism of this technology theoretically. Therefore, new computation models for emerging technology should be explored concurrent with the VLSI evolution [5].
In addition to high parallelism of DNA computing, this technology has other considerable features that make it competitive with electronic computer. DNA computing requires near-zero power for a computation [6], its fabrication can be done automatically using the self-assembly property without conventional complicated lithography process [6], bottom-up manufacturing methods have no such scale size limits [4]. Moreover, there are computations that have to be done in the environment and at scale, which a traditional computer cannot be positioned, such as the processing inside a synthetic or natural molecular structure or material [7].
There are two types of digital DNA systems; enzyme-based and enzyme-free system [8]. The first DNA-based circuits are implemented based on using the enzymes. This methodology is evaluated and simulated by Amos and Dunne [9]. This research is continued by Ogihara and Ray in 1999 [10]. Stojanovic et. al designed a set of device for switching based on DNAzyme operation in 2002 [11].
As mentioned before, Adleman proposed a practical method to solve the Hamiltonian path problem by using DNA strands. The proposed solution was expressed within a enzyme model of computation and the most of models presented in the early years of DNA computation was based on Adleman method for solving NP-complete problem [4].
The first computational model of DNA computing was the filtering model that was motivated by Adleman and then extended by Lipton [12] and Amos et. al [4]. In the filtering model, computation are consist of some operation on a multi-set of strings (this multi-set is contain all possible solution) then unusable solutions is filtered.
A constructive model of DNA computation is introduced by Winfree and Rothemund based on the principle of self-assembly that extends the theory of tiling by Wang et. al [13] and [14]. This model of computation uses the self-assembly of DNA tiles. The first experimental demonstration of autonomous computation by self-assembly was accomplished in 2000 [15] with a set of DNA tile that performed a cumulative XOR operation. This work followed by Rothemund [16] and Barish [17].
In Boolean circuit model, the computation is carried out by a network of signal processors (called Gates) that can compute simple Boolean functions such as AND, OR, and NOT. The area/cost complexity of a Boolean circuit is measured by the size (i.e. number of gates) and the delay of the circuit is bounded by the critical delay of the circuit (i.e. delay of the slowest path of the circuit). In general case, delay of a Boolean circuit is O(n) where n is the total number of gates in the circuit theoretically and n is the number of gates on the critical path practically. It is worth note that delay of a Boolean circuit has a liner order of the number of gates and the circuit delay will be increased when the number of gates on the critical path enlarged.
Some massive parallel algorithms have been proposed for solving the NP-complete problem such as DNA computing. DNA computation works based on a massive parallel computation. Filtering models, Splicing models, Constructive models and Membrane models are the basic computation models for DNA computing [18]. Some of addressed contributions that used this category is explained as follows.
A Parallel computation model (sticker model, this model is the subsets of the filtering model) is suggested in [19] for solving the clique problem. Sticker model used biological operations such as separation and for problem solving. Maximal matching problem (MMP) -that finds the maximal edge subsets in a given undirected graph- is solved with DNA molecules in Adleman–Lipton model in [20]. Adleman–Lipton models mapped the problem to a graph then graph was coded to DNA strands. DNA strand design is the most important phase in Aleman–Lipton models. Authors of [21], used the DNA computational algorithm to solve the k-Vertex Cover Problem, this algorithm solved the problem in O(n2) time.
Some resolution-based DNA computing methods proposed in [22], [23], [24], [25]. These methods used property DNA computing for NP-complete or intractable problem solving. Biological technique solutions consisting of MERGE, APPEND, COPY, DISCARD, SEPARATION, READ, SELECT and so on. These technique used of DNA property for introduced algorithm for problem solving.
Another important achievement in DNA computation is constructing the circuit based on DNA strand-displacement without any type of enzyme or DNAzyme. This technique was introduced by Yurke et al. [26] at first in 2000. They reported an interesting DNA hybridization reaction through their DNA tweezers system but it was not used for six years later after the work of Seeling et. al [27] in 2006. This technique is used in the design of logic circuits. The basic mechanism of this reaction is termed Toehold-mediated strand displacement. Zhang and Winfree introduced toehold exchange in 2002 that is an extension to toehold mediated strand displacement with better reversibility [28].
In 2009, Qian and Winfree [29] developed a scalable solution based on DNA hybridization circuit. Their basic motif is a seesaw gate based on toehold exchange. Their design probably the most successful model of logic gate and is improved in 2011 by Qian and Winfree [30].
Sakamoto et. al proposed the first idea in localized DNA strand displacement in [27] that uses a DNA strand displacement mechanism to implement abstract chemical reaction network on the surface of a DNA nano-structure. Localization of DNA strands increase the relative concentration of the reacting the strands thereby speeding up the kinetics. This method was improved and used in 2014 by Qian and Winfree [31].
Based on strand displacement method in [32], a new micro-architecture (DENA) and corresponding design flow is proposed to facilitate the design of multi-stage large-scale DNA logic systems. Authors of [32] used the microfluidic platform for physical implementation of their micro-architecture. Reported results show the highlight features of the proposed design style and micro-architecture in terms of the scalability, implementation cost and signal integrity of the DNA-based logic system. DNA computing can solve the intractable problems in polynomial time order theoretically but they have some disadvantages as follows.
•all the introduced algorithms are performed manually therefore the execution time depends on the environmental conditions. On the other hand, previous work cannot be performed automatically. Therefore, the lab environment can affect the experiment yield and the result.•DNA algorithms are special-purpose and designed for a specific problem while current digital systems are general-purpose.•number of the required DNA strands exponentially are increased with increasing of the problem size.•incompatibility with modern digital systems with DNA computing systems.
In this paper, a DNA-based massive parallel methodology is proposed for design of digital systems. This approach provide a real aspect of parallelism such that delay of a DNA-based circuit will be independent of the size and depth of the circuit. Paper describes the underlying graph theory and then illustrated the proposed design methodology and finally, evaluates the presented method by design and implementation of a Boolean function.
The rest of this paper is organized as follows. Section 2 provides a brief review on DNA logic gates and Section 3 describes the proposed DNA logic design methodology that called BFG (DNA-based Boolean Function Graph) in this paper. In Section 4, implementation of BFG design methodology is evaluated with two manners (enzyme-based and enzyme-free (Toehold-mediated) methods). Section 5, describes the simulation results and finally, Section 6 concludes the paper.
