The disk B-spline curve (DBSC) is an important skeleton based 2D region geometry representation in computer graphics that was first proposed in [1], and then its algorithms and theories were refined gradually [2], [3]. DBSC has been applied to stroke modeling in 2D computer animation [1], [4], brush stroke modeling in Chinese calligraphy [5], [6] and non-photo realistic rendering  [7], etc. With its elegant mathematical definition, DBSC is endowed with pre-eminent properties that make geometric operations of the models based on DBSC easy to handle.
The problem of intersection between two DBSCs on a same plane is fundamental in geometric modeling and design. For example, in 2D computer animation based on DBSC, the intersection calculation is necessary for distinguishing different topology elements. There have been some general intersection methods in computer graphics (CG) and computer aided geometric design (CAGD) fields. In [8], the intersection curves of two quadrics in 3D projective space are computed by using resultants and Jordan forms. After transforming curves or surfaces into piecewise lines or planar patches, the actual intersection computation of curves or surfaces can be approximately reduced to calculate the intersections between lines and planes, which are easier operations. For instance, [9] provides a robust and fast intersection computation of two planes with applying Plucker coordinates and extended cross product. Through a matrix-based implicit representation and numerical methods, [10] presents an intersection method for line and trimmed NURBS surface. In [11], the intersections between lines/planes and loop subdivision surfaces are also based on multi-segmentation in combination with the bounding box detection. In [12], to eliminate self-intersection of offset paths on mesh surfaces, first the mesh surface is flattened onto a predefined plane and the offset paths are also correspondingly mapped onto the plane, then invalid self-intersection loops can be detected and eliminated and finally mapped back to the physical space without self-intersection.
As the DBSC is a skeleton based 2D region representation, the intersection of two DBSCs is usually a region rather than points as in the case of two intersecting B-spline curves. The intersection of DBSCs and related problems have rarely been discussed by researchers, except that Lin and Rokne [13] explored the intersection problem of disk parametric curves for error estimations. Though the intersection of two DBSCs is a region, the region can be determined by several intersection points of the boundaries of DBSCs. Therefore, the key to the computation of intersections of two DBSCs is to compute the intersection points of their boundaries. There are several methods for computing curve intersections, of which subdivision is a common method [14], [15], [16], [17], [18]. The fundamental idea is subdividing the curves and getting rid of regions that contain no intersections and locating the intersection intervals through subdivision step by step. Lin and Rokne’s method [13] is based on the subdivision, which used the bisection algorithm together with interval extension evaluations. There are several other algorithms based on the subdivision idea, such as the Bézier subdivision [14] and the interval segmentation [15], [16], [17]. The most famous subdivision method is the Bézier clipping [19], which has been proved to be quadratically convergent [20]. Several later papers (e.g.,  [21], [22]) are based on the Bézier clipping method. However, though the subdivision method can locate the region containing the intersections quickly, it can hardly generate accurate results with the limitation of the number of subdivisions. In order to get precise solution, some methods for solving the roots of the polynomial equations of the curves are proposed [23], [24], [25], [26], [27]. The methods for solving the polynomial systems of the parametric curves include the implicitization [23], [24], the matrix computation method [25] and the homotomy methods [26]. The Newton’s method [27] is generally used for calculating the roots of nonlinear equations. However, it is limited by the requirement for a suitable initial point, as a bad starting point can cause the iteration to not converge at all. Usually a pre-processing is required to compute an initial value for the Newton’s iteration. For example, in [28] the clipping method is combined with the Newton’s method.
In our work, the goal is to obtain 2D intersection regions of the DBSCs. As the regions are enclosed by the bounding curves which are trimmed by boundary intersection points of the DBSCs, the key task is converted into computing intersection points of the boundaries of the DBSCs. We decompose the boundary of a DBSC into four components: the upper boundary, the lower boundary, the start arc and the end arc. Though the equation of the circular arcs is quite simple, the equation of the upper/lower boundary is very complex. Hence, the most difficult part is to compute the intersections of the two upper/lower boundaries, which will be elaborated in detail. The solution of the intersections between one upper/lower boundary and one arc can be solved similarly. There is no need to cover the intersections of two arcs since it is easy to obtain the roots of the corresponding equations.
Our proposed algorithm comprises three steps: (1) the DBSCs are decomposed into several disk Bézier curves (DBCs) [29]; (2) a new clipping method designed for the DBCs is applied to compute approximate intersection points (precision is up to 10e−2) of the bounding curves of the DBCs; (3) the approximate intersection points are used as the starting points for Newton’s iteration to obtain the intersection points with high precision (up to 10e−15).
The rest of this paper is organized as follows. In Section 2, the fundamental problem of the intersection of DBSCs is introduced. A method of computing the approximate intersection points of boundaries of DBSCs is proposed in Section 3. The computation of the accurate intersection points of boundaries of DBSCs is investigated in Section 4. Then the construction of the intersection regions is described in Section 5. In Section 6, we present some examples and comparisons that evaluate the accuracy and efficiency of the proposed method. The final section covers the conclusions. As far as we know, this work is the first well-worked exploration of the problem of intersection of the DBSCs.
