Identification and extraction of scene text from natural images and videos have been an essential job in recent computer vision research due to the frequent use and advent of smart gadgets. It also has huge demand in content based image retrieval and understanding. Technically, extraction of text undergoes through two major steps: (a) Text Detection in which it is identified and localized from natural scenes and/or videos. In short, it is a process to determine text/non-text regions. (b) Text Recognition means to understand semantic meaning of the text. In general, text is of two types [1]; (1) scene text which is normally a click of camera and reveals common surroundings. This make scene unstructured and ambiguous due to uncertain situations e.g., advertisement holdings, sign boards, shops, text on buses, face panels and many more, (2) caption or graphic text is added manually to images and/or videos in order to support visual and audio content, so here text extraction is simpler than natural scene text.
The challenges regarding diversity and complexity of natural images for text extraction are addressed from three different angles; (1) variation in natural scene text due to unrestrained and uncontrolled surroundings reflects absolutely diverse font size, style, color, scales and orientation, (2) Background uncertainty having challenges like roads, signs, grass, buildings, bricks and paves etc. All these factors make it difficult to separate actual text from natural image and thus can become source of puzzlement and bugs, (3) Intrusion factors like noise, low quality, distortion, non consistent light also generate problems in natural scene text identification and extraction.
The most important text identification classes are: texture, connected components and hybrid approaches. In texture oriented approach proposed by authors in [2], text is closely related to some class of texture from which certain characteristics such as filter response, wavelength coefficient and native intensities can be processed. However, these methods thoroughly scan all locations and levels hence proved computationally costly. Connected component approach published in [3] carries out edge identification earlier and then applies down to up method to join minor regions into bigger regions unless all regions are detected. In addition, geometrical characteristics such as eccentricity, solidity, aspect ratio, Euler number, extent and some heuristics are used to combine text regions to extract and confine the text. Hybrid approaches are a combination of texture oriented and connected component oriented approaches.
The aim and uniqueness of proposed work is that it not only recognizes the text intelligently but also removes error in order to preserve actual meaning of the text. As per reviewing the literature such work is maiden effort in this scenario.
Recently, MSER [[4], [5]], SWT [6] and binarization techniques [7] are popular for extracting text from natural scene. In the proposed methodology, MSER is used to extract text after enhancing the contrast of a scene image while applying LUV-channel and selecting L-channel in gray scale for finding stable regions as a preprocessing step. Secondly, a novel approach is used to perform classification of MSER components into text and non-text by applying a feature descriptor which is a combination of LBP, T-HOG and SVM as classifier. Thirdly, CNN architecture is proposed for character recognition and character labeling. The output of CNN is stored in a text file to make a string of words. Task is completed if the output of text file matches the scene text otherwise error correction is handled using hamming distance technique. The complete framework will be described thoroughly in the coming subsequent portions of this work.
This work has been evaluated on standard datasets in the respective domain and finds out that it performs well on all standard datasets primarily with increasing accuracy along with additional calculation of precision, recall and f-score. Moreover, the application is programmed in C and Python on Ubuntu platform. The combination of these languages as a single entity gave remarkable results. The first portion text detection presented in Fig. 1 is programmed in C, while the second portion text recognition is carried out using Python language.
