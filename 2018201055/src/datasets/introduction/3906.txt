Today it is almost impossible to spend a single day without depending on an information system, a computer or any other form of computation. There are multiple examples of how the world is being changed by the Digital Revolution: the media industry (Manovich, 2013), medicine (Murdoch & Detsky, 2013) or transport (Cramer & Krueger, 2016), to name a few. We all need some computational understanding in order to comprehend our modern social context (Rushkoff, 2010), so any education that aims to empower the learner must acknowledge and consider the digital reality we live in. The benefits of programming-based education are widely studied and documented (García-Peñalvo, 2016, García-Peñalvo et al., 2016, Paliokas et al., 2013, pp. 115–131; Sáez-López, Román-González, & Vázquez-Cano, 2016) although there are still some open questions as whether the positive impact can be reproduced in all the subjects and areas, not just math or robotics (Gomes and Brito Correia, 2014, Moreno-León et al., 2016a). In this context, many studies have shown that presenting students with a robot as the study subject can help to grab their attention, and thus facilitate their learning experience (Benitti, 2012, Burbaitė et al., 2013). As such, teaching platforms designed to develop computational thinking are indeed a valuable pedagogical resource.
In the 1970s, Seymour Papert, Cynthia Solomon and many more at the M.I.T. Artificial Intelligence Laboratory developed a system composed of a mobile robot (the Turtle) controlled with a programming language derived from Lisp. The project was named LOGO, and its ambition was to completely revolutionize education. For many years the team at M.I.T. developed different robot “turtles”, and tested many activities and approaches. At the time, it was an expensive and complex enterprise.
Continuing the tradition, our EECS department at Universidad Autónoma de Madrid has been teaching robotics for almost 20 years, and many changes have occurred in this time. For instance many workshops from 1997 to 2003 used the TRITT micro-robot designed by a student branch of IEEE at Universidad Politécnica de Madrid (González, González, & Gómez-Arribas, 2003). These robots were made of Lego parts and incorporated basic sensing and actuating capabilities, features that made them ideal for education.
TRITT was also used in many workshops at Universidad Autónoma de Madrid, and in 2004 a group of students presented an evolution of the design: Skybot. This platform was more affordable, easy to build and program, and also incorporated more sensors (González-Gómez & Torres, 2005). More importantly, the Skybot soon became commercially available as a kit through a student-led spin-off company, which allowed its use in many engineering courses and robotic events.
The “Maker” movement was born in recent years together with many other platforms and technologies such as Arduino1 & 3D printers.2 This movement has changed the way people learn to design 3D parts and to use electronics. More importantly, it has changed how people learn to program. Arduino made it simple to learn and program electronics and to develop robotics projects. RepRap launched the 3D prototyping technology revolution that made 3D printers affordable. These two projects conform a very powerful ecosystem that has redefined the field of robotics and engineering education forever (Wong, 2011). In many cases, Makers complement their knowledge with engineering education, but this is not always the case. These are people of any age that, using the Internet as a nexus, come together as a community where every member can learn to build and repair their own gadgets and electronic devices. These maker communities and their demand for electronics have drastically lowered, in just a few years, the cost of basic components that used to be very expensive (i.e. micro-controllers, servomotors, sensors, etc).
At our robotics society, Club de Robótica-Mecatrónica, we were fascinated by these technologies and started incorporating them into every new design. In 2011 the Skybot design evolved into a 3D-printed version called Miniskybot (Gonzalez-Gomez, Valero-Gomez, Prieto-Moreno, & Abderrahim, 2012). Arduino was incorporated into our introductory workshops with the HKTR-9000 and ArduSkybot robots, with good reception from students (García-Saura & González-Gómez, 2012).
More recently, in 2016 the Office for Inclusion of Disabled People at Universiad Autónoma de Madrid asked us to give a robotics workshop to a group of high school students in risk of dropping out of higher education. The activity was framed within the national program “Campus Inclusivo, Campus sin Límites” a national initiative designed to contribute to reduce early drop out rate of students with disabilities, encouraging young people with disabilities from the second cycle of compulsory secondary education and high school and higher education to continue their education towards the University in order to facilitate their access to quality employment in the future.
We decided it was a great opportunity to improve previous designs by combining Python, LOGO and 3D printing into a low cost robotic platform, as the introduction of brief workshops have been successfully used to increase the students interest in STEM areas (Mohr-Schroeder et al., 2014) and to reduce the absenteeism during the next school year (Iver & Iver, 2015).
In this paper we present Phogo, a teaching platform based on a low cost 3D-printed robot capable of tracing its path with a marker, as well as a software infrastructure that allows for transparent wireless communication with each robot. All the software and hardware, as well as the teaching materials, have been published with open licenses and are freely available in a GitHub repository.
Phogo is a project in an early development stage, aimed to become a platform for learning and teaching programing concepts to teenagers, young adults and beyond. The final objective is to engage pre-university students towards STEM careers. We believe that Phogo has four strengths: a) simplicity and low cost, to reach schools, b) a free and open conception (based on a “maker” approach) that will allow students to assemble and modify their own robots, c) the use of Python as the main language, compared to other projects with arcane or less interesting languages for teaching, and d) a tangible entity that can facilitate learning for students with special needs, as it gives them more opportunities.
The following section reviews the main pieces of the LOGO project and some other projects that followed. In the third section there is a description of our Phogo robot's mechanic and electronic parts, the Python-based software and the possibilities of the combined system are presented. The introduction to Phogo is followed by a comparison of the previous projects with Phogo. Then comes a preliminary validation of a Phogo prototype in an informal experience with 19 students with special needs and no previous programming knowledge. Last, we show our current work improving the robot and the library based on that experience. Finally, our conclusions are presented, followed by the discussion and future work.
