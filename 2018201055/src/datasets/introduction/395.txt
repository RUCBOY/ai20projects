Product identification is critical to achieving factory identification in the steel and manufacturing industries (Dong et al., 2018, Cao et al., 2019). Real-time tracking and management of products can be made available through automated recognition of the product identification number (Kuo et al., 2009, Konstantindis et al., 2018, Wu et al., 2020). It is also possible to increase the productivity and efficiently plan and control the production schedule.
Based on its success in the field of image processing and computer vision, deep learning has been widely used to identify products in numerous industries (Xuan et al., 2018, Chen and Jahanshahi, 2018, Kessentini et al., 2019). This trend can also be found in the steel industry (Lee et al., 2017, Koo et al., 2019, Dong et al., 2019). Semi-finished products such as a billet and a slab should be identified because they are made up of different ingredients according to the needs of the customers. Therefore, these products are assigned their own identification numbers. In this study, we concentrated on identifying the billet identification number (BIN). A BIN is inscribed on the square cross-section of a billet, which is a long bar of metal. The billet image is obtained when the billet is placed randomly on a rail for the next process. Therefore, the BIN is rotated at an arbitrary angle.
In field of text recognition, deep learning-based algorithms were used widely (Su and Lu, 2017, Cheng et al., 2018). To accurate recognition of words without character segmentation, Su and Lu (2017) introduced the text recognition algorithm consisting of Long Short-Term Memory (LSTM) and histograms of oriented gradients (HOG) based feature generation. To recognize irregular text, Cheng et al. (2018) introduced AON that consists horizontal network, vertical network and character placement clue network. And then, to improve text recognition performance, several algorithms were introduced with image rectification (Shi et al., 2018, Zhan and Lu, 2019, Luo et al., 2019). In ASTER (Shi et al., 2018), two sets of control points are localized along the top and bottom of text edges. And, rectified image is obtained by thin plate spline (TPS) transformation. On the other hand, in ESIR (Zhan & Lu, 2019), horizontal and vertical lines of text are fitted to estimate the pose of text line. The image is iteratively rectified by TPS transformation. MORAN (Luo et al., 2019) consists of multi-object rectification network and attention-based sequence recognition network. The former network rectifies the image so that the latter network easily reads the irregular text. Two networks are trained together via only images and text labels.
However, to identify text (including the BIN) in natural or factory scenes, text detection and text recognition phases are required. Text detection is to find a text region in the given image (Xu et al., 2019, Baek et al., 2019, Xie et al., 2019), and text recognition is to identify a character or word from an region detected in the text detection phase. Text detection and text recognition are individual research topics. For this reason, to identify texts form scenes, errors accumulate during each phase (detection and recognition), and the optimization of the hyper-parameters is difficult. To avoid these problems, text spotting algorithms (also known as end-to-end text recognition) were studied. Text spotting means one algorithm for detecting and recognizing text. Therefore, in text spotting, all information is shared when text is detected and recognized.
Several studies on text spotting and end-to-end text recognition from natural scenes have been conducted (Jaderberg et al., 2014, Bušta et al., 2017, Liu et al., 2018, Lyu et al., 2018). For text detection and word recognition, Jaderberg et al. (2014) introduced a shared convolutional neural network (CNN) architecture that generates four outputs from the text/non-text, character case-sensitive, character case-insensitive and bigram classifiers. Text detection is first achieved using a sliding window method, the run length smoothing algorithm (RLSA), and text/non-text classification. The other outputs are used to recognize characters from the text detection region. Bušta et al. (2017) exploited a region proposal network (RPN) (Ren, He, Girshick, & Sun, 2017), which is improved through the addition of θ∈(-π/2,π/2), to predict the orientation of the text detection region. After rotation and scale normalization of the feature map of the proposed text region using a bilinear sampler, a CNN and the connectionist temporal classification (CTC) are used to recognize the variable-length text. Liu et al. (2018) introduced a unified network for oriented text detection and recognition. The network extracts a rotated feature map which is estimated as a rotated text region. The feature map is converted into an axis-aligned feature map using a region of interest (RoI) rotation operation. Then, to recognize the text, the transformed map is fed into a recurrent neural network (RNN). Lyu et al. (2018) introduced a network for detecting and recognizing text with arbitrary shapes which include curved as well as horizontal and oriented text forms. This network was inspired by the mask R-CNN (He, Gkioxari, Dollár, & Girshick, 2017a). To detect the text region, box classification and box regression are applied to the feature map obtained by RPN. To recognize the text, the text and character instance are segmented.
Conventional networks and algorithms cannot be used to identify a BIN. Texts in a natural scene can be slightly rotated, but rarely by 180°. Because conventional networks and algorithms concentrate on text from natural scenes, they are not considered with regard to a BIN, which may be rotated at various degrees. A previous study focusing on BIN identification was introduced by Koo et al. (2019). The previous algorithm is based on the network recognizing non-rotated BINs. Four outputs of the network are then required to detect the rotation angle, and complex post-processing is also required. Namely, the previous algorithm has a high computational complexity.
To simplify the algorithm and improve the performance for BIN identification, we propose a novel framework for a unified deep neural network. Although a BIN, as well as text and other product ID numbers, are rotated, the class and position of each character (or order) within the BIN are not changed. In addition, the two pieces of information are sufficient to extract a full BIN. Inspired by this concept, the proposed network consists of two output branches of one input root. One output is regarding the class of the BIN, and the other is regarding the position within the BIN. Furthermore, the use of multi-task is known to have a positive effect on the representation learning of a network (Bengio, Courville, & Vincent, 2013). Therefore, the proposed framework demonstrates a better performance than the previous algorithm in terms of accuracy, processing time and other factors. In addition, the proposed network was analyzed and optimized for BIN identification. The main contributions of this study are summarized as follows.
(1)We propose a unified deep neural network that concurrently detects and recognizes an ID number. The new concept of text spotting algorithm estimates the order and class of text so that it identifies text rotated from 1 to 360°.(2)As an algorithm applied with real field data, simplicity is important for users or workers of real industry. Thus, complicated pre-processing and post-processing are not required. The accuracy is also not influenced by the post-processing which is only applied to interpret the results of the proposed network.(3)The proposed network is end-to-end trainable. Furthermore, although two ground truth data (GTD) are required, no more additional labor than the previous study (Koo et al., 2019) is required. Two GTD are obtained through a single click. Further details are provided in Section 3.3.
The rest of this paper is organized as follows. In Section 2, we describe the BIN to be estimated. In Section 3, the proposed network is explained. In Section 4, we describe experiments conducted to optimize the proposed network and compare with the previous algorithm. Finally, in Section 5. some concluding remarks are provided.
