Wing (2006) made computational thinking popular and proposed that it is not a skill only useful for computer scientists, but rather a fundamental skill that should be learned by everyone. She argued that “to reading, writing and arithmetic, we should add computational thinking to every child’s analytical ability” (Wing, 2006, p. 33). Participants of the workshop on The Scope and Nature of Computational Thinking (National Research Council, 2010) considered the question “Why should students learn computational thinking?” They contended that computational thinking is helpful in (i) succeeding in a technological society, (ii) maintaining interest in the information technology profession, (iii) maintaining and enhancing economic competitiveness, (iv) supporting inquiry in other disciplines, e.g. biology, physics, earth sciences and psychology, (v) and enabling personal empowerment. These arguments were influential in a broad spectrum of the academic community and computing courses have become increasingly popular in K-12 education.
Actually the notion of computational thinking is not new to the education community. Although computational thinking has been given significant recognition only recently, it has been present in academic discourse under different forms for decades. Of the numerous definitions for the computational thinking found in the literature we will utilize the definition of Cuny, Snider, and Wing (2010): “the thought process involved in formulating problems and their solutions so that the solutions are represented in a form that can be effectively carried out by an information-processing agent” (as cited in Wing, 2011, p. 20).
Despite the popularity of computing courses today, students’ difficulties in learning computer science related concepts are well documented in the literature (Boticki, Barisic, Martin, & Drljevic, 2013; Robins, Rountree, & Rountree, 2003). One of the central skills that students should gain in computational thinking is abstraction (Wing, 2006). Piaget developed the notion of reflective abstraction to describe the children’s construction of abstract logico-mathematical structures (Beth & Piaget, 1966). He mainly distinguished three types of abstraction: empirical, pseudo-empirical, and reflective abstraction. Our main purpose in this study is to show that reflective abstraction can be used as a tool in the study of computational thinking. For this purpose we will discuss: (i) different views related to abstraction and how Piaget conceptualized reflective abstraction; (ii) APOS Theory as a mathematical learning theory, its supporting pedagogy and the role of computational thinking in pedagogy; and (iii) the nature of abstraction and the role of reflective abstraction in computational thinking.
