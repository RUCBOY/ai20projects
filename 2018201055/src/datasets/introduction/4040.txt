Parallel and distributed computing (PDC) based technology is found to be useful in diverse sections of manufacturing and development. Now-a-days, PDC based technology is being used extensively in designing various methods and algorithms in government laboratories as well as in corporate industries. Also, a lot of public and private sector events and initiatives are emphasizing the need of adopting parallel thinking at the academic and research level. So, it is felt that the formal training of the students in PDC and making them to ‘think in parallel’ while performing design or development activities can be beneficial to them in all their future endeavors. Motivated from the TCPP Core Curriculum  [22] and the market-needs, it was planned to integrate the PDC topics from TCPP Core Curriculum in teaching of various courses of Computer Science and Engineering at undergraduate level. Initially, we analyzed the complete course-structure of our undergraduate program. After a recent revision, we have incorporated some elective courses with the theme matching with the TCPP core curriculum such as Parallel and Distributed Algorithms, Cloud Computing, High Performance Computing, and Distributed Systems. Further, some of the core courses such as introductory course on Computer Science, introductory course on Programming, Data Structures, Algorithm Design, Compiler Design, and Programming Languages also cover the topics related to PDC as per specifications given in TCPP Core Curriculum Initiative  [22]. After going through the TCPP Core Curriculum Initiative  [22] document, we learned that some of the other remaining courses can be targeted for integration of PDC topics. Hence, we planned to integrate the topics from TCPP core curriculum into our courses on Computer Architecture, Computer Networks, Network Programming, Network based laboratory, and Software Engineering. Out of these, the courses of Computer Architecture and Software Engineering are taught at the second year level, courses of Computer Networks and Network based laboratory are taught at the third year level, and the course of Network Programming is taught at the final year level of the under-graduation. Apart from the topics mentioned in TCPP core curriculum for integration in these courses, we also planned to have some project component in the courses to enable integration of some more topics from PDC with these courses. Research-oriented teaching was performed through discussion on emerging trends, assigning projects on research problems, conducting critical-reviews, and discussing new ideas. Some invited lectures related to these courses were also conducted with the help of experts from industry and academia. In this paper, we have discussed our experiences of applying this integration in teaching to undergraduate level computer science and engineering students. We performed the integration at conceptual level as well as at the practical level. This paper presents the methodology used in integration, detailed topics and integration plan along with corresponding bloom level, intended learning outcomes, evaluation strategies used, students’ feedback on the integration plan, performance evaluation using pre-post analysis and statistical analysis, and our overall observations. Some of the experiences documented in this paper have been presented concisely as posters in [16], [17], [18]. Following are the contributions of this paper:
•Main novelty of this work lies in the way we covered various PDC topics in integration with other existing courses.•A concrete and detailed integration plan for research-oriented teaching of PDC topics with other undergraduate courses is presented.•The integration has been performed in incremental fashion at different levels of under-graduation and the efforts of multiple years since fall 2014 have been reported.•The success of integration plan has been validated through analysis of students’ pre-post feedback and their performance in examinations.•Statistical analysis and a control group based analysis have been performed on the pre-post students’ evaluation to validate the effectiveness of the integration plan. From the statistical analysis, some fruitful observations have been drawn.
In this paper, we conducted an experimental study by performing integration of PDC topics with other undergraduate courses in a planned manner. We aim to find empirical evidences to answer the following research questions:
1.How does the proposed research-oriented teaching of PDC topics in integration with other courses perform?2.How does the proposed research-oriented teaching of PDC topics in integration with other courses perform in comparison to the existing conventional teaching?3.Does the integration of PDC topics with an existing other course adversely affect the performance of the students in that course?4.Is the integration of PDC topics in other existing courses accepted by students?5.Does the work contribute from pedagogical point of view to the existing literature?
Apart from introduction in Section  1, rest of the paper is organized as follows. Section  2 presents background and motivation. Similar related works are presented in Section  3. Our overall goal and integration plan is explained in Section  4. Section  5 provides the underlying idea of research-oriented teaching. Section  6 depicts the details of integration of PDC topics with Software Engineering and Computer Architecture courses. Integration of PDC topics with Computer Networks, Network based laboratory, and Network Programming courses is discussed in Section  7. Section  8 presents evaluation of the proposed integration plan. Discussion on the work presented in this paper and the comparative analysis with the existing works are given in Section  9. Section  10 presents threats to validity and the paper has been concluded in Section  11.
