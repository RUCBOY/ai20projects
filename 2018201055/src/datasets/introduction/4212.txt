Semiotic Engineering is a theory that explains Human-Computer Interaction grounded on Semiotics, by analyzing interaction through a sign-based perspective of systems communicability, i.e., it studies how interfaces communicate designers’ intentions to users by means of signs. According to Semiotic Engineering, the designer's message in the interface is composed of signs, traditionally classified as metalinguistic (which point to other signs in the interface in order to explain or clarify their meanings), static (which depict the state of the system through non-causal and non-temporal relations) and dynamic (which depict the behavior of the system according to causal and temporal relations) [5].
One of the most common methods to evaluate interfaces in the light of Semiotic Engineering is SIM – the Semiotic Inspection Method [1], [5], based on a specialist's inspection of the meta-message communicated by the interface. The term “metamessage” (and its related noun, “metacommunication”) refers to the message sent by the designer to the user, through the interface as his/her proxy, regarding how the messages exchanged between user and system should work. It is thus a message about a message; hence, the term “metamessage”.
The Semiotic Inspection Method does not involve users, only specialists and their capacity to interpret the message conveyed by the interface according to the steps of the method. To do so, the specialist must adopt the lenses of a user in a previously defined scenario [5], to which he or she must attain in order to inspect the interface and its metalinguistic, static and dynamic signs. The specialist must then interpret the message and identify communication breakdowns and discursive inconsistencies that might arise during interaction. Based on that, a general assessment is made on the communicability of the system interface.
In different researches, upon its application to different domains, SIM was adapted to capture the semiotic idiosyncrasies of varied communication spheres, such as the educational one, for which SIIM (the Semiotic Inspection Intermediated Method) was originally created [3], although it can be expanded to other domains.
Likewise, in previous studies [2], a gap was identified in the categories of signs within SIM when the method is applied to digital games, inasmuch as important contents communicated by game interfaces related to person, time and space are not properly addressed by this method.
Therefore, in this paper we discuss the concept of deictic sign as a component of the conceptual framework of Linguistics and Semiotics that can be added to SIM in case the method is adapted to better approach digital games. Deictic signs should be here understood as signs that stablish an indexical relation with the objects they refer to, thus placing them in terms of space, time and person with a reference to moment of communication though the interface.
This paper analyzes such kind of signs in digital games; to do so, it discusses in detail the deictic aspects that SIM could not inspect when it was applied to the interfaces of the games Ingress, Kinectimals and Just Dance Now [2]. As a result, we show that the category of deictic signs can be added to SIM when this method is adapted to systems that make explicit indexical references – which is common in digital games, but also in collaborative systems (when it comes to the category of person) and in geolocation systems (in terms of space and time, mainly).
The paper is structured as follows. After the introduction, the research methodology is described in Section 2. Section 3 presents a literature review about digital games and Semiotic Engineering, focusing on the Semiotic Inspection Method and its applicability to different domains. Section 4 details deictic signs under the categories of person, space and time, with examples extracted from the inspection of the aforementioned games. Based on that, an adaptation to SIM is proposed in Section 5, and a semiotic inspection of the three selected games is described, focusing on deictic signs and how they impact the system general meta-message (namely, the final product of SIM). Finally, the conclusions and references are presented.
