In the field of logical and algebraic methods in Computer Science, a particular class of permutation algebras called nominal sets has gained quite some momentum in the last decades, for their appealing role as a constructive computational model, that albeit very similar to classical set theory, provides explicit support for names, that are attached to elements, and can be freshly allocated while respecting the classical axioms of alpha-convertibility.
Nominal sets are a modern recollection of the permutation model that Fraenkel and Mostowski had used to prove independence of the Axiom of Choice from the other axioms of set theory, and was re-introduced in Computer Science as the grounds for modelling abstract syntax in the presence of binding [14], [23]. The theory of nominal sets has given rise in the last decades to a novel computing paradigm, based on the notion of pure name, with proven capacity to embrace and enhance the full spectrum of Theoretical Computer Science, including syntax and semantics [14], [21], automata theory [1], regular expressions [18], [15], and several other foundational topics, including the most famous theoretical device, namely Turing machines [2].
Cellular automata [17] (CAs) are a model of computation originally introduced in the 1940's by Stanislaw Ulam and John von Neumann for modelling biological self-reproduction. In a cellular automaton (CA), cells are arranged in regular, finite-dimensional grids, and assume values from a finite alphabet (also called colours, or states). Cell updates occur simultaneously at discrete time instants (principle of synchrony), the new value of each cell depending of the values of the cells in its neighbourhood (principle of locality).
ECAs (for Elementary Cellular Automata) [25] are the simplest form of CA: cells are arranged in a 1D, infinite, or finite and circular, array, they assume binary values, and cell neighbourhoods have diameter 3, meaning that the evolution of each cell is determined by its immediate left and right neighbours. In other words, the value ci(t+1) of cell ci at time t+1 depends on the value at time t of ci itself and of its immediate left and right neighbours, and is expressed by f(ci−1(t),ci(t),ci+1(t)), where f is a boolean function used for all cells (principle of uniformity). There exist 28=256 boolean functions of three variables, thus there exist 256 distinct ECAs. According to Wolfram's numbering scheme, if f(1,1,1)=b1,f(1,1,0)=b2,...,f(0,0,0)=b8, then the ECA based on function f is numbered by the decimal representation of bit tuple (b1,...,b8).
Being based on principles of locality and uniformity, CAs have been used for modelling a wide array of natural phenomena, from crystal formation to fluid dynamics, from reaction-diffusion in chemistry to pattern formation in biologic substrata. The contrast between the extreme simplicity of their definition and the richness of their emergent behaviours, as widely explored in [24], [25], has induced some scientists to attribute to CAs, or similar simple models, a fundamental role for explaining the complexity of the physical universe as a whole. The idea that the complexity observed in nature be the manifestation of the emergent properties of a computation taking place at the tiniest spacetime scales is sometimes referred to as the computational universe conjecture.
The quest for simple theoretical models of digital spacetime is still open. Classical cellular automata provide a foundational example. However, CAs already assume a universal meaning of colours in cells. In this work, instead, we consider a model which is solely based on equality, where the meaning of colours is only defined at the local level. In order to achieve this, we resort to the machinery of nominal sets. The main purposes of this work are (i) to come up with a revised definition of cellular automata based on nominal computing concepts, and (ii) to present a preliminary exploration and discussion of the potential advantages that Nominal Cellular Automata might offer over classical CAs when dealing with the computational universe conjecture and, more generally and abstractly, with the emergence of complexity from simple premises.
In Section 2 we provide the general definition of Nominal Cellular Automaton (NCA), which merges naturally the classical definition of CA with the basic assumptions of nominal computing, we define a “bagged” variant of Nominal CA, closely related to the “totalistic”, classical CA, and we classify the spaces of NCAs and bagged NCAs, determining class sizes.
In Section 3 we examine the simplest form of NCA, that we call ENCA (“E” for “elementary”).
In Section 4 we start studying the relations between ENCA and Wolfram's Elementary CA (ECA), identifying the subset of the ECAs that can be directly simulated by ENCAs.
In Section 5 we introduce a simple technique for simulating any ECA – including Turing-complete ECA 110 – by NCAs, thus obtaining a first instance of a Turing-complete NCA.
In Section 6 we present some of the emergent patterns that can be observed in the spatio-temporal diagrams of NCAs, compare them with the classical CA scenario, and speculate on the potential benefits that the new model might offer with respect to the computational universe conjecture.
In Section 7 we extend our analysis of emergent properties to the case of bagged NCA, and discover a number of particles that exhibit linear trajectories. Among them, we illustrate existence of particles that have an “internal” and an “external” (boundary) colour, can move the internal colour to the outside upon collision, and can bind the internal colour to a freshly generated name at a specific point in space-time. We find such particles particularly interesting in light of the emergence of complex computational capabilities that can take into account causal dependencies, identity of entities, and communication capabilities. A formal correspondence between some totalistic and some bagged CA is also proved, analogies and differences of particles that emerge in the two cases are discussed, and possible advantages of the new types of nominal particles in terms of physical spacetime modelling are suggested.
This paper is an updated version of [5]. Besides catering for a more detailed presentation of NCA, previous work is extended by introducing the notion of bagged NCA, studying the corresponding class sizes, and starting to explore their behaviour (see Section 2.2 and Section 7). Such notion proved fundamental for discovering truly “nominal” emergent behaviour, or more specifically, name binding at particle creation time (Section 7.2.1).
