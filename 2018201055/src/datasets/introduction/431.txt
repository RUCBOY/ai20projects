Herein, we investigate the computation of Fourier-type integrals of the form (1.1)G[μ]=∫abeixμH(x)f(x)dxwhere, i2=−1, H is a product of singular factors or algebraic singular factors, μ≫1 is an oscillatory parameter and f is a non-oscillatory, nonsingular smooth function. In mathematics, it is well known that the smoother a function is, the more rapid its approximation is.
More specifically, the above integral may have the form G[μ]=∫abeixμ(x−a)α(b−x)βf(x)dx,and without loss of generality, the above integral will be later rewritten as (1.2)G[μ]=∫−11eixμ(1+x)α(1−x)βf(x)dx,α,β>−1,μ≫1.
Throughout numerical integration, one severally encounters the computation of integral (1.1) which has been studied extensively. Numerous researchers have published great papers with phenomenal methods for efficient evaluation of the above form of integrals. It is worth pointing out that, highly oscillatory integrals occur prominently in many fields such as computer science, engineering, astronomy, computerized tomography, image processing, electromagnetic, seismology, many physical problems; without forgetting quantum chemistry ([1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], and the references therein). Generally, integrands of singular and highly oscillatory integrals have the form of F(x)eixμg(x), where the wave number parameter μ or frequency of oscillations is strictly large, F(x) and g(x) are amplitude and phase functions, respectively. Furthermore, the amplitude function F(x) might contain weak singularities. The integral (1.1) suffers tremendously from difficulties due to the reason that its kernel functions contain not only oscillatory but also different types of singularities. Consequently, the integral (1.1) contains simple, complicated as well as stationary types of singularities depending on the values of α and β.
The computational community in recent decades has established a considerable significance in the area of highly oscillatory integrals where many strategies have been developed to deal with the transgressive behavior of singular and oscillatory parameters such as Filon’s method [13], Filon–Clenshaw–Curtis [14], [15], asymptotic methods [16], and so on. However, all mentioned methods suffer when the oscillatory parameter becomes highly oscillatory. Furthermore, it has been shown that the classical Gauss quadrature rules fail to approximate highly oscillatory integrals when a larger number of frequencies is considered, compared to the number of function evaluations; and are uneconomical. Several methods including generalized quadrature rules would only be employed when x∈[a,b]∖{0}. Gauss Jacobi-type singularities rule evaluated using matrix weights calculation approach [17], would give a better approximation when applied to the algebraic oscillatory integrals (1.1), with low and moderate frequency values taken into consideration. Simply by considering the integral (1.1) as ∫ab(x−a)α(b−x)βg(x)dx, where g(x)≡f(x)eixμ. However, the rule suffers once the frequency value increases excessively. This means that the number of functions evaluated also increases; which leads to the slow computation of the algorithm. Moreover, in order to deal with such a problem, one would employ Machine Precision as number of decimal digits (known as precision or accuracy in computer science). The Mehle quadrature formula also known as the Jacobi rule; has an asymptotic error estimate of O(n2) and the rule is exact for polynomials up to 2n−1 degree. In addition, by taking α=β=μ=0, Clenshaw–Curtis rule and Gauss are precisely the same [18].
Modified Clenshaw–Curtis methods are one of our central interests in this paper. Clenshaw–Curtis (CC) Quadrature comes from the idea of converting a non-periodic function into a periodic one. The method is constructed using the Chebyshev expansions of a continuous function, where the integrand is truncated by the Chebyshev series term-by-term and its coefficient is approximated using the trapezoidal rule. For periodic functions, the Trapezoidal rule converges very rapidly and relatively slowly for non-periodic functions [19]. Cooley and Tukey [20] exhibited that only O(nlogn) operations are needed to evaluate the Chebyshev coefficient. Presenting and comparing two algorithms based on the Clenshaw–Curtis approach, are the area of interest of this paper. All two approaches depend on the approximation of the nonsingular and non-oscillatory smooth function f(x) by Chebyshev series (1.3)f(x)=∑n=0N′′bnTn(x),where the above sum with double primes usually indicates that the first term and the last term in the summation have to be halved or have half weight. Here Tn is the nth Chebyshev polynomial, and using discrete orthogonality formulas [21], we can define lnn={N,n={0,N},N2,0<n<N,where lnk=∑j=0N′′Tn(xj)Tk(xj)=0,n≠k.Then the coefficient bn can be evaluated using the following formula (1.4)bn=1lnn∑j=0N′′f(xj)Tn(xj).In the above formula xj=cos(jπ∕N), 0≤j≤N, are the (N+1)- Clenshaw–Curtis points; or realistically, Chebyshev points and its algorithm only costs O(NlogN) operation by FFT. Substituting Eq. (1.3) into (1.2) yields (1.5)Gn[μ]=∑n=0N′′bnMn(α,β,μ),where (1.6)Mn(α,β,μ)=∫−11eixμ(1+x)α(1−x)βTn(x)dx
 is well-known as the modified moments in the first approach to be considered here. Moreover, by employing the Bessel function [22], we can write the approximation of eixμ as (1.7)eixμ=2∑j=0∞′′ijJj(μ)Tj(x).Here Jj(μ) is the Bessel function of order j. Substituting the approximation of eixμ given by (1.7) into Eq. (1.5) we get Gn,j[μ]=2∑j=0∞′′ijJj(μ)∑n=0N′′bn∫−11(1+x)α(1−x)βTn(x)Tj(x)dxwhere integral part in the above equation can be expressed as (1.8)vn,j=∫−11(1+x)α(1−x)βTn(x)Tj(x)dx.Together with the Chebyshev equality Tn(x)Tj(x)=12(Tn+j(x)+T|n−j|(x)) [23]. Eq. (1.8) would be written in the from (1.9)vn,j=Mn+j+M|n−j|2with (1.10)Mk(α,β)=∫−11(1+x)α(1−x)βTk(x)dx.
Mk(α,β) in Eq. (1.10) are the Modified moments in the second approach to be considered in this paper. And this may lead us to the new form of G[μ] which can be denoted as (1.11)Gk[μ]=2∑n=0N′′bn∑j=0∞′′ijJj(μ)Mk(α,β).Note that the accuracy of the Modified Clenshaw–Curtis methods depends on the availability of an efficient algorithm for computing the Modified moments for example: Mn(α,β,μ) and Mk(α,β). The main purpose of this paper is to compute efficiently the integral (1.1) using two different types of the modified moments. Furthermore, automatic computation and error analysis are also presented in this paper.
This paper is structured as follows: efficient evaluations of Eq. (1.5) using the first approach for Algorithm 1, it’s stability and proposed Mathematica program for approach 1 are presented in Section 2. In Section 3 computation of Eq. (1.11) and it’s numerical stability are demonstrated by utilizing the so-called second approach for related Algorithm 2. Section 4 comprises of error analysis, concrete numerical experiments are given in Section 5, and Section 6 consists of the concluding remarks.
