Volunteer Computing (VC) is a type of distributed computing in which ordinary people donate processing and storage resources to one or more scientific projects. Most of the existing VC systems have the same basic structure: a client program runs on the volunteer’s computer, periodically contacting project-operated servers over the Internet, to request jobs and report the results of completed jobs. VC is important for several reasons [1]:

•Because of the huge number of computers in the world, VC can supply more computing power to science than any other type of computing. In addition, this advantage will increase over time, because the number of computers is in continuous growth.•Volunteer Computing power cannot be bought; it must be earned. A research project that has limited funding but large public appeal can get remarkable computing power. In contrast, traditional supercomputers are extremely expensive, and are available only for applications or teams that can afford them.•Volunteer Computing promotes public interest in science, and provides the public with a voice in determining the directions of scientific research.
In a similar way, Desktop Grid Computing (DG) is a form of distributed computing in which an organization uses its existing computers to handle its own long-running computational task. This differs from VC in several ways: in DG, the computing resources can be trusted; there is no need for screensaver graphics, in fact it may be desirable to have the computation be completely invisible and out of the control of the PC user; and client deployment is typically automated. Both, VC and DG are disciplines of distributed computing that consider the whole Internet as a possible computing platform.
BOINC (Berkeley Open Infrastructure for Network Computing) [2] is an open-source software platform for Volunteer Computing and Desktop Grid Computing. It provides the most widely used middleware system for Volunteer Computing and Desktop Grids. Although the growth of desktop computers is stalled and currently the world is on laptops and moving to mobile fast, according to BOINCstats [3], currently there are 57 BOINC projects, with more than 13 million hosts participating in these projects. The number of active hosts is around 1 million, offering 190 PetaFLOPS of computation. One example of this is the Einstein@Home project, in which users regularly contribute about 1080 TeraFLOPS of computational power, which would rank Einstein@Home among the top 100 on the TOP500 [4] list which is constituted by the 500 fastest supercomputers of the world. BOINC has evolved with the new mobile platforms, and currently it provides a version for Android devices [5]. In this kind of platforms BOINC only computes when the device is plugged into a power source (AC or USB) and the battery is charged 90% or more, so it won’t significantly reduce the battery life or the recharge time. Moreover, BOINC transfers data only when the devices are connected to a WiFi network.
In this paper we present ComBoS 1 (Complete BOINC Simulator), a complete and open-source simulator for Volunteer Computing and Desktop Grids, based on the whole BOINC infrastructure. ComBoS simulates real VC and DG scenarios. These scenarios are defined by a large set of parameters specified in an XML file, including the number of projects, the characteristics of each project and the network environment. The outputs of the simulations allow us to analyze a wide range of statistical results, such as the throughput of each project, the number of jobs executed by the clients, the total credit granted and the average occupation of the BOINC servers. ComBoS has been implemented in C programming language, with the help of the tools provided by the MSG API of SimGrid [6]. Thanks to this, we have managed to perform massive simulations (∼ 500,000 hosts) in just a few hours. Although there are other BOINC simulators, any of them allow to simulate the complete infrastructure of BOINC. Our goal was to create a complete simulator that could simulate realistic scenarios taking into account the whole BOINC infrastructure, that other simulators do not consider: projects, servers, network, redundant computing, scheduling, and volunteer nodes. The first version of ComBoS was used by the authors in [7] to analyze the performance of the BOINC infrastructure for data intensive applications, where the feasibility of Volunteer Computing for this kind of applications was studied. In this paper we present an exhaustive description of ComBoS. We introduce the architecture of the simulator in detail, showing both the server side and the client side. Then, we describe all parameters needed to perform the simulations and the algorithms used in the client scheduler, in addition to a performance evaluation of the simulator and the analysis of three case studies.
The rest of the paper is organized as follows: Section 2 discusses related work; Section 3 presents and describes the simulator that we have developed; in Section 4 we validate ComBoS by comparing its statistical results with the real ones of three different BOINC projects; Section 5 analyzes the performance of the simulator; Section 6 presents three case studies; and finally, Section 7 concludes the paper and presents some future work.
