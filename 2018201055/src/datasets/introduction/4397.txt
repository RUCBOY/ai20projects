Spherically mapped data describes objects or entities with locations that lie on or can be projected onto a real or conceptual sphere. Examples include geographic information system (GIS) data associated with geographic longitude and latitude locations and astronomical observation data associated with celestial right ascension and declination locations. Measurements in GIS and astronomical applications are often spherically mapped. The datasets considered in this work are point data, in that each data record includes a spherically mapped point location, but additional data may be present as well. For example, a data record describing an astronomical observation may include the celestial location as right ascension and declination as well as other information relating to the observation, such as redshift and apparent magnitude. This article will refer to the point itself, or to the data record associated with the point, as appropriate to the context.
A number of data structures specifically designed to store and access spherically mapped data have been developed. In general, they partition the surface of the sphere into “cells” (also known as “pixels”) and associate the data records with the cells that contain the points’ locations. They differ in a number of ways, including how the sphere’s surface is partitioned into cells and how each cell may be recursively subdivided into smaller cells. Each has strengths and weaknesses specific to its design.
One of them, the Hierarchical Equal Area iso-Latitude Pixelization (HEALPix) data structure1, was specifically designed to support fast numerical analysis of spherically mapped data. HEALPix has been successfully used for a number of applications, perhaps most notably for storing cosmic microwave background observation data. However, for applications involving relatively sparse spherically mapped point datasets, HEALPix has some possible drawbacks. Each HEALPix data structure has a single fixed resolution for the entire sphere, which can cause inefficient memory utilization for some datasets. Data points at locations that are closer together than the data structure’s fixed resolution can cause overwriting of data. Finally, certain HEALPix range queries can return data points that are not actually within the query area.
A new data structure, Multi-Resolution HEALPix (MRH), was developed to address these issues. As its name implies, MRH is multi-resolution; different portions of the sphere may be represented and subdivided at different levels of resolution in the same data structure. The level of resolution, i.e., the depth of subdivision, of each area depends on the density of data points in that area. Multi-resolution has been shown to be advantageous in a wide range of data structures and applications, e.g., multi-resolution mapping of geospecific model databases [1] and modeling theory [2]. MRH is intended to combine the best aspects of HEALPix with the advantages of a multi-resolution data structure, including reduced memory requirements, improved query efficiency for some types of queries, and flexible handling of proximate points. The MRH design combines multiple quadtrees and the convenient Morton cell addressing scheme, which is inherently multi-resolution and very compact.
The remainder of article is structured as follows. Section 2 presents a brief survey of data structures for spherical mapping, especially HEALPix. Section 3 details MRH, the new multi-resolution variant of HEALPix. Section 4 defines the four types of range queries supported by MRH (disc, polygon, latitude strip, and neighbor) and describes the algorithms to perform them. Section 5 explains the benchmarking datasets, queries, and process used to compare HEALPix and MRH. Section 6 reports the benchmarking results. Finally, section 7 discusses the conclusions and proposes possible future work.
