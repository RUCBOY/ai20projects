Network Time Protocol (NTP) (Mills et al., 2010) is one of the oldest protocols and is used to synchronize clocks of computer systems on the Internet. Clock synchronization among computers is important for many reasons as inconsistencies in clock time can affect various core Internet services such as Domain Name System (DNS) resolution, interdomain routing using Resource Public Key Infrastructure (RPKI) and Transport Layer Security (TLS) (Klein, Malhotra, Cohen, Brakke, Goldberg, 2016, Mills, 2010, Selvi). Thus, if an adversary can manipulate clocks of important systems on the Internet by obstructing NTP operation, services to a large number of Internet users will be affected. There have been several incidences in the past where clock synchronization failure led to a breakdown of various services on the faulty systems, all at the same time. For example, two important NTP servers of U.S. Naval Observatory (USNO) were sent back in time by about 12 years on November 19, 2012 (Bicknell, 2012), “causing outages at a variety of devices including Active Directory (AD) authentication servers and routers” (Blog, 2012). NTP’s potential for Distributed DoS (DDoS) using reflection and amplification techniques is well studied by the security community (Czyz et al., 2014). However, like in other application layer protocols (Hubballi, Tripathi, 2017, Tripathi, Hubballi, 2015, Tripathi, Hubballi, 2016, Tripathi, Hubballi, 2018, Tripathi, Hubballi, 2018, Tripathi, Hubballi, Singh, 2016, Tripathi, Swarnkar, Hubballi, 2017), researchers have now started paying attention to find vulnerabilities in NTP specification and implementations also (Malhotra, Cohen, Brakke, Goldberg, 2016, Malhotra, Goldberg, 2016, Malhotra, Van Gundy, Varia, Kennedy, Gardner, Goldberg, 2017).
In this paper, we describe a new attack that exploits a vulnerability present in NTP broadcast mode. The proposed attack prevents an NTP client from synchronizing its clock with an NTP broadcast server by sending impersonated NTP packets to the NTP client and the broadcast server. We also show how the proposed attack is effective in both authenticated and unauthenticated broadcast modes of NTP. To the best of our knowledge, this is the first attack proposed against NTP protocol since the launch of NTP reference implementation’s most recent version ntpd v4.2.8p13 (NTP Software Downloads, 2020) on March 7th, 2019. As the first line of defense, we also suggest a few countermeasures. In summary, our contributions in this paper are:
1.We propose a new attack that can prevent an NTP client from synchronizing its clock with an NTP server.2.We test the proposed attack in a real network and show that it is effective in both authenticated and unauthenticated NTP broadcast/multicast modes.3.We perform extensive experiments to measure the attack surface on the Internet by scanning the entire IPv4 address space and furnish the results. We also quantify the resulting attack surface and discuss that it is only the floor value of the actual attack surface on the Internet.4.We suggest a few countermeasures that can be deployed to effectively counter the proposed attack until the release of a proper security patch.
1.1. Attack disclosureWe have disclosed the attack to ntpd developers on October 2nd, 2018, and the attack was made public on May 6th, 2020. Also, CVE-2018-8956 National Vulnerability Database (2018) has been assigned for the proposed attack.
1.2. OrganizationThe rest of the paper is organized as follows. We give an overview of the NTP protocol in Section 2. In Section 3, we describe the threat model and built-in security mechanisms in NTP. In Section 4, we describe the working of the proposed attack. In Section 5, we present the experiments performed to test the proposed attack against NTP broadcast mode and the results of attack surface measurement on the Internet. We describe some of the possible countermeasures to mitigate the proposed attack in Section 6. We explain previously known attacks against NTP and techniques to counter these attacks in Section 7. Finally, the paper is concluded in Section 8.
