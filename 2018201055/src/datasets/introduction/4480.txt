For many decades, researchers and practitioners in the field of Operations Research and Management Science (OR/MS) have used Modelling and Simulation (M&S) for systems analysis and decision making. The power of M&S is the ability to represent a real system and to study the impact of changes without actually altering the physical system. It provides insight into operational processes and can be used for dynamic forecasting, what-if analysis and optimisation at strategic, tactical and operational levels planning. OR/MS M&S is used in a wide range of areas including commerce, healthcare, manufacturing and logistics and covers a range of techniques from System Dynamics (SD) to Discrete Event Simulation (DES) and, more recently, Agent-Based Simulation (ABS). These techniques are supported by simulation software packages offering complete simulation environments, such as Visual Interactive Modelling Systems (VIMS) that support all (or most) aspects of a simulation study. VIMS typically run on a desktop computer and provide a user-friendly modelling interface that can be used with a minimal knowledge of programming. Models are easily developed by the interface and support a wide range of system elements and attributes. Sophisticated visualisation and results analysis tools support simulation experimentation and reporting.
However, OR/MS M&S practices have some limitations, especially when large-scale systems are being modelled. A single simulation run of a model can take a long time and can therefore limit the amount of experimentation performed in a project. Arguably, larger models take longer to simulate. Indeed, in some cases, when a model is considerably large and involves many objects and events, significant compromises must be made in experimentation when using a single desktop computer [24]. Further, large-scale systems usually involve subsystems either within the same organisation or in autonomous organisations with interdependencies. It may be convenient to create a hybrid model that uses different M&S techniques to represent different systems [8]. The typical approach to building OR/MS models is to use a single simulation package running on a single computer. Certain compromises are necessary in order to deal with the size and heterogeneity of large systems. In order to be able to simulate a large model in reasonable time, OR/MS modellers typically increase the level of abstraction at the cost of detail included in the model. This can lead to a loss of accuracy of results. Furthermore, as most simulation packages only support a single M&S technique, a model is typically developed using a single simulation technique (currently only one commercial simulation tool supports multi-technique modelling, Anylogic, www.anylogic.com). The need to use hybrid approaches is becoming more apparent as, for example, enterprise operations are becoming more interoperable [52]. Modern enterprises operate in networks, moving more and more into increasingly interdependent processes. Consequently, OR/MS modellers have to deal with more complicated, heterogeneous and larger processes. In summary, how can OR/MS modellers address larger and larger systems without compromising accuracy, using convenient hybrid approaches and within a reasonable experimentation time frame?
The practice of M&S in defence and space exploration has evolved on a different path to OR/MS. Applications of M&S in these areas related to training has focussed on the development of real-time simulations (for warfare training or space vehicle operations) [40], [35]. Motivated by the high cost of these simulations and the need to reuse models essentially as components of larger systems, much work, since the early 1990 s, has focussed on Distributed Simulation (DS) and simulation interoperability. One of the major outcomes of this work is the standardisation of the way models interoperate and has led to the well-known High-Level Architecture (HLA) standard [21]. The impact of this standard and its widespread adoption in the above areas is that it is normal for models to be built as interoperating components of large scale models. As shown in Fig. 1, logically models interact directly as if they were part of a single model. Physically models run on different computers (potentially located across the world) and interact over a communications network via software (middleware), based on the HLA standard, called the Run-Time Infrastructure (RTI). The HLA has its own terminology that can be quite opaque to ``outsiders'' – each model is a federate and a collection of models is a federation. Federates can be recomposed to form different federations. Each federate executes independently and can select what information will be shared with the other federates in the federation.Download : Download full-size imageFig. 1. HLA distributed simulation system.
It appears that the M&S approaches made possible by the HLA could solve large model issues in OR/MS. Models could be composed of submodels that run on the resources of their own computers with no need to sacrifice detail. Similarly, models could be created in different simulation software supporting different simulation techniques, as appropriate. These models could be linked together as subsystems of larger models. This concept of using the HLA to support large-scale OR/MS simulations is not new. Clearly, distributed simulation could be employed by OR/MS as a viable simulation approach for large-scale interoperable systems. Characteristics such as sharing the computational load over a network and building independent, interoperable simulations can facilitate the issues mentioned above. Subsystems of the whole system can be modelled as federates using the most appropriate simulation technique. These federates can communicate and share data at an interface level while keeping their individuality and privacy. The interoperable federates can be reused in other large-scale systems. Finally, each federate can be executed in a network node locally or remotely. Therefore, DS could provide a solution to inadequate computing power by distributing the load over a network, to heterogeneity by forming hybrid federations and therefore capturing realistically the whole system, to inter-organisation information sharing and privacy by selecting the level of transparency, and to model reusability by developing interoperable and composable models.
However, despite over a decade of research into approaches to create these OR/MS DS, only a very small number of industrial examples are documented (see Section 2). We argue that the main reason for this is not a lack of demand but the complexity and opaqueness of the HLA to OR/MS practitioners and researchers. As identified in Hannay et al. [15], there is a lack in software engineering training for academic researchers and application practitioners. Scientists do not have a clear understanding of software engineering processes. However, the need for formal processes and further software engineering training is important as the software tools become more complex. In this paper, we propose a new method that attempts to link together the methodological practices of OR/MS and the HLA. Our goal is to extend OR/MS practice with clearly defined and, where appropriate, translated elements of the HLA to enable the creation of large-scale models. We, therefore, present a DS methodological framework for OR/MS applications that attempts to bridge the chasm between the two world views. By identifying the corresponding practices of two of the most well-known simulation life-cycle frameworks for OR/MS and DS worlds, namely the OR/MS simulation method by Banks et al. [5] and the IEEE Recommended Practice for Distributed Simulation Engineering and Execution Process (DSEEP) standard [18], we propose our DS methodological framework using notation familiar and widely acceptable by OR/MS modellers and translating notation and terms familiar only to the software and systems engineering world.
The rest of the paper is organised as follows. In Section 2, there is a discussion on the background literature on DS works in OR/MS domain. Then, Section 3 discusses the development process of the proposed OR/MS DS methodological framework and explains the involved activities in respect to OR/MS and DS world views. Section 4 discusses the detailed steps of the proposed framework. Section 5 presents a case study implementation applying the OR/MS DS methodological framework on an illustrative example of hybrid ABS-DES. Reflections on the way the proposed approach eased the development of the OR/MS DS case study as well as its limitations and suggestions for improvements are discussed in Section 6. Section 7 concludes the paper.
