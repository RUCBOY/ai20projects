Data Leakage (DL) is a serious and increasingly common problem for organizations, companies and institutions around the world. This problem can be defined as the unauthorized transfer of classified information from a computer or data centre to the outside world. That is, theft of computer based sensitive information. Sensitive data in companies and organizations include intellectual property, financial information, patient information, personal credit-card data, and any other information depending on the business and the industry involved [17], [22].
The study presented in Cisco [7] reveals that organizations experienced about one threat per month. A significant proportion of computer and organizational security professionals believe insider threat is the greatest risk to their enterprise. Even more, internal fraud produces bigger financial losses in comparison to intrusions from outside the organization. These types of incidents, whether caused by malicious intent or an inadvertent mistake, can diminish a company's brand, reduce shareholder value, and damage the company's or organization goodwill and reputation [31]. But preventing theft by employees is difficult. The problem is that they may need to have access to sensitive or confidential information in order to perform their jobs, and they often copy the material they intend to take with them.
Being this the situation, the utility and necessity of any system that helps to alleviate this problem is more than justified. Therefore, the major goal of this paper is, on the one hand, to draw attention to this specific problem and, on the other hand, to propose an efficient knowledge-based algorithm for countering data leakage that, besides, reduces the number of false positive, which is the crucial problem of the data leakage detection methods. It is based on the user behaviour when working on a computational information system. The procedure is as follows. First we do anomaly detection, particularly, the algorithm we propose deals with the probability of sequences of operations performed by an authorized user on a workstation. If the output of the algorithm is that the actions carried out by the user corresponds to the expected ones, those sequences are identified as normal and removed from the system. Only sequences that are classified as possible anomaly by this algorithm are then evaluated using Markov chains, to double-check it. In case the information the user is working with is confidential or critical, we may then consider it a data leakage. The system has been proved reliable and efficient, with a low false positive rate.
Our work differs from existing research in the way we deal with the information about the computational operations of each user. We have developed a dynamic structure to codify the operations of the user in a computer system. This has allowed us to extract a user profile that can be obtained by the sequences of actions performed by the user from the historical database. We take into account not only the actions/commands or their relative frequency but the sequence of these operations, which gives us more relevant information and allows us to better detect this type of attacks.
This decision-making system has been validated on real data from a governmental institution of Equator with satisfactory results, and compared to another anomaly detection algorithm on a different public dataset, where it has been also applied, showing its potential adaptation to broader real-word application.
Another advantage of this detection system is that, once it has been trained, it can be applied on-line. The algorithm is able to analyse a sequence of operations within the current working session and, moreover, the users do not realize that they are being monitored as the overhead of the system is very low.
This rest of the paper is organized as follows. Section 2 summarizes related work on the topic of data leakage prevention and data leakage detection. In Section 3, the problem is described and the materials (dataset) and methods used are presented. Section 4 details the development of the data leakage detection algorithm and its application. Results are discussed in Section 5. The paper ends with the conclusions.
