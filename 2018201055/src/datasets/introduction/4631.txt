The Completely Independent Spanning Trees (CISTs for short) of a computer network is a set of spanning trees {T1,T2,…,Tk} of the network, such that for any two nodes u and v, the u-to-v paths belonging to Ti and Tj respectively have no common intermediate nodes, for all i≠j. CISTs can find applications in important network functions such as multi-node broadcasting  [3], one-to-all broadcasting [33], reliable broadcasting, secure message distribution [14], [20], and increase of bandwidth  [19]. For example, the network bandwidth can be increased by using the multiple paths between any two nodes in CISTs. Some examples of CISTs are illustrated in Fig. 1. The pairs in (a) and (b) are CISTs, while the pair in (c) is not because the paths from u to v in both trees contain node w.Download : Download high-res image (60KB)Download : Download full-size imageFig. 1(a). (a) T1,T2 are CISTs.Download : Download high-res image (66KB)Download : Download full-size imageFig. 1(b). (b) T1,T2 are CISTs.Download : Download high-res image (63KB)Download : Download full-size imageFig. 1(c). (c) T1,T2 are not CISTs.Fig. 1. Example of CISTs in (a) and (b); non-CISTs in (c).
The decision problem as to whether there exist two CISTs in a general graph G has been shown NP-hard  [15], and conditions have been proposed for CIST-containing graphs of certain structures. It was once conjectured that a k-connected graph (k≥2) always contains two CISTs, only to be disproved recently by Péterfalvi and Pai  [24], [31]. Therefore most research on CISTs to date has been concerning networks of specific structures. Especially, the problem of constructing multiple CISTs in a certain regularly-structured network has received much attention  [15], [24], [7], [16], [18], [28].
As an important variant of the hypercube, the best-known structure for the interconnection network, the crossed cube (CQn for short) has attracted the interest of many researchers  [6], [5], [4], [8], [12], [25], [26], [29], [30], [34], [35]. It was proved in  [21] that an n-dimensional crossed cube CQn is not node-transitive, and  [22] showed that the node set of CQn can be divided into 2⌈(n−4)/2⌉ equivalence classes, where the nodes in one equivalence class are all similar. Since there are two equivalence classes in the n-dimensional locally twisted cube LTQn   [27], and there are only one equivalence class  [32] in the n-dimensional hypercube Qn, CQn is considered more complex than LTQn and Qn.
Some characterizations have been proposed for the existence of CISTs in arbitrary graphs. Recently, Araki  [1] proved that there exist two CISTs in a graph with n≥3 nodes if the degree of each node is ≥n/2, and Fan et al.  [11] proved the existence of two CISTs in a graph with n≥3 nodes if the sum of degrees of any two nodes is ≥n. H.-Y. Chang et al. proved that for graphs of order n, with n≥6, if the minimum degree is at least n−2, then there are at least ⌊n/3⌋ CISTs  [2]. T. Hasunuma showed that for any graph G with n≥7 nodes, if the minimum degree of a vertex is n−k, where 3≤k≤n/2, then there are ⌊n/k⌋ CISTs in G   [17]. These are rather strong sufficient conditions because the needed degree of every node/pair of nodes is very large comparing the number of nodes. Furthermore, they are all existential proofs rather than constructional.
In this paper, we study the problem of constructing CISTs in a CQn, the n-dimensional crossed cube. More specifically, we will (a) show that there exist two CISTs in a CQn if n≥4; (b) present a recursive algorithm to construct two CISTs in a CQn, n≥4, with the diameter of either tree being no more than n+4. Furthermore, we will discuss the existence of CISTs in a more generalized network–the CQ-based BC network–and show that it contains two CISTs.
The rest of this paper is organized as follows. In Section  2, we introduce terminology and notation that will be used throughout the paper, define the crossed cube CQn, and give some relevant properties of the CQn. Section  3 presents the main work of the paper: Proposing the algorithm that constructs two CISTs in a CQn, and proving the correctness of the algorithm. Section  4 discusses the existence of CISTs in CQ-based BC networks. Section  5 gives summarizing remarks and concludes the paper.
