1.1. Geosciences dataThe volume of data generated by scientific instruments, sensor systems and computational models is growing at an increasing pace (Hey et al., 2009) and most geosciences disciplines and technologies exhibit this trend (Sellars et al., 2013). Typical datasets might comprise time variant observations at fixed geographic locations such as tide-gauges and oceanographic buoy data, spatially distributed data such as soil geochemistry analyses, or combined spatial/time variant data such as those observed by satellites. Other large datasets include outputs of model simulations and forecasts. Interpretations of geosciences data are commonly carried out using graphs and maps, however, there is a necessary limitation on how much information can be presented in a single representation and how many graphs or maps can be usefully incorporated in one study (Ware, 2012, Munzner, 2014). Statistical analyses afford the ability to summarise in a systematic way but at the expense of exploratory analysis and much pattern characterization.Graphical and other diagrammatic representations of data can be thought of as visualisations (Tufte, 1990, Tufte, 1997, Few, 2009). Existing visualisation tools are generally used for the presentation of results rather than being an inherent part of the data inference process (Ware, 2012, Few, 2015, Victor, 2005). However, interactive visual analytics could be used much more widely at earlier stages in the workflow, prospectively generating new insight into the underlying data (Thomas and Cook, 2005, Keim et al., 2008, Ward et al., 2010).
1.2. Human interaction with data displaysThe human comprehension of graphical representations is complex, as it involves the interplay between physiology, visual perception, cognition and experience, together with factors such as information density, dataset size, graphic design and color (Ware, 2012, Healey and Enns, 2012). Some flexibility in the display allows for physiological and experiential differences in scientific data analysts. Expert human analysts can identify structures and patterns that are challenging for statistical classification systems. Both comprehension and pattern detection are influenced by the graphical abstraction of data and the levels of detail present (Carpenter and Shah, 1998, Friel et al., 2001). Taken together, there is a point where visual data density impairs comprehensibility (Walker et al., 2016), as illustrated by the two static plots (Fig. 1).Download : Download high-res image (494KB)Download : Download full-size imageFig. 1. Significant wave height (Hs) over time, recorded at the Cape Sorell Waverider Buoy, West of Tasmania, Australia: Upper plot: 6 months (1/1/2000-30/6/2000) (8583 Samples), Lower plot 10 years (2000–2009) (165,484 Samples).
1.3. Static and animated interactive representations of dataGeoscientists and other data scientists routinely use software packages to visualise and present results as static graphs and charts. This graphing and underpinning ‘spreadsheet’ document model is user-friendly, robust and has been in use for many decades (Campbell-Kelly, 2003; ch.12) with more recent capabilities that enable dynamic updating of variables. Whilst adequate for many scientific purposes, this approach becomes unwieldy and can lead to missed insights, as datasets increase in size and complexity. As an alternative, many users engaged in scientific research are comfortable creating visual output using programming models and scripting (e.g. Python, R, Matlab) as datasets become larger.Animated interactive representations of data enable more sophisticated visualisations for interpretation. With the advent of high performance computer graphics, the repertoire of graph types has significantly expanded, including adaptive and network representations (Herman et al., 2000, Liu et al., 2014). Programming languages widely used in science such as Python are also moving beyond the conventional static charts and visualisations produced by MatPlotLib (Hunter, 2007), with an array of tools that leverage programming languages in concert with vector graphics libraries (Khronos Group, 2016), e.g. Bokeh (Continuum Analytics, 2015). Alternatively, using a programming language together with OpenGL enables the processing of significantly greater data volumes (e.g. VTK and Paraview (Kitware, 2016); Vispy (VisPy Developers, 2015)). These softwares combine, in varying degrees, features for interaction and animation, constrained by their underlying architecture (Kloss, 2009). 2D plotting libraries predominantly execute upon the CPU, limiting their ability to handle very large datasets and real-time interactivity. In contrast, OpenGL-based plotting systems (Supplement 1) afford the possibility of handling millions to billions of datapoints as well as handling high-frame-rate animation and interactivity, via the transaction of events and data across CPU and GPU (Rossant and Harris, 2013).
1.4. GPU-enhanced scientific-oriented softwareScientific visualisation has been able to exploit these hardware developments for the analysis and visualisation of massive datasets (Guha et al., 2005, Cuntz et al., 2007, Fogal et al., 2010). Examples of previous studies in the geosciences include the development of sophisticated computer simulations, such as weather forecasting (Rautenhaus et al., 2015) and climate modelling (Michalakes and Vachharajani, 2008) and other notable contributions making use of GPUs from cosmology (Kähler et al., 2006, Sainio, 2010, Bard et al., 2013). More general packages with sophisticated client-server models that implement distributed back-end compute and rendering have also been developed, e.g. Paraview (Henderson et al., 2004), VisIt (Ahern et al., 2013), SciVi (Ryabinin and Chuprina, 2013). While recognizing the utility of these packages, their potential for customization of the visual interactive interface is constrained by their underlying architecture and implementation of interface controls.We make use of the practical convergence between the technical capabilities afforded by GPU-enabled graphics and processing (Supplement 1 provides an extensive technical background), and the goals of contemporary scientific data analysis. The interaction functionality and the capabilities afforded by performant GPU-accelerated graphics are combined with cloud-enabled ability to connect with agile scientific data formats. We use the NeCTAR Research Cloud (National Research Infrastructure for Australia, 2016) to host a virtual machine configured with a THREDDS data server (TDS) (Supplement 2). Given the desirability of exposing data to the scientific user in a dynamic way, we present a new software application for animated, interactive data analysis.
