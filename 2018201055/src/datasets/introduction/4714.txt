Protection of confidentiality, integrity and availability in a real computer system is a challenging task. The increasing number of system objects and complex interactions between them make fine-grained and accurate protection of each system object time consuming and error prone.
One of the main difficulties in protecting real operating systems is the lack of understanding of the role of system objects with respect to security, in the face of hundreds of thousands of system objects in real operating systems. Previous studies divided system objects into groups based on experience, such as grouping by integrity levels, or file directories, and devised policies for each group of system objects (Bhatkar et al, 2006, Fattori et al, 2015, Lanzi et al, 2010, Sun et al, 2008, Sze, Sekar, 2015). However, such experience based group approaches are still coarse in securing real operating systems. Moreover, different systems have different security requirements. It is insufficient and inflexible to devise security policiesfor system protection relying heavily on human knowledge and involvement (Bell, LaPadula, 1973, Biba, 1977, Fraser, 2000, Lanzi et al, 2010, MICROSOFT, 2014).
In such a context, a systematic and automatic security importance assessment for system objects is desirable and necessary. In a real system, the security of one object usually depends on that of others, which leads to their different levels of security importance. We refer to the security importance of a system object as the impact of the compromise of a security attribute of the object on the security attribute of others. For example, the compromise of ntdll.dll will undermine the integrity of a large number of processes that load the dynamic link library (dll) file. WHILE the compromise of zlib.dll will ONLY undermine the integrity of the data compression process. Thus, ntdll.dll has a greater impact and is more important than zlib.dll with respect to integrity. The community will greatly benefit from the knowledge of security importance of system objects. First, it will provide us a basis for devising fine-grained security policies to protect those most important objects. Second, it will help us assess the impact of a security accident by the importance level of the infected objects. Third, it will provide us a way of discriminating malicious processes from benign ones by examining their behaviors with security policies of security models, such as the Biba model (Biba, 1977). However, little previous work focuses on systematically assessing the importance of system objects from the security perspective.
We observe that the interactions between various system objects such as processes, files and registries lead to dependencies between their security attributes. For examples, a read operation makes the integrity of a process depend on that of a file. The integrity of the file may further depend on processes who write to it. As a result, the dependencies between security attributes of various system objects in a real system are interwoven. Different objects have different levels of security importance due to the different roles they undertake in the running of a computer system. This paper develops a networked approach to assess the security importance of system objects from a system-wide perspective. We construct a dependency network of system objects from observed access behaviors, and analyze their security importance utilizing information encoded in various network structures. Inspired by these observations and analyses, we then leverage several centrality metrics from network science (Newman, 2010) to assess the importance of system objects in the dependency network.
Furthermore, we propose a novel importance based malware detection method as a validation of the proposed importance metrics. We construct importance metric based behavioral profiles to characterize access behaviors of processes, and leverage statistical learning techniques to discriminate malicious processes from benign ones without relying on human knowledge and involvement. Our experimental results demonstrate that our approach is capable of detecting 7257 malware samples from 27,840 benign processes at 93.92% true positive rate under 0.1% false positive rate, and further indicate the feasibility of our networked approach to importance assessment.
Our earlier work takes a preliminary step toward quantifying importance of system objects (Mao et al., 2014), in which we focus on developing new methods for malware detection based on PageRank centrality. However, there are still four important questions left unanswered:
•What are characteristics of system objects and their interactions from a connected and system-wide perspective?•What are connections between network structures and importance of system objects in security?•How to comprehensively evaluate a security importance assessment for system objects?•Why is it feasible to detect malware based on security importance assessment for system objects?
In this paper, we extend our earlier work by answering the above questions. In summary, the contributions and benefits of this paper are as follows.
•In-depth analysis of system-wide access behaviors via networked modeling. We construct a dependency network to encode security dependencies among process, file, and registry objects based on their interactions observed in access behaviors. This dependency network provides a system-wide view of the security dependencies between system objects. Meanwhile, we observe that this dependency network exhibits power-law degree distributions and small-world effect properties, which demonstrate the existence of system objects with different levels of security importance.•Network structure based importance assessment with respect to integrity. We define the importance of a system object with respect to integrity as the amount of influence it could have on the integrity of other system objects, if this object is compromised. Under this definition, we study the importance of system objects with respect to integrity within in-star, out-star, and chain structures. The security importance of a system object is quantified in terms of centrality, such as in-degree centrality, authority centrality, and PageRank centrality. We perform extensive evaluations of the importance metrics by investigating the convergence of importance metric over time, and conducting various analyses on ranking positions of system objects under the importance metric to demonstrate the feasibility.•Importance metric based malware detection. According to the classical integrity policies, “no read down” and “no write up” (Biba, 1977), we study the behavioral differences between benign and malicious processes under different importance metrics with respect to integrity. The observed behavioral differences demonstrate the feasibility of importance metric based malware detection. We leverage statistical learning techniques to discriminate malicious processes from benign ones without relying on human knowledge and involvement. Performance analysis of our malware detection method further demonstrates the feasibility of our networked approach to security importance assessment.
The remainder of this paper is organized as follows. We review related work in Section 2. Section 3 presents data dependency relationships and the dependency network. Before presenting our approach to malware detection in Section 5, we introduce centrality based importance metrics in Section 4. Section 6 presents our experiments and evaluation results. Section 7 discusses possible extensions and limitations. Finally, Section 8 concludes.
