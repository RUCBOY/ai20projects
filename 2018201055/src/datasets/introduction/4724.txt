Exams play a key role in assessing skills and knowledge of people, hence they are indispensable to bring meritocracy in modern societies. The idea of using exams as a procedure to eliminate favouritism and corruption for personnel selection came to the West in the 17th century (Kazin et al., 2009). Nowadays, exams are extensively used in various situations, for example in universities for admission and progression of students to a degree, in non-profit organisations to certify professional qualifications, and in the work sector for recruitment and promotion.
An exam is a complex procedure that begins with the appointment of examiners and concludes with the notification of the results. Ideally, every step of such a procedure should resist any misbehaviour so that people could trust the exam system, and society could truly achieve meritocracy. However, the participating principals may be corrupted, and so they may commit misconducts that are hard to eradicate. Recent scandals confirm that administrators, as well as candidates, may misbehave (Flock, 2011, News, 2015, Watson, 2014), and the introduction of computers in the exam procedures has not reduced the trend (Liptak, 2014, Press, 2014), making the exam not necessarily more secure than it was.
Such scandals make people doubtful about exam procedures. We observe that current exams generally fail to recognise that every principal may profitably misbehave, as they are normally designed to only resist cheating candidates. In this paper, we advance a novel exam protocol that also considers misbehaving administrators and, therefore, we study the security of the protocol without assuming any trusted parties. The underlying idea of our protocol is to combine oblivious transfer and visual cryptography to allow candidate and administrator to jointly generate a pseudonym that anonymises the candidate's test. The pseudonym is revealed only to thecandidate at the beginning of testing. We analyse the protocol formally in ProVerif (Blanchet, 2001) and prove that it meets a wide set of security requirements, even with the presence of corrupted administrators. We believe that by removing this additional layer of trust in the design and analysis of exams, we foster their trustworthiness and contribute to people's confidence in the exam practice in general.
We extend a conference paper of ours (Bella et al., 2015) by extending and updating the security requirements, by updating the formal definitions, and by redesigning our protocol to meet the novel set of requirements. More in detail, this article provides the following novel contributions that exceed the conference paper:
•It extends the list of requirements with Mark Authentication, which is unpublished.•It further extends the list of requirements with Test Authenticity, Anonymous Examiner and Test Integrity Verifiability using existing definitions (Dreier et al., 2015).•It updates the formal definition of requirement Mark Authenticity so that appropriate authentication requirements now cover all the phases of an exam.•It provides a novel graphical representation of the authentication requirements with their coverage of all protocol phases.•It updates the formal definition of requirement Dispute Resolution so that the scenario with both administrator and candidate being corrupted is admitted.•It presents a novel set of 15 requirements derived from the 11 published ones (Bella et al., 2015) by the extensions and updates outlined above and by rewriting otherwise towards consistency of style and readability.•It updates several parts of the exam protocol to meet the novel set of requirements.•It updates the examiner role by partitioning it as administrator, examiner and invigilator roles so that both protocol design and analysis gain detail.•It redesigns the Testing Dispute Resolution algorithm to meet the new definition of Dispute Resolution.•It proves by ProVerif that the updated exam protocol meets the novel set of requirements.
1.1. OutlineThe paper is organised as follows. Section 2 analyses some related work. Section 3 details the list of security requirements and their formalisation. Section 4 describes the protocol. Section 5 details the formal analysis of the protocol in ProVerif. Finally, Section 6 draws future work and conclusions.
