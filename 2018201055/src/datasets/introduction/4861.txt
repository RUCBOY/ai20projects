Today’s automotive industry is concerned with much more than the traditional view of assembled mechanical parts controlled by a human for transportation. During the past twenty years vehicles have become more and more robot like, interpreting and exploiting input from various sensors to make (semi-)autonomous decisions and finally commit actions that were previously made by humans.
Accordingly, the role of software is continuously changing. Initially, it was introduced in cars to optimize the control of the engines. Since then, the growth of software within the car has been exponential for each year and today not a single function is performed without the involvement of software. 80%–90% of the innovation within the automotive industry is based on electronics [1], as mentioned for instance by Peter van Staa - Vice-President Engineering of Robert Bosch GmbH at the European Technology Congress in June 2014 [1]. A big part of electronics is software.
Considerable parts of the software is safety-critical, with human life at stake if the system is not performing as expected. Thus, the focus is gradually switching over from human control of the mechanics to software and electronics supporting decision-making and even taking over the control. The development is similar to the more popularized history of air plane development and the invention of auto pilots and “fly by wire”, with some striking differences. The higher complexity of the environment where the vehicle moves has slowed down the development of automated vehicle control. The most advanced cars have more or at least comparable amounts of software than fighter airplanes.1 Vehicles are also produced in higher volumes than airplanes, which puts harder requirements on the technology cost.
This evolution of the automotive industry creates new challenges regarding the electrical and software architecture development and maintenance. The architecture of a modern car has to cope with a large amount of concerns, including safety, security, variability management, networking, costs, weight, etc. Also, the increasing amount of people involved in the software development projects imposes additional challenges to the architecture teams, as the development and design literally cannot be controlled, or even understood, in detail by a single group any more. The development is inevitably parallelized; this obviously also holds for the large amounts of externally developed software, which is integrated as black box functionality. The important integration work is done in an iterative manner by developers and test teams, focusing on vital systems first and then gradually establishing various functionalities. Architects might be not involved in integration, however, the architecture for sure influences the integration.
In this paper we report a current initiative of the Volvo Cars to renovate the electrical architecture. The work is part of a Vinnova FFI Swedish project, called Next Generation Electrical Architecture (NGEA),2 which mainly focuses on the following areas: (i) continuous integration and deployment; (ii) cars as constituents of a System of Systems; (iii) reducing the number of ECUs through an architecture that allows the identification of key functions to be implemented in domain nodes; and (iv) strategies to improve the automotive ecosystem so to enable rapid communication with suppliers and flexible development. The reason for the NGEA project to choose these topics were that they are strategically important for automotive industry and it is important to find a way of handling them. In this paper we largely extend beyond a short paper [2]: the paper in [2] only sketches preliminary results.
Within the project we are investigating the possibility to create a Volvo Cars Architecture Framework. We believe that an architecture framework [3], together with its multiple viewpoints, is the instrument to manage the increasing complexity of modern vehicles. It aims at ensuring that descriptions of vehicle architectures can be compared and related across different vehicle programs, development units, and organizations, thus increasing flexibility and innovation, while reducing development time and risks. However, the definition and description of an architecture require a cost in terms of human and financial resources. Moreover, sometimes it is not evident that investing effort and money on properly defining and describing the architecture will result in saving money later in the development. For instance, as described later in the paper, we identified discrepancies between the as-intended and the as-implemented architecture. This motivates the shift towards “just-in-time” architecting and on continuous integration and deployment.
We build on existing architecture frameworks in the automotive domain, i.e., [4], [5] and we base our work on the conceptual foundations provided by the ISO/IEC/IEEE 42010:2011 standard [3]. The standard addresses architecture description, i.e. the practices of recording software, system and enterprise architectures so that architectures can be understood, documented, analysed, and realized.
The paper is organized as follows. Section 2 introduces the concept of architecture framework and explain a template to document architecture frameworks. Section 3 gives an overview of the state of the art on architecture framework in the automotive domain. Section 4 analyses the state of practice in the context of Volvo Cars and reports some of the lessons learned. Section 5 introduces the architecture framework we are defining within Volvo Cars in the context of the NGEA project, including an overview of stakeholders as well as critical scenarios that define demands and expectations towards the architecture framework. Sections 6–8 detail three new and challenging viewpoints of the framework, namely the Continuous Integration and Deployment viewpoint (Section 6), the Ecosystem and Transparency viewpoint (Section 7), and the System of Systems: vehicle point of view viewpoint (Section 8). Finally the paper concludes in Section 9 with final remarks and a discussion about future work.
