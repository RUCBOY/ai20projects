Watershed models have been extensively used by researchers and decision-makers to understand how hydrological and ecological processes, human activities and climate-change affect water resources (Li et al., 2013). SWAT (Soil and Water Assessment Tool) is one of the most widely used watershed models for physically based studies of the Earth and of water resources and environmental management around the world (Arnold et al., 1998). It has been applied for cross-disciplinary research and applications in recent years (Ki et al., 2015, Neitsch et al., 2011, Pai et al., 2012, Zhang et al., 2015). Scholars from around the world have been devoted to developing and applying SWAT.
Numerical models such as SWAT are today not only applied for single scenario tests but also for complex assessments like sensitivity analyses, uncertainty analyses, and data assimilation (Rajib et al., 2016, Xie and Zhang, 2010). Most of these applications require considerable amounts of computational time to use. To save the model users' time spent on model runs or calibrations, a parallel feature (a high-performance computing method) has been successfully integrated into most numerical models (Ki et al., 2015, Li et al., 2011, Vrugt et al., 2006, Yalew et al., 2013, Zhang et al., 2013). From the rapid development of computer technologies, computers now contain many Central Processing Units (CPUs), and each CPU includes several cores (threads) that can execute computational tasks simultaneously. A key issue to consider when programming a parallel model on a distributed or shared memory system involves balancing data across memory and computation units over CPUs (Chapman et al., 2007, Palis et al., 1996). To address this issue, two parallel computing approaches are typically applied when using the SWAT model: (1) Distributed memory parallel (DMP). DMP is a computer system in which each CPU is given its own individual memory. Rouholahnejad et al. (2012) proposed the SWAT-CUP tool for model uncertainty analysis using a Message Passing Interface (MPI) parallel algorithm for DMP. Zhang et al. (2012) developed a software program for optimizing SWAT that can accelerate SWAT optimization by roughly eight-fold on a 16-core SMP system. Though the efficiency of the calibration procedure has in turn been improved, SWAT modeling time was not decreased through the above studies. Wu et al. (2013) employed MPI to parallelize SWAT based on subbasin level to speed up individual model runs and manual and automatic calibration procedures and to optimize best management practices on a DMP system. (2) Shared memory parallel (SMP). SMP is a system through which all CPUs can access the same memory and benefit from low-latency memory-access while sharing data among CPUs during computation. OpenMP (Open Multi-Processing) is one of the most suitable APIs for software parallelization on an SMP system. The use of OpenMP for enhancing the computational efficiency of a single SWAT run (especially for parameter calibration procedures) has been previously discussed (Ki et al., 2015). OpenMP is highly scalable for model applications. Each hydrological model must be employed through a distinct parallel computing strategy and based on its own modeling structure.
The objective of this paper is to describe the parallel method (OpenMP) as it is implemented in the gridded SWAT (SWATG). We compare the computation time of the parallel SWATG by applying it to study a basin with at different spatial resolutions over different periods using different computer configurations. Finally, we summarize the performance of the parallelized SWATG and computation time saved through parallel processing. Source codes of SWATG and SWATGP are listed on the first author's website: http://hexiayouxi.tk.
