Partitioning problems on graphs get increasing attention in the literature. Here the task is to partition the node set of a given (weighted) undirected graph, so that the number (or weighted sum) of connections between the parts is minimized. A special case is the Max-Cut problem, which asks for a node partition into two sets, so that the sum of the edge weights in the cut is maximized. The problem is getting increasing attention in the literature, since it is directly related to solving Ising spin glass models (see, e.g., Barahona [3]), which are of high interest in physics. Besides the theoretical merits, Ising spin glass models need to be solved in adiabatic quantum computation [25]. Other applications occur in the layout of electronic circuits [6], [11].
The Max-Cut problem has been shown to be NP-hard for general graphs [20]. Papadimitriou and Yannakakis [30] have shown that the Max-Cut problem is even APX-hard, i.e., there does not exist a polynomial-time approximation scheme, unless P=NP. Goemans and Williamson suggested a randomized constant factor approximation algorithm [14], which has been derandomized by Mahajan and Ramesh [24] and has performance guarantee 0.87856.
In the unweighted case, i.e., all weights are one, the problem is also called the simple max-cut problem or the maximum bipartite subgraph problem. It is well known that in this setting always a cut of size at least |E|/2+(|V|−1)/4 exists that can be computed in linear time (see, e.g., [32]). This bound is called the Edwards-Erdős bound and is tight for odd cliques. Recently, Etscheid and Mnich [12] have suggested an algorithm for the Max-Cut parameterized above Edwards–Erdős bound problem thus improving a result by Crowston et al. [8]. This problem asks if G has a cut exceeding the above bound by an amount of parameter k.
There are a number of special cases, for which the weighted max-cut problem can be solved in polynomial time. The most prominent case arises if the weights of all edges are negative, since then the problem can be solved, e.g., via network flow. Other special cases are, e.g., graphs without long odd cycles [15] or weakly bipartite graphs [16]. Another prominent case appears for planar input graphs. Orlova and Dorfman [28] and Hadlock [17] have shown that the Max-Cut problem can be solved in polynomial time for unweighted planar graphs. Their algorithms can be extended to work on weighted planar graphs (e.g., Mutzel [27]). The currently fastest algorithms have been suggested by Shih et al. [31] and by Liers and Pardella [23]. These results have been extended to the classes of graphs not contractible to K5 [5] and to toroidal graphs [4], [13], i.e., graphs that can be embedded on the torus.
A graph is 1-planar if it can be drawn on the plane, so that every edge is crossed at most once. While planarity testing can be done in linear time [18], the recognition problem for 1-planar graphs is much harder. Korzhik and Mohar showed that 1-planarity testing is NP-hard [22]. However, there are fixed-parameter tractable (FPT) algorithms parameterized by the cyclomatic number (the minimum number of edges that must be removed from the graph to make a forest), the tree-depth or the node cover number [2]. For 1-planar graphs these algorithms construct a 1-planar embedding.
Our contribution  Given an embedded weighted 1-planar graph with k crossings, we introduce two fixed-parameter tractable algorithms for the Max-Cut problem with parameter k. The first algorithm calculates a weighted Max-Cut on graphs with non-negative edge weights2 and the second on graphs with arbitrary edge weights. The main idea of our algorithms is to recursively reduce the input graph into a set of at most 3k planar graphs using a series of edge removals and node contractions. The planar instances can then be solved using the polynomial time algorithm suggested in [23] with running time O(n3/2log⁡n) for a planar graph with n nodes.
The paper is organized as follows. Section 2 contains the basic definitions concerning cuts and 1-planarity. We also introduce the class of k-almost-planar graphs, which admit a 1-planar drawing not exceeding k crossings. In Section 3 we present our weighted Max-Cut algorithm for embedded 1-planar graphs with non-negative edge weights and prove its correctness. In Section 4 we give a counter example to show the first algorithm might fail on graphs with negative edge weights. Therefore a variant of our algorithm is introduced in Section 5. The second algorithm is proven to solve the weighted Max-Cut problem on embedded graphs with arbitrary edge weights. Our analysis of the running times shows that both algorithms are fixed-parameter tractable with parameter k. We end with a conclusion and open problems in Section 6.
Follow-up work  In follow-up works Chimani et al. [7] and Kobayashi et al. [21] extended our algorithm to solve the weighted Max-Cut problem on arbitrary graphs. Using different techniques, both results improve the running time of the algorithm to O(2k(n+k)3/2log⁡(n+k)), where n is the number of nodes and k is the number of crossings in a given embedded graph. Furthermore Chimani et al. [7] show that Max-Cut is fixed-parameter tractable with respect to the crossing number, even without a given embedding.
