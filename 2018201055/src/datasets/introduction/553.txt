In 1964 Hironaka already investigated computational approaches towards singularities and introduced the notion of standard bases for local monomial orders,1 see, for example, Hironaka, 1964a, Hironaka, 1964b; Grauert (1972). In Buchberger, 1965, Buchberger, 2006, Buchberger initiated, in 1965, the theory of Gröbner bases for global monomial orders by which many fundamental problems in mathematics, science and engineering can be solved algorithmically. Specifically, he introduced some key structural theory, and based on this theory, proposed the first algorithm for computing Gröbner bases. Buchberger's algorithm introduced the concept of critical pairs and repeatedly carries out a certain polynomial operation (called reduction).
Many of those reductions would be determined as “useless” (i.e. no contribution to the output of the algorithm), but only a posteriori, that is, after an (often expensive) reduction process. Thus intensive research was carried out, starting with Buchberger, to avoid the useless reductions via a priori criteria, see, for example, Buchberger, 1979, Buchberger, 1985; Gebauer et al. (1988).
Once the underlying structure is no longer a field, one needs the notion of strong Gröbner bases resp. strong standard bases. Influential work was done by Kandri-Rody and Kapur (1988), introducing the first generalization of Buchberger's algorithm over Euclidean domains computing strong Gröbner bases. Moreover, Pan introduced the notion of D-bases of polynomial ideals over principal ideal domains, see Pan (1989). Since then only a few optimizations have been introduced, see, for example, Wienand (2011); Lichtblau (2012); Eder et al. (2017).
In this paper we introduce several new optimizations to the computation of strong standard bases over Euclidean domains. In Section 2 we give the basic notation and introduce the idea of a reduction step, generalized from the field case. We state Buchberger's algorithm over Euclidean domains for global and also for local monomial orders. Section 3 discusses different variants of how to handle S-polynomials and GCD-polynomials, especially generalized variants of Buchberger's product and chain criterion. Over Euclidean domains like the integers, coefficient swell and the missing normalization of the lead coefficient play an important role when it comes to practical and efficient computation. Modular computation is not possible in general, but we give a new attempt for keeping coefficients small in Section 4. In Section 5 we finally give an in-depth discussion on the normal form computation which provides various attempts like lead term reductions and lead coefficient reductions. This, again, helps to keep coefficients small and minimizes the number of polynomials in a basis which have the same leading monomial by applying efficient gcd computation. We have done a new implementation of Buchberger's algorithm in the computer algebra system Singular. In Section 6 we compare our implementation with Macaulay2 and Magma, exploring the impact of the above ideas with some interesting results.
