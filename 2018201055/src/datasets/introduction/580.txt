The smart factory is a Cyber–Physical System (CPS) defined as a digitalized, intelligent, sustainable IoT-based manufacturing system capable of improving total industrial production performance and quality [1], [2], [3], [4], [5], [6]. Smart factories are the 4th generation of the industry [2], [7], and have the following characteristics [8]: the components of the manufacturing system are networked, and it is possible to collect useful data from them in real-time (included the component’s state); autonomous and automatic processes can be executed based on optimized manufacturing plans; advanced manufacturing services can be provided on the shop floor (cf. Fig. 1) and to external systems. Those characteristics are realized by integrating data, artificial intelligence, virtualization technologies, and distributed computing technologies with physical components and industrial processes [2], [4], [7]. Making a factory smart brings many benefits [2], [7], [9] but also increase cyber risks [10], [11], e.g., financial loss due to production downtime, impairment of products’ quality (e.g., injection of faults and micro-defects in the production [12]), harm to humans and physical/environmental damage. Because of the interconnection of heterogeneous control systems, from production planning and scheduling to shop floor control, the smart factory attack surface is wider than in the 3rd generation industry [11]. Malware like Mirai, Stuxnet, Triton, Dugu, Havex/Dragonfly could be used to control industrial IoT devices and control systems [10].
Although there are many research results aiming to improve the security of CPS (e.g. [13], [14], [15], [16], [17], [18], [19], [20], [21]), none of them propose solutions that goes beyond the traditional cyber-security approach, i.e., semi-automatic human-assisted detection and response [22], based on complex security policies. The traditional approach is impractical in smart factories for the following reasons: an attack can target thousand of controllers; the human in the loop can compromise the high availability requirements (i.e., unforeseen disruption of production services); IoT devices used in the control process have limited resource capability and cannot run complex security mechanisms, like traditional Intrusion Detection Systems (IDS). Therefore, it is crucial to investigate innovative self-protection mechanisms to increase resiliency to cyber-attacks targeting the control logic of industrial Control Applications (i.e., the software implementation of a controller) running on resource-limited devices [23].
The solution we propose, named Asynchronous Modular Verification (ASiMOV), is a self-protection mechanism [24], [25], [26] for industrial control applications capable of detecting and reacting to attacks that modify the control logic outputs. ASiMOV includes an IDS with ideal accuracy performances (no false positives or negatives) and response mechanisms that automatically restores a clean instance of the control logic. Our solution is inspired by Triple Modular Redundancy (TMR) [27] and realizes unsupervised behavior-specification-based detection [28].Download : Download high-res image (251KB)Download : Download full-size imageFig. 1. The smart factory: actors, control levels and cyber risks.
ASiMOV enhances the state-of-the-art literature by proposing a self-protection mechanism that:

•does not require knowledge about attack signature, or training on historical attack traces or human-assisted decisions; and•applies to any CPS that includes control applications and specifically to cloud-based industrial control systems like in works [29], [30], [31], [32], [33].
This paper extends our previous works on the subject [34], [35] as follow:

•the cyber-attack detection model initially proposed in [34] is extended and described in-depth;•we propose a model to analyze the delay introduced by ASiMOV in the control loop and the time to detect an attack. The delay analysis is fundamental to understanding what kind of processes can be controlled with ASiMOV, the limitations of ASiMOV, and what challenges should be addressed for further improvements;•the ASiMOV software architecture designed in [35] has been implemented in a Matlab simulator that allows evaluating the effects of an attack on a control system enhanced by ASiMOV, the delay introduced by ASiMOV within a control loop, and the cyber-attack detection delay.
The paper is organized as in what follows. Section 2 describes the research problem and gives an overview of the proposed solution. The model and the architecture of a verifiable control application is presented in Section 3. The cyber-attack detection mechanisms are introduced in Section 4. Section 5 describes the proposed mitigation and prevention mechanism. Section 6 describes an implementation of ASiMOV. Sections 7 shows how ASiMOV reacts to a simulated cyber-attack. The delay introduced by ASiMOV within a control loop and the cyber-attack detection delay are estimated through a model in Section 8. Section 9 provides a survey of related works. Section 10 concludes the paper. The Annex includes the pseudo-code of the proposed implementation.
