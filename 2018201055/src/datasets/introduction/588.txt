Given a point set vi∈V of N points in K−dimensional Euclidean space, the exact Euclidean Minimum Spanning Tree (EMST) problem is to find the lowest weight spanning tree in a complete un-directed graph G=(V,0̸), (v0,v1,…,vN−1∈V), with implicit N×(N−1)2 edge list E and edge weights given by the Euclidean distance between any two points. A general minimum weight spanning tree (MST) is defined as: given a general weighted un-directed graph G=(V,E) with N vertexes and explicit edge list E, finding a subset of E that connects all vertexes without any circles and with minimum total edges’ weight [1]. A minimum spanning forest (MSF) consists of local MSTs on each of the connected graph components of that graph G. A connected component (or just component) of an un-directed graph G is a sub-graph of G in which any two vertexes are connected by a finite or infinite sequence of edges [1], [2].
MSF/MST is widely used in computer vision, pattern recognition and data mining applications, for example, researchers have applied MST to stereo matching and achieved top ranking result on Middlebury [3], [4]; MSF consisting various small MSTs naturally forms data clusters of an input [5], [6], [7], like image segmentation [8], [9]; an exact MST also provides upper bound for tour length estimation of traveling salesman problems [10]. In cases when the input only contains independent Euclidean points, building MSF/MST becomes EMSF/EMST problem. Furthermore, with the development of big data and edge-computing in real 3-dimensional world [11], some applications require the ability to deal with big 3D data in real-time on graphics processing unit (GPU). This further requires the capability to build large-size 3D MSF/MST in real-time.
Three classical MST algorithms like Borůvka’s [1] (see [12] for translation), Kruskal’s (1956) [13] and Prim’s (1957) [14] algorithms establish the basis of MST implementations. They all work sequentially on standard general graph with predefined distance matrix (or edge list), and take quadratic time complexity. The best time complexity for a sequential general MST solution is proposed by Bernard Chazelle [15], and it takes O(Eα(E,V)) where α is the functional inverse of Ackermann’s function. However, it is time-consuming to apply these general MST algorithms to build 3D EMST on the implicit complete graph G=(V,0̸) whose N×(N−1)2 edge list E is unprepared and N is large.
Very few approaches directly address exact EMSF/EMST, except for some efficient sequential algorithms like these algorithms using Delaunay triangulation [16], Voronoi diagram [17], K-d tree [18], dual tree [6], and a GPU parallel algorithm using sliced spiral search [2]. They mainly take advantage of the nearest neighbor search (NNS) [19] in Euclidean space since geometrically closest pair of points naturally satisfy the definition of MST [6], [18], [20]. While, when considering the 3D or higher K-d EMSF/EMST, previous solutions become even more rarer, the most recent optimal sequential EMST algorithm is the dual-tree EMST proposed by March et al. [6].
It is not an easy trick to make an integral GPU parallel 2D/3D EMSF/EMST algorithm and get actual computing acceleration over state-of-art sequential K-d EMSF/EMST algorithm. This is because building K-d EMST is an iterative procedure including K−d NNS, tree traversal, and other graphical operations. Parallelism of each sub-step should obey the characteristic of “data parallelism, decentralized control, and O(1) local memory occupied by each GPU thread” in order to highly utilize the capability of NVIDIA GPU card series. Also, frequent data transfer between CPU and GPU is time-consuming. To our best knowledge, we do not find in literature other researchers’ GPU parallel solutions to 2D/3D EMSF/EMST problem.
