Unlike, password or token authentication systems, a biometric authentication system (BAS) is more flexible for users since they do not need to carry or remember anything. Fingerprint, iris, face etc. are the commonly used biometric modalities. Biometric modalities are used to provide security on the Internet of Medical Things based remote health-care systems [1]. The properties like stability and uniqueness make the iris to be mostly used in various applications when compared to other biometric modalities [2].
The iris recognition system includes two phases, namely the enrollment and identification/verification phases. The iris template obtained from a reference iris image is stored in a centralized server during the enrollment phase. In authentication phase, the iris template obtained from the probe iris image is compared with the iris templates stored during enrollment phase. As the biometric data is unique to a person, it is irrevocable if it gets compromised. Studies such as [3], proved that an iris image could be reconstructed from its template. The unauthorized access to biometric templates results several attacks like hill-climbing attack, replay attack, masquerade attack, and stolen-token attack. For instance, in 2018, hackers stole 1 billion Indian user’s biometrics of Aadhaar. Homomorphic Encryption (HE) is used as a template protection scheme to ensure the privacy & security to iris templates [4]. HE is categorized into Partial HE (PHE), Somewhat HE (SHE), and Fully HE (FHE). FHE offers to perform unlimited multiplications & additions on the encrypted data. SHE offers to perform a limited number of addition & multiplication on the encrypted data. PHE offers to perform either multiplication or addition but not both on the encrypted data.
The early secure biometric authentication system was designed in an outsourced environment by Sedenka et al. [5]. Haghighat et al. [6] suggested a biometric verification in a cloud environment. The method used a searching-based matching instead of distance-based matching. Xiang et al. [7] introduced a secure face recognition with computation in a cloud server by using public key encryption & fully homomorphic encryption algorithm. Gomez et al. [8] discussed a template protection approach for multi-biometric recognition using Paillier method. The final comparison was performed on the unencrypted data by the server; as a result, introduced a breach into the security of the system. A light-weighted encryption scheme named “Threshold Predicate Encryption (TPE)” was proposed by Zhou et al. [9]. A privacy-preserving user-centric biometric authentication system (PassBio) was proposed by using TPE. Barni et al. [10] introduced a secure multi-modal biometric authentication (“SEMBA”), which combines face & iris templates. The above methods assume that the server is “Honest-but-curious”.
Machine learning techniques have been providing useful tools for solving a wide range of problems in multiple domains including computer vision, bio-informatics, biometric recognition and many more. Since last decade, machine learning algorithms are used to detect, segment and recognize the irises effectively. Rai et al. [11] suggested a method to identify the iris patterns by using support vector machines (SVM) and Hamming distance. Authors proposed two feature extraction techniques, namely 1D Log Gabor wavelet and Haar wavelet decomposition. An iris recognition system was proposed by Ahmadi et al. [12] to increase generalization performance by using particle swarm optimization & multi-layer perceptron (MLP). The authors extended their work in [13] by using radial basis function (RBF) with a genetic algorithm to reduce the computational complexity. A deep learning model was designed by Arsalan et al. [14], to determine the exact iris region without pre-processing the eye image. Unlike existing approaches, the performance is not affected by non-ideal situations. Zhao & Ajay [15] used fully convolutional network and proposed a framework for accurate iris detection, segmentation and recognition. Authors developed an “Extended Triplet Loss (ETL)” function to learn the spatially corresponding features of an iris image.
The emergence of machine learning as a service originates the privacy dilemma. According to this dilemma, either the model is known to the user or the user’s private data is revealed to the entity, which evaluates the machine-learning model. Training and testing are the two phases involved in machine learning classification (MLC) task. The algorithm learns a model w using a set of labeled instances in the training phase. A classifier C is run over a new feature vector x, using the model w to output a prediction C(x,w). Private machine learning classification (PMLC) is a method, in which both training & testing takes place on encrypted data. FHE, which supports homomorphic operations on encrypted data without decryption, contributes to MLC without leaking user privacy, especially in the outsourcing scenario. Recently, various PMLC schemes have been constructed [16], [17] which can perform MLC on encrypted data but fails to attain both Privacy-preserving (PP) training as well as PP classification at the same time.
Most of the existing BASs based on HE assume a “Honest-but-Curious” server to provide privacy for biometric templates. Therefore, the existing methods only solve the modify templates attack of BAS and fail to overcome the override comparator attack of BAS. On the other hand, most of the existing MLC methods on encrypted data provides either PP training or PP classification but not both. In BAS, it is essential to conduct training & testing on encrypted iris templates to provide the privacy of both iris templates and the model. Therefore, in this paper we construct a method which do not compromise privacy of templates and provides privacy and trust to the classification result. The main contributions of our method are listed below:

•We propose a secure and verifiable machine learning-based iris authentication system (SvaS), which performs PP training, PP classification and eliminates the need to trust the centralized server.•We propose private nearest neighbor (PNN) and private multi-class perceptron (PMCP) algorithms to perform both training and classification phases on encrypted data.•SvaS includes a verification procedure to verify whether the classification result computed by the cloud server is correct or not. The verification procedure allows a public verifier to validate the result without using the private information of the user.•SvaS solves the attacks like modify templates, intercept channel and override comparator in BAS.•We show the effectiveness of SvaS by experimenting it on publicly available benchmark iris databases.
Organization The rest of the paper is organized as follows. Section 2 presents a system to authenticate the user using PNN and PMCP. Section 3 illustrates the implementation details and experimental results analysis. The conclusion and future scope are given in Section 4.Table 1. Notations used in SvaS.ParameterDescriptiona, n, qModulus in the plaintext space, A power of 2, Modulus in the ciphertext space.xn+1The polynomial modulus which specifies the ring R.RThe ring Z[x]/(xn+1).RaThe ring Za[x]/(xn+1) i.e., same as the ring R but with coefficient reduced modulo a.ωA base into which cipher text elements are decomposed during relinearization.dDimensions of the feature vector i.e., iris template.NNumber of reference iris templates i.e., training instances.cNumber of classes i.e., subjects.δe,δdPublic & secret keys.{Xi}i=1NReference iris template with d dimension.YProbe iris template.{wi}i=1cWeight vectors.Enc(δe, X)The encryption of X with δe.ε(a)Encrypted value of a.ε(Zn+1)Encrypted verification vector generated by authentication server. The dimension of ε(Zn+1) is same as reference template.ε(vi)Encrypted random integer.ε(R)Computed Manhattan distances in the case of nearest neighbor (NN) and dot products in the case of multi-class perceptron (MCP).idIdentifier of the end-user.lClass label of the training instance.
Download : Download high-res image (467KB)Download : Download full-size imageFig. 1. Block diagram of SvaS. The model is only accessible to the server and the input i.e., iris code is accessible only to the client in both the training and testing phases.
