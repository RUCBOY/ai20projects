Over the last decade, On-line Social Networks (OSNs) reached a more and more increasing popularity, becoming a part of every-day life. Just observing what happens every day, millions of people use OSNs to inform friends about important events or to share information within social communities. In particular, microblogging platforms (i.e., Twitter and Snapchat) constitute nowadays the most natural environments where people can continuously report real-life events and share information, personal feelings and sentiments about public or private facts. In addition, the combined use of multimedia (still images, audio, videos) has given a new way of such information spreading, due to the old idiom that an “image is worth a thousands words”.
OSNs and microblogs represent an important origin of information concerning events happening in a given location/country during a certain time period. Reporting those events could provide different perspectives to news items than traditional media due to re-forwarding what read in other posts by adding some personal opinions [1], and also valuable user sentiment about companies/products or a mean for alerts diffusion and emergency situations’ management in a geo-referenced area.
We are witnessing a vast amount of data being exchanges on OSNs, most of them containing replicated information with a light difference among themselves, and single users have the difficulty to follow all of them, with the risk of missing valuable data. It is of pivotal importance to reduce such a redundancy by grouping similar tweets/posts by reporting to the users their salient features (i.e., their most recurrent or important words), expressing the events that have originated them. Such an operation can be done off-line, by collecting a vast of data being exchanged within OSNs and processing them so as to obtain a report to be presented at the user, or on-line, so as to continuously show events to users as the stream of tweets/posts is happening. From the user perspective, the latter approach is more useful as it lowers the latency to get aware of something happening. As an example, OSNs are recently being proposed to detect natural disasters before any public announcements from the authorities, so as to quickly put in place escape plans for the involved population [2].
The basic assumption is that some related words would show an increase in the usage when an event is happening. An event can be thus conventionally represented by a number of keywords showing burst in their appearance count over a tweet/post stream [3]. This is due to the fact that events can cause an information spread over a social community, when users start to share a given tweet or post containing the events itself, by adding some personal opinion or rephrasing the original event content. Thus, it is easy to infer when an event may happen, at it is possible to see a sudden and unpredictable happening of a massive spreading of semantically related tweets/posts over the network within a limited life time, where mostly all of them contains the same number of similar words, or their synonymous. Therefore, event detection is realized by conducting a clustering or linguistic pattern recognition of collected/streamed posts/tweets based on the shown equal/similar words and/or syntactical expressions within them, and returning to the user the clusters with a considerable number of elements (i.e., over a given threshold). There is a relationship between event detection and tweet categorization [4], as tweets need to be clustered and classified, and the content shared among the cluster member can be extracted as representative of the event described by all the clustered tweets. It is therefore possible to conduct the categorization and classification and then realize the event detection, but in this work we preferred to perform both operations at the same time, by driving the classification based on the content similarity of the tweets. Despite in other works, such as [4], [5], tweet classification is done by combining content and structural knowledge, we have preferred to only focus on the tweet textual representation. This is due to the fact that for event detection the underlying topological information of tweets does not represent key knowledge we can exploit; on the contrary to other applications of tweet classification, such as opinion propagation, where such structural knowledge is of upmost importance to study the phenomenon of interest. However, our approach is generic and it can be integrated with a structural content pipeline as done in [4].
Despite limiting the focus of the approach to only nouns and verbs and stemming them to obtain their root, it is hard to return clusters that are meaningful for the users, or the overhead to perform such a task may result unsuitable for an online execution. The current literature has leveraged on the Artificial Intelligence, Statistics, Natural Language Processing, and Big data Analytics for event detection, proposing approaches based on the detection of pre-defined events, or arbitrary events (alternatively defined as supervised and unsupervised detection). Despite pre-defined event detection is simpler to realize, its concrete applications are limited. The arbitrary event detection is more appealing as the approach learns autonomously the events happening within the OSNs, without any pre-configuration. An other classification is among off-line and on-line approaches. On the one hand, the first kind of approaches is based on the storing of tweets/posts within the cloud, and its consequent processing at the end of the day, or month (in the first case). On the other hand, the second class of approaches typically defines a small collection period, which is only some seconds and based on the spreading rate of the streams, and a fast processing for event detection.
The off-line approaches are easy and straightforward to implement by considering the widely known solutions of big data analytics, but implies a considerable delay of the detection time with respect to the event happening. The on-line approaches provide timely results, but may exhibits a lower accuracy than the previous ones, and are tougher to be implemented. Typically off-line approaches are unsupervised, while on-line ones are supervised. This is because the off-line approaches hold the overall view of the exchanged tweets/posts, are equipped with suitable computing resource and do not have any time restrictions, so to be able to look for arbitrary events. On the contrary, on-line approaches needs to fast return a result and have a limited view of the streams (only within the batch), so that they are typically pre-configured with the events of interest to be detected. Such a state-of-the-art literature poses limitations on the applicability and potential impact of such a technology, so it is important to achieve on-line approaches able to detect arbitrary events.
In this paper, we propose a novel solution for real-time detection of events in Twitter, based on the application of information filtering and clustering techniques by adapting the evolutionary clustering in [6] to face the requirements of on-line tweet clustering. Basically, a series of rules to filter the tweets are proposed so as to pre-process them and remove possible noise factors that can compromise the event detection, such as hashtags, retweets and mere syntactic sugar. Afterwards, the tweets are used to fill in a micro-batch and execute clustering. The literature on clustering is extremely vast, and its application to tweets and/or posts has been extensive in the recent decade. However, those related to arbitrary event detection to be run in real-time are limited and exhibit inadequate performance. Our driving idea is to model the overall clustering task as a evolutionary non-cooperative game [6], where players pick an item from the micro-batch or release one based on the reward they can achieve as a measure of item similarity, and the equilibrium is obtained when all the players have the same item selection, expressing a cluster. The evolutionary operators are integrated so as to study the strategy spreading within the population of players and reaching a stable state equilibrium within it (no external strategy can affect the population by bringing one of its individuals to change its strategy with the external one). Such an approach has been favored as the application of evolution brings in the game an indirect form of cooperative behavior, resulting into higher quality levels and lower price of anarchy and distance to the Pareto front of the optimization problem underlying the clustering [7]. Such a proposed work has been implemented within the context of a typical Big Data analytics platform as Apache Cassandra and the Kappa architectural model and assessed with two realistic data-sets obtained from Tweeter, exhibiting higher accuracy and latency than its competing related works.
The paper is organized as in the following. Section 2 describes and analyzes the existing literature on the topic of event detection within the context of OSNs, by indicating their drawbacks. Section 3 presents in details the proposed pre-filtering and clustering approach, while Section 4 illustrates the realized proof-of-concept and its consequent assessment to highlight the achievable performance. We conclude the paper in Section 5 with some final remarks and a plan for future work.
