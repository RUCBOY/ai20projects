Motivated by application in image processing, in [19] the small inductive dimension ind of Alexandroff T0-spaces is investigated. As main result it is shown that the dimension ind(X,T) of an Alexandroff T0-space (X,T) equals the height of the specialisation order of T. This work is continued in [2], [10], [11], [12], [13], [14], [15], thereby generalising it to Alexandroff spaces which are not T0-spaces and to the other two important notions of a dimension in topology. The latter are the large inductive dimension Ind and the covering dimension dim. Especially [2] contains a comprehensive investigation of the dimensions ind, Ind and dim for Alexandroff spaces and finite topological spaces. These dimensions are specified via the specialisation order of the topology of the Kolmogoroff quotient. This leads to algorithms for their computation which are, except that for the dimension Ind, of polynomial order in the size of the carrier set if the specialisation pre-order is taken as input. It also allows to clarify how the dimensions ind, Ind and dim are related. For finite topological spaces further consequences are sharp upper bounds for all three dimensions, characterisations of the maximal-dimensional spaces, how many such spaces exist in case of ind and dim and, if the number of points is odd, in case of Ind and whether they are homeomorphic and/or T0-spaces. The same problems are solved for zero-dimensional finite spaces, too, except the number of zero-dimensional finite spaces with respect to the dimension dim. Notice, that dim(X,T)=0 iff Ind(X,T)=0, for all topological spaces (X,T). Using order- and graph-theoretic means, meanwhile an efficient algorithm for the computation of the dimension Ind has been developed; see [3]. This result solves the first one of the three open problems mentioned above. The present paper treats the third one, the counting of the zero-dimensional finite topological spaces with respect to the dimension dim.
Section 2 presents the mathematical preliminaries. In Section 3 we specify the number zdimT0(n) of zero-dimensional (with respect to the dimension dim) T0-spaces on the set {1,…,n} by means of two mappings po and P that yield the number po(n) of partial orders on {1,…,n} and the set P(n) of partitions of {1,…,n}, respectively. In combination with the Stirling numbers of the second kind S(n, 1) to S(n, n), the numbers zdimT0(1) to zdimT0(n) allow a simple specification of the number zdim(n) of zero-dimensional (with respect to the dimension dim) arbitrary spaces on {1,…,n}. As Stirling numbers easily can be computed, an algorithm for zdimT0(n) immediately leads to an algorithm for zdim(n). The main part of the paper, Sections 4 to 7, is devoted to algorithms for zdimT0(n), their implementation in the programming language C and results of practical experiments.
First, we use our specification of zdimT0(n) and modify an algorithm of B. Djokić et al. (published in [4]) in such a way that it computes this number instead of the set P(n). This approach assumes the numbers po(1) to po(n−1) to be at hand. How to count partial orders on {1,…,n} is shown in [8], [9]. There also the values of po(1) to po(18) are given. To our knowledge up to now no number po(n) seems to be computed and published for n > 18. Using the data of [8], [9], we have implemented the modified algorithm in the programming language C. We present results (numerical data) of practical experiments with it for n ≤ 18. As for n=19 we expect a running time of almost two weeks, we have not tried to compute zdimT0(19) this way. To considerably reduce the running time of algorithms for zdimT0(n) that are based on our specification of zdimT0(n) via the numbers po(1) to po(n−1) and the mapping P, the use of a parallel algorithm for P(n) seems to be promising. Such an algorithm is presented in [5], again by B. Djokić et al. In view of easy realisability in C we take another approach. First, we develop a simple recursive backtracking algorithm for P(n). It is very similar to the algorithm published by M.C. Er in [7]. A modification, similar to that of the algorithm for P(n) of [4] to compute zdimT0(n), then leads to a recursive backtracking algorithm for zdimT0(n). Next, we optimise this algorithm by an incremental computation of the auxiliary array introduced in the second step. The algorithm obtained this way easily can be implemented and parallelised in C by means of the OpenMP library. As we will demonstrate by numerical data, with this C-program zdimT0(n) can be obtained significantly faster than with the sequential C-program that implements the above mentioned modification of the algorithm of [4].
