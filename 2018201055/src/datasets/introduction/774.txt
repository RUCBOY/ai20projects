As cloud computing technology rapidly develops, the number and scale of cloud data centers are expanding significantly. The high energy consumption of these centers raises concerns about power management. Finding an efficient power management scheme for lowering energy consumption has become a popular research direction in cloud computing. The energy consumption of cloud servers accounts for about 25% [8], [38] of the total energy usage of cloud data centers and 70% of their IT equipment energy usage. Reducing and optimizing the energy consumption of cloud servers is essential to achieving energy saving in cloud data centers. Power model is the basis of energy efficiency optimization scheduling for cloud computing [41], [20]. CPU power consumption constitutes around 30% of the total energy of cloud server [18]. Thus in this study the CPU power models of cloud servers are investigated. Some of the mainstream CPU power models are introduced below.
Fan et al. [9] proposed a one-dimensional linear power model based on CPU utilization and found a linear relation between CPU power and the cube of CPU operating frequency. However, Chung-Hsing et al. [14] observed that the power behavior of servers has changed significantly, through their study of the 177 samples published by an industry-standard benchmark called SPECpower_ssj2008 from 2007 to 2010. Since 2008, both the hardware providers and the operating system software providers of servers have proposed different energy management frameworks. Therefore, the CPU power model is no longer a simple one-dimensional regression model. Chung-Hsing then proposed a one-dimensional exponential model, that lacks universality because it is only used for computationally intensive applications and its model parameters are derived from empirical values. Lee et al. [19] used the maximum power, minimum power, and CPU utilization rate of servers to build a corresponding power model. Beloglazov et al. [2] used the maximum power, CPU utilization, and ratio of idle to maximum powers of server to build their power models. These add-ons [19], [2] are essential improvements to the basic linear model. In addition to modeling based on CPU utilization, it is also possible to build CPU power model at the system event level or instruction level. Contreras et al. [30] built power models by collecting data on system events, but this approach relies on the specific processor architecture, and the data collection of system events is not necessarily feasible in a virtualized environment. Power models at the instruction level, however, aim to establish the relation between the power and execution of instructions, which is difficult in practical operation. For example, in Ref. [7] the micro-benchmark test programme was used to determine the power of a single instruction. But the corresponding experimental results show that a power model at the instruction level is also dependent on the processor architecture and does not yield have a high level of accuracy.
Song Jie et al. used CPU utilization and frequency to build a CPU power model, and innovatively proposed a polynomial model by using the partial derivative. They also analyzed the power characteristics and optimization methods of CPU under different types of workloads [31]. Cerotti et al. [4] proposed a simple and effective CPU power model which is capable to provide accurate power estimates by taking standard CPU features like dynamic frequency scaling and hyperthreading into account. Lin Chuang et al. studied the CPU power models of cloud servers based on the operating frequency and found a linear relation between CPU power and the cube of CPU operating frequency when CPU is bearing full load [35]. Yu Junyang et al. used the resource utilization of three key components of computer (CPU, memory and disk) to establish the computer system power model [37]. They suggested that the components dominating the energy consumption of computer system are not singular when the system is under different loads, which provides useful suggestions for power modeling. Ye et al. studied the power modeling of virtual machines in the cloud environment, including functional component modeling and the overall virtual machine modeling [36]. They built a virtual machine power model based on power models of the key components of servers.
1.1. MotivationWe have previously studied the power modeling of virtual machines under CPU-intensive workloads in a cloud environment [33]. Through an experimental analysis of power characteristics of virtual machines under different workloads, we found that the functional relation of the power of virtual machines and the CPU utilization rate is between the linear function and the exponential function, and we thus proposed a power model of virtual machines based on the power function.The foregoing analyses reveal that the mainstream CPU power models behave according to the linear, polynomial, exponential and power function models. The linear model has poor accuracy. The problem associated with the polynomial model is that the number of polynomialÂ terms is hard to determine and parameter turning is complicated [24]. The optimal parameters of the exponential model are hard to obtain, and they are different for each specific situation therefore lacking universality. Although the power function model makes some improvements over the linear, polynomial and exponential models, its estimation accuracy becomes unstable with recent changes in the CPU energy consumption characteristics of servers. Given these known problems from the prior arts, we therefore conducted a statistical analysis and classification of historical CPU power data collected from the SPECpower_ssj2008 dataset. We identified the following characteristics in the CPU power curves of the latest servers in recent years: first the CPU power increases rapidly at a lower utilization rate, then slows down as the utilization rate increases. It finally increases rapidly again at a higher utilization rate because of the usage of turbo technology. Based on these characteristics, we propose a new power-exponent function model (PEFM) based on the CPU utilization rate with the purpose of reducing the model complexity and calculating through the empirical parameter (only one training parameter). We also put forward a novel hardware-aware CPU power measurement (HCPM) according to the analytical results of the SPECpower_ssj2008 dataset. Then a distributed energy meter (DEM) system is implemented for CPU power estimation of cloud servers in the cloud environment. Finally, extensive experiments based on DEM are carried out to evaluate the PEFM and HCPM. The experimental results show that the PEFM and HCPM can provide high levels of accuracy in estimating the CPU power of cloud servers in a cloud environment.
1.2. ContributionsThe main contributions reported in this paper are as follows:1)By analyzing the CPU power data from the SPECpower_ssj2008 dataset, it is discovered that the CPU power characteristics of the latest servers can be well interpreted by the power-exponent function. Thus, a new PEFM based on the CPU utilization rate is put forward.2)Based on the PEFM, we further propose a novel hardware-aware CPU power measurement (HCPM). This method can select an appropriate CPU power model through the CPU launch year. HCPM can achieve high levels of accuracy in estimating CPU power of cloud servers without model training.3)Extensive experiments are carried out based on the DEM to evaluate the PEFM and HCPM. DEM is a distributed system for the CPU power estimation of cloud servers in cloud environment, which is implemented by our team.4)To evaluate the estimation accuracy of the HCPM and verify whether it is suitable for estimating the CPU power of cloud servers in cloud environment, stand-alone server and cluster experiments are conducted for the HCPM using the DEM. The experimental results show that the HCPM can achieve high levels of accuracy in estimating the CPU power of cloud servers. Therefore HCPM is suitable for a cloud environment.
1.3. OrganizationThe remainder of this paper is organized as follows. In Section 2 the evolution of CPU power models is introduced, with several mainstream examples illustrated. In Section 3 the PEFM is described according to the analysis of CPU power data from the SPECpower _ssj2008 dataset. In Section 4 HCPM is proposed; and it is evaluated through extensive experiments based on the DEM in Section 5. Section 6 concludes our research.
