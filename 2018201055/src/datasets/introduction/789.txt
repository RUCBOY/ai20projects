The1 internet of things (IoT) real-time applications including smart healthcare, military surveillance, smart buildings, smart transportation require high bandwidth and sufficient processing power to perform their tasks [2]. Hence, it is extremely challenging to manage and store a large amount of data, especially when it surges, locally and temporarily. Consequently, it may require external rental storage space and processing resources [3], [4], [5]. Apart from providing fast and quick information, the data enables “tools of wisdom” for end-users by providing judicious options, decisions, and analytical predictions that help in improving their daily life operations. To enable these operations, a substantial amount of processing is required which is not possible with IoT devices that are typically equipped with lightweight processing capabilities. For this purpose, the IoT applications use the services of cloud computing to perform computing and storage operations. Finally, the results of processed data are sent back to the IoT device, which is closer to the user, as per application requirement [6], [7].
When the number of requests sent to the cloud increases, the congestion on the network also exacerbates, which is due to the higher core network bandwidth usage and the centralization of cloud datacenters. These effects can become more severe when billions of devices will be deployed worldwide [8], [9]. Therefore, the utilization of external resources may not sufficiently cater to real-time applications. To address these underlying issues faced in the IoT-cloud paradigm, fog computing is utilized that creates a middle layer between IoT devices and cloud datacenters [10], [11], [12]. Furthermore, in fog computing, IoT resources like intelligent routers, switches, hubs, sensors, and cameras are utilized that are capable to accommodate requests of real-time critical applications [13]. Similarly, fog gateway is another important component of this middle layer that intelligently classifies the applications to be processed on fog or cloud. Furthermore, with the advancements in the fog computing paradigm, several new applications are envisioned and implemented, such as distributed edge computing, real-time processing, live streaming, and face identification [14], [15]. According to the Cisco survey, 50–100 billion IoT devices are expected to be deployed by 2020. Due to the ever-increasing demand for resources, it is crucial to identify and optimize the potential capabilities of processing and storage used in other application domains in the vicinity of the end devices [16], [17].
The number of vehicles on the roads is increasing which is leading to traffic-related issues such as accident, wastage of time, and pollution [18]. To address the traffic-related problems and to create an efficient collaboration among vehicles, vehicular ad-hoc networks (VANETs) are being introduced. This network is a form of mobile ad-hoc network (MANet) that provides a communication interface for vehicle-to-vehicle (V2V) and vehicle-to-infrastructure interaction (V2I) [19]. These networks are considered to be the core component of the next-generation intelligent transport system (ITS). However, VANET provides limited area communication facility due to which end-users are restricted to communicate in a short-range. A variety of multi-hop and hierarchical routing protocols are proposed to overcome the limited range communication problem in VANET [20]. Furthermore, a user needs a platform that can be used for data storage and processing during vehicle communication. For this purpose, a vehicular ad-hoc cloud network (VACNs) is proposed, in which cloud-like services are provided to (VANETs).
A vehicular cloud (VC) paradigm is introduced to connect the vehicles to form a cloudlet [18]. These cloudlets commonly exist at parking-lots that provide cloud-like services and are further integrated with traditional cloud network to collaboratively complete the tasks [21]. However, cloudlets are limited in geographical distribution and a certain amount of vehicles are required to create a cloudlet. Therefore, due to a limited number of cloudlets, congestion is created in the network, and resources of vehicles are not fully utilized. So, vehicles as fog devices are considered [22], [23] to provide cloud-like services. The application scenario in Fig. 1 illustrates the usage of vehicles as a fog device in the network. In this scenario, a hospital contains IoT devices that require resources. For instance, instead of deploying fog infrastructure [24], parked or stationary vehicles can be utilized as fog resources. Hence, there is a potential to utilize and leverage vehicles as fog nodes to meet the future demands of computing [25]. In current vehicles, energy consumption is not among the major concerns due to the utilization of gasoline and an integrated recharging system; however, it is envisioned that electric vehicles (EVs) will widely be used in the near future [26], [27]. Consequently, the EVs will be an integral part of modern transportation systems. These systems are expected to utilize advanced technologies such as 5G, 6G, and IoT. Therefore, energy efficiency will be a crucial part of the modern vehicular system. Based on these investigations, in this paper, we propose an energy- and performance-aware load-balancing mechanism in vehicular fog networks.Download : Download high-res image (437KB)Download : Download full-size imageFig. 1. An application scenario of vehicular fog computing.
As discussed earlier, a vehicular fog network being mobile in nature poses more challenges to be utilized as a distributed system. To avoid the bottleneck issue and to utilize the available bandwidth efficiently, load-balancing techniques are considered an efficient solution in mitigating the aforementioned problems [28], [29]. However, implementing scheduling and load-balancing techniques in a dynamic and mobile network like VANET is extremely challenging. While a majority of the existing load-balancing schemes focus on static fog environments [13], [30], [31]. The proposed load balancing mechanism works in two phases: First, it performs clustering while considering the mobility of fog devices. Second, a capacity-based load-distribution mechanism efficiently balances the load among the vehicular nodes. The contributions of this paper are summarized as follows:
1.The paper proposes energy- and performance-aware vehicular fog distributed computing architecture and methodology to efficiently process the IoT requests.2.The paper proposes a dynamic clustering approach that considers the position, speed, and direction of vehicles. Moreover, we describe a mechanism to identify the time of leaving (of a vehicle) from the cluster. Additionally, the technique predicts the future position of the vehicles considering the dynamic nature of vehicular networks. This feature helps in the formation of clusters in a dynamic environment.3.Another contribution of the paper is a capacity-based load-distribution mechanism to perform the local load-balancing within the cluster and inter-cluster global load-balancing. This technique allows us to avoid congestion, lower energy consumption, and improve the performance of the network.4.To illustrate the practical applicability of the proposed work, we consider realistic vehicular network scenarios and implement them in a simulation environment. The analysis of scenarios depicts that we can utilize the abundant vehicular resources as fog nodes. Moreover, dynamic clustering and load-balancing improve the energy and performance of the network.5.The paper presents results obtained through simulations using the state-of-the-art NS2 network simulation environment. We evaluate the performance of the proposed approach by implementing the above-mentioned vehicular scenarios in NS2. The results demonstrate that the proposed scheme achieves balanced network energy consumption, reduced network delay, and improved network utilization.
The rest of the paper is organized as follows: Section 2 presents the study of several relevant research work. Section 3 illustrates the proposed methodology. Section 4 presents the linear programming based solution for optimal network packet delivery ratio. Section 5 provides evaluation and experimentation details. Section 6 includes conclusions and future research extensions.
