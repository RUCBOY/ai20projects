Solution of tridiagonal systems of equations belongs to the fundamental tasks in computational mathematics and computer science. Scientific, technical and financial applications often apply linear systems of equations with tridiagonal matrices the diagonal elements of which can be both constant and non-constant. It is enough to mention the Laplace or Black–Scholes partial differential equations, spline theory and its applications, such as CAD systems or robotics [1], [2].
The paper proposes new computational algorithms for solving tridiagonal systems using higher-order system reductions, where the main role is played by a series of model equations derived recursively from the original one.
The story of the model equation based higher-order dyadically reduced tridiagonal systems began with [3], thanks to an interesting geometric result that says two cubic polynomials over any two neighboring intervals of equal length form a spline of class C2, if their Hermite coefficients are computed solely from a quartic polynomial. Surprising here is the fact that it is sufficient to require the equality of function values and first derivatives of the quartic and the corresponding cubic polynomials at the three endpoints of the two intervals, and then the second derivatives of the cubic polynomials will be equal at the shared middle endpoint as well. From this comprehension came the idea to investigate instead of cubic polynomials quartic ones with half as many equations that led to a new model equation based reduced tridiagonal system. While the model equation of the original tridiagonal system with constant sub, main and super diagonal elements a,b and c is ax0+bx1+cx2=r1, the model equation of the (first) reduced system takes the form a2x0+(2ac−b2)x2+c2x4=ar1−br2+cr3,where r∗ are rows of the original system.
The speedup of the serial reduction algorithm was investigated in several papers for both spline curves and surfaces [4], [5], [6] over uniform and nonuniform meshes and its value ranges between 1.6 and 2. To increase the speedup, the geometric approach could not be applied to the derivation of higher-order model equations and then to further reduction of tridiagonal systems. In the end, we succeeded in the derivation of new model equations for dyadic reduction thanks to algebraic abstraction using matrices. As an example we provide here a model equation of the second reduced system for a=1, b=4 and c=2 that takes the form x0−136x4+16x8=r1−4r2+14r3−48r4+28r5−16r6+8r7.
After understanding the mechanism of the first-order reduced system in previous papers, we turn to the application and analysis of higher-order reduced systems. Searching for appropriate tridiagonal solvers for comparison, we were brought to the k-step cyclic reduction (CR). It was clear after reading it that we rediscovered Golub’s 1-step CR [7]. Golub has achieved further system reduction using recursion. This article shows that higher reduction can be achieved also in another way using higher-order model equations. The paper compares the recursive k-step CR and a new approach that uses two types of reductions based on higher-order model equations and recursion, and which we will label as k-step qth order CR.
The acquirements about the CR can be summarized as follows. The reduction algorithm breaks down the original process into two phases, each solving one subsystem. The first phase comprises the reduced interface subsystem containing half of the original unknowns. In the second phase, the equations containing the remaining unknowns become mutually independent after substitution of the calculated values from the first phase and therefore trivially solvable using explicit formulas. Particular attention should be given to the case when the count of equations in the original system is odd, which needs a slightly different last equation in the reduced system.
Let us underline the differences between Golub’s (1-step) CR and our qth order CR. Unlike the standard CR that reduced the tridiagonal system to one half, the new qth order CR reduces the system by 2−q in a single step.
The size reduction of a tridiagonal system also has its cost. The information of the original system is preserved due to more complex coefficients and right-hand sides of the reduced one. This fact does not increase the computational costs, according to our numerical experiments, for moderate values of q, however, it may affect the numerical accuracy of computations.
The two-phase reduction algorithm treats each phase differently. The first phase may be solved using such methods as LU factorization, Thomas algorithm, or for constant diagonals the Cholesky factorization. The second phase can be computed using a parallel loop. Both phases benefit from the instruction level parallelism (ILP) of modern processor architectures, where its effect may not be so significant in standard serial tridiagonal solvers.
The rest of the paper is organized as follows. Section 2 formulates the problem statement. Sections 3 Enhanced cyclic reduction, 4 Enhanced block cyclic reduction explain the essence of higher-order standard and block cyclic reduction. The next section provides implementation details and experimental results. Section 6 contains a discussion.
