DNA computing is a thrilling technology in computing. Instead of silicon-based electronic circuits, DNA computing utilizes molecular reaction techniques to compute on DNA molecules. DNA computing can be dated back to 1990s when Adleman proposed the computational model to solve the 7-node Hamiltonian path problem using DNA molecules [1]. This is the first attempt to solve mathematical problems with molecular reaction techniques. Afterwards, his group tried to solve the 20-variable 3-SAT problem with DNA computing [2]. Even though the idea is novel, the relevant application is still limited due to the customized design of the model merely for one specific problem [3], [4]. A different model proposed by Winfree aims for solving the counting problems using DNA molecules to mimic the Wang tiles [5]. Instead of exhaustive enumeration and filtering, this model exploited the structural advantages of DNA computing by converting the problem into a binary computation which is then mapped to DNA molecular interactions. However, this model is also limited by its customized application scope.
The emergence of DNA automaton promoted the development of general DNA computing techniques [6]. By defining a set of data storage steps that transform digital data into DNA sequence patterns and the accompanying operations, the DNA molecules can be used to implement an automata for general computing [7], [8]. Since then, DNA computing started to be demonstrated for its unprecedented potential in general computation. It could be used to construct the substitute parts of the existing electronic circuits for general computing.
General DNA computation became the main trend among DNA computing researchers in the early 21st century. Specifically, DNA walker is firstly proposed by Yin et al. for information transduction along DNA tracks [9]. Similar to the electric charge walker [9], the tracks of DNA walkers can be designed to implement the integrated circuits for general or specific purposes [10]. However, the DNA walker is explicitly implemented to mimic the behavior of electric circuits without making full use of the natural superiority of DNA computing features such as its high data density and parallel reaction capability.
Few years later, the DNA strand displacement (DSD) technology led the development of DNA computing to a new stage [11]. Built upon DNA hybridization, the DSD technology transforms data information through designed DSD reactions. A specific operation (i.e. logical AND, logical OR, numeric ADD, etc.) can be implemented by combining a set of DNA reactions. This technology fully utilizes the superiority of DNA computing characteristics (e.g. the high parallelism as well as storage density). It also helps building reusable components for DNA computing; it is equivalent to the logical modules of large-scale integrated circuits. Since then, researchers have attempted to construct neural network hardware using DSD components [12]. This can be a promising trend for the application of DNA computing in light of the weakness of DNA computing such as the long warming-up time and the compatibility with current computing techniques. Furthermore, deep learning tends to become one of the most popular techniques in the near future. However, it requires a large amount of computing resources and energy. Therefore, DNA computing seems to be an ideal alternative technique that could overcome those shortcomings [13].Download : Download high-res image (159KB)Download : Download full-size imageFig. 1. A typical example of DNA strand displacement showing how single-strand DNA A displaces one strand of the double-strand DNA S1, resulting in the new double-strand DNA S2 and single-strand DNA B. Each letter represents a long (15-nucleotide) recognition domain.
Recently, several DNA computing systems are proposed in the literature, making this area appeals more attentions than ever before. Switching circuits (SC) is firstly proposed by Shannon [14] and now applied to digital computing system building [15]. SC is characterized for its fast speed and high bandwidth. However, compared with DSD, it has longer transmission delay and lower error tolerance. Another simplified design is proposed to achieve a faster speed in calculations [16]. But it is constructed only by AND and OR gates which lack diversity in constructing systems. The technique strand displacement synthesis is also used in developing computing system [17]. It is more flexible in constructing the systems, but it requires more space to store the synthesis sequences; it would not be a problem in DSD-based system.
Currently, the traditional silicon-based computing works well for most of the sequential tasks. However, the increasing demand in parallel computing on both computer center or consumer devices results in different problems such as energy efficiency [18], [19]. DNA computing is suitable for parallel computing, thanks to its high throughput computing and high-density data storage efficiency. On the other hand, its requirement for running environment and the compatibility with the existing computing tool stacks limits its development and wide adaptation. As a result, DNA computing cannot become the full replacement of silicon-based computing but an auxiliary system that is responsible for large-scale parallel computing on high-volume data in a stochastic manner.
Although the research area of DNA computing has beensteadily developing in recent years, its potential impacts on global computing platforms remain obscure. Therefore, we introduced its detailed techniques in the following sections and proposed a prototype system which adopts DNA computing for building a neural network model. The proposed system design could shed lights on understanding how this technology can contribute to general-purpose computation with examples. The rest of this paper is arranged as follows: the second section gives a comprehensive review of the concrete techniques and rationale in DNA computing; the third section demonstrates the architecture design of the proposed DNA computing device, its software stack, and the simulation experiments; the fourth section summarizes the above content and explores the potential future work.
